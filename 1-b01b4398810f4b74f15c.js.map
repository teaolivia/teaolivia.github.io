{"version":3,"sources":["webpack:///./node_modules/react-burger-menu/lib/menuFactory.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/core-js/modules/es6.string.link.js","webpack:///./node_modules/react-burger-menu/lib/BurgerMenu.js","webpack:///./node_modules/react-helmet/lib/Helmet.js","webpack:///./node_modules/react-burger-menu/lib/snapsvgImporter.js","webpack:///./node_modules/react-helmet/lib/HelmetConstants.js","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./node_modules/react-burger-menu/lib/menus/slide.js","webpack:///./node_modules/react-burger-menu/lib/baseStyles.js","webpack:///./node_modules/react-burger-menu/lib/BurgerIcon.js","webpack:///./node_modules/react-burger-menu/lib/CrossIcon.js","webpack:///./node_modules/react-burger-menu/lib/menus/stack.js","webpack:///./node_modules/react-burger-menu/lib/menus/elastic.js","webpack:///./node_modules/snapsvg-cjs/dist/snap.svg-cjs.js","webpack:///./node_modules/eve/eve.js","webpack:///./node_modules/react-burger-menu/lib/menus/bubble.js","webpack:///./node_modules/react-burger-menu/lib/menus/push.js","webpack:///./node_modules/react-burger-menu/lib/menus/pushRotate.js","webpack:///./node_modules/react-burger-menu/lib/menus/scaleDown.js","webpack:///./node_modules/react-burger-menu/lib/menus/scaleRotate.js","webpack:///./node_modules/react-burger-menu/lib/menus/fallDown.js","webpack:///./node_modules/react-burger-menu/lib/menus/reveal.js","webpack:///./node_modules/react-side-effect/lib/index.js","webpack:///./node_modules/exenv/index.js","webpack:///./node_modules/shallowequal/index.js","webpack:///./node_modules/react-fast-compare/index.js","webpack:///./node_modules/react-helmet/lib/HelmetUtils.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_get","_x3","_x4","_x5","_again","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","getter","get","parent","getPrototypeOf","_interopRequireDefault","obj","__esModule","default","_react","__webpack_require__","_react2","_reactDom2","_propTypes2","_baseStyles2","_BurgerIcon2","_CrossIcon2","styles","Menu","_Component","instance","TypeError","_classCallCheck","this","state","isOpen","Error","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_inherits","Component","_this","options","noStateChange","newState","applyWrapperStyles","setState","onStateChange","disableAutoFocus","firstItem","document","querySelector","focus","activeElement","blur","body","timeoutId","clearTimeout","setTimeout","set","applyClass","el","className","classList","htmlClassName","bodyClassName","pageWrap","pageWrapId","handleExternalWrapper","outerContainer","outerContainerId","id","wrapperStyles","wrapper","getElementById","builtStyles","getStyle","prop","style","applyOverflow","console","error","index","inline","propName","replace","charAt","toUpperCase","output","width","formattedWidth","right","e","window","event","disableCloseOnEsc","keyCode","toggleMenu","disableOverlayClick","customOnKeyDown","onkeydown","listenForClose","bind","prevProps","morphShape","path","_this2","svg","findDOMNode","lib","select","animate","attr","pathInitial","_this3","createElement","noOverlay","overlayClassName","trim","onClick","shouldDisableOverlayClick","getStyles","morphShapeClassName","height","viewBox","preserveAspectRatio","d","menuClassName","itemListClassName","Children","map","children","item","extraProps","itemClassName","filter","join","tabIndex","cloneElement","customCrossIcon","customIcon","crossButtonClassName","crossClassName","customBurgerIcon","burgerButtonClassName","barClassName","burgerBarClassName","propTypes","string","oneOfType","element","oneOf","func","bool","isRequired","number","defaultProps","module","dP","f","FProto","nameRE","match","createHTML","url","slide","stack","elastic","bubble","push","pushRotate","scaleDown","scaleRotate","fallDown","reveal","Helmet","_reactSideEffect2","_reactFastCompare2","_HelmetUtils","_HelmetConstants","_objectWithoutProperties","keys","indexOf","_class","_temp","HelmetSideEffects","reducePropsToState","handleClientStateChange","mapStateOnServer","HelmetExport","_React$Component","HelmetWrapper","self","ReferenceError","_possibleConstructorReturn","apply","shouldComponentUpdate","nextProps","mapNestedChildrenToProps","child","nestedChildren","type","TAG_NAMES","SCRIPT","NOSCRIPT","innerHTML","STYLE","cssText","flattenArrayTypeChildren","_ref","_extends2","arrayTypeChildren","newChildProps","concat","mapObjectTypeChildren","_ref2","_extends3","_extends4","newProps","TITLE","titleAttributes","BODY","bodyAttributes","HTML","htmlAttributes","mapArrayTypeChildrenToProps","newFlattenedProps","forEach","arrayChildName","_extends5","warnOnInvalidChildren","mapChildrenToProps","_child$props","childProps","convertReactPropstoHtmlAttributes","LINK","META","render","_props","canUseDOM","base","arrayOf","node","defaultTitle","defer","encodeSpecialCharacters","link","meta","noscript","onChangeClientState","script","title","titleTemplate","peek","rewind","mappedState","baseTag","linkTags","metaTags","noscriptTags","scriptTags","styleTags","renderStatic","Snap","ATTRIBUTE_NAMES","BASE","HEAD","REACT_TAG_MAP","VALID_TAG_NAMES","name","TAG_PROPERTIES","CHARSET","CSS_TEXT","HREF","HTTPEQUIV","INNER_HTML","ITEM_PROP","NAME","PROPERTY","REL","SRC","accesskey","charset","class","contenteditable","contextmenu","http-equiv","itemprop","tabindex","HELMET_PROPS","DEFAULT_TITLE","DEFER","ENCODE_SPECIAL_CHARACTERS","ON_CHANGE_CLIENT_STATE","TITLE_TEMPLATE","HTML_TAG_MAP","reduce","SELF_CLOSING_TAGS","HELMET_ATTRIBUTE","$export","fails","defined","quot","tag","attribute","S","String","p1","exec","O","P","F","test","toLowerCase","split","_menuFactory","_menuFactory2","overlay","position","zIndex","background","opacity","MozTransform","MsTransform","OTransform","WebkitTransform","transform","transition","menuWrap","menu","boxSizing","overflow","itemList","display","_x","_x2","BurgerIcon","hover","left","top","bmBurgerBarsHover","icon","bmIcon","bar","getLineStyle","bmBurgerBars","bmBurgerButton","onMouseOver","onMouseOut","margin","padding","border","fontSize","cursor","CrossIcon","bmCross","getCrossStyle","bmCrossButton","nthChild","_snapsvgImporter2","pathOpen","mina","easeinout","whiteSpace","eve","requestID","animations","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","Date","getTime","isArray","Array","a","toString","idgen","idprefix","timer","now","sta","val","s","ds","b","dur","B","speed","spd","duration","stopit","update","pause","pdif","resume","frame","res","start","j","jj","end","easing","timeStamp","len","A","anim","linear","status","stop","time","getById","n","easeout","Math","pow","easein","q","Q","sqrt","x","y","t","abs","backin","backout","sin","PI","bounce","p","root","w","h","nodeType","wrap","is","Element","glob","doc","Paper","version","_","win","tokenRegex","objNotationRegex","has","Str","toFloat","parseFloat","toInt","parseInt","math","mmax","max","mmin","min","E","round","objectToString","colourRegExp","commaSpaces","separator","hsrg","hs","rg","pathCommand","tCommand","pathValues","ID","xlink","xmlns","hub","$","createTextNode","text","createComment","substring","getAttributeNS","getAttribute","nodeValue","setAttributeNS","setAttribute","removeAttribute","createElementNS","o","isFinite","slice","cacher","scope","postprocessor","newf","arg","args","cache","count","array","ii","splice","repush","shift","rad","deg","format","str","all","quote","quotedName","isFunc","replacer","clone","angle","tan","cos","asin","num","acos","atan","atan2","x1","y1","x2","y2","x3","y3","len2","closestPoint","distance2","dx","dy","best","bestLength","scan","scanDistance","pathNode","pathLength","getTotalLength","precision","pathSegList","numberOfItems","bestDistance","Infinity","scanLength","getPointAtLength","before","after","beforeLength","afterLength","beforeDistance","afterDistance","distance","snapTo","values","tolerance","rem","getRGB","colour","r","g","hex","rgbtoString","toHex","red","green","blue","rgb","hsb2rgb","hsl2rgb","hsb","hsl","l","toFixed","color","getElementsByTagName","out","defaultView","getComputedStyle","getPropertyValue","hsbtoString","hsltoString","prepareRGB","clr","packageRGB","rgb2hsl","rgb2hsb","v","R","G","X","C","V","L","M","m","parsePathString","pathString","pth","arr","paramCounts","c","u","z","data","params","parseTransformString","TString","svgTransform2string","tstr","rgTransform","transform2matrix","bbox","tdata","Matrix","bb","tlen","command","absolute","inver","invert","translate","rotate","scale","add","_unit2px","getSomeSVG","mgr","fill","appendChild","getW","getBBox","getH","nam","removeChild","contains","compareDocumentPosition","ownerSVGElement","add2group","list","childNodes","snap","paper","tagName","nodeName","anims","mask","pattern","symbol","method","Fragment","frag","make","defs","proto","ownerDocument","dom","contentDocument","getSomeDefs","parentNode","pdefs","query","selectAll","nodelist","querySelectorAll","setInterval","attributes","firstDefined","json","att","parse","createDocumentFragment","full","div","firstChild","fragment","ch","toJSON","jsonFiller","on","nt","css","lastIndexOf","letter","cssAttr","alignment-baseline","baseline-shift","clip","clip-path","clip-rule","color-interpolation","color-interpolation-filters","color-profile","color-rendering","direction","dominant-baseline","enable-background","fill-opacity","fill-rule","flood-color","flood-opacity","font","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","glyph-orientation-horizontal","glyph-orientation-vertical","image-rendering","kerning","letter-spacing","lighting-color","marker","marker-end","marker-mid","marker-start","pointer-events","shape-rendering","stop-color","stop-opacity","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-anchor","text-decoration","text-rendering","unicode-bidi","visibility","word-spacing","writing-mode","ajax","postData","req","XMLHttpRequest","pd","encodeURIComponent","open","setRequestHeader","once","onreadystatechange","readyState","send","load","responseText","getElementByPoint","canvas","elem","box","docElem","clientTop","clientLeft","elementFromPoint","opera","so","getBoundingClientRect","documentElement","pageYOffset","scrollTop","pageXOffset","scrollLeft","sr","createSVGRect","hits","getIntersectionList","plugin","elproto","unit2px","isWithoutTransform","getClientRects","removed","localMatrix","original","href","pathfinder","deflt","bboxwt","realPath","matrix","propString","extractTransform","doReturn","papa","global","getCTM","local","ms","localString","toTransformString","globalMatrix","totalMatrix","diffMatrix","total","gradientTransform","patternTransform","append","it","appendTo","prepend","first","insertBefore","prependTo","nextSibling","insertAfter","remove","asPX","use","xlink:href","cloneNode","els","ids","uses","urltest","linktest","oldid","old","fs","fixids","toDefs","toPattern","patternUnits","refX","refY","cx","cy","markerWidth","markerHeight","orient","eldata","chld","removeData","outerSVG","innerSVG","toDataURL","btoa","contents","unescape","matrixproto","norm","normalize","mag","aNew","bNew","multLeft","cNew","eNew","me","skewX","skew","skewY","fromCharCode","offset","determinant","row","scalex","shear","scaley","isSimple","isSuperSimple","noRotation","shorter","clipIt","reURLValue","URL","fillStroke","grad","gradient","attrs","deurl","gradrg","setFontSize","getFontSize","tokens","stops","seed","step","k","toAbsolute","txt","baseVal","vb","rx","ry","tp","textPath","tuner","chunk","tuned","setter","textExtract","chi","textContent","internal","rgNotSpace","addClass","clazz","finalValue","classes","curClasses","removeClass","pos","hasClass","toggleClass","flag","operators","+","-","/","*","reUnit","reAddon","getNumber","getUnit","unit","plus","evnt","atr","aUnit","op","isNaN","bplus","from","to","rect","circle","preload","onerror","src","img","onload","image","offsetWidth","offsetHeight","ellipse","group","vbx","vby","vbw","vbh","ptrn","vx","vy","vw","vh","line","polyline","points","polygon","Gstops","GaddStop","inserted","GgetBBox","GsetStops","addStop","gradientLinear","setStops","gradientRadial","fx","fy","unshift","gradientUnits","clear","next","p2s","paths","ps","sleep","r1","r2","r0","rectPath","pathClone","pathArray","getPointAtSegmentLength","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","bezlen","findDotsAtSegment","x4","y4","ll","t2","getTotLen","getLengthFactory","istotal","subpath","onlystart","point","sp","subpaths","path2curve","getSubpathsAtLength","t1","t13","t12","t3","mx","my","nx","ny","alpha","bezierBBox","curveDim","isPointInsideBBox","isBBoxIntersect","bbox1","bbox2","base3","p2","p3","p4","z2","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","intersect","denominator","px","py","px2","py2","interHelper","bez1","bez2","justCount","n1","n2","dots1","dots2","xy","di","di1","dj","dj1","ci","cj","interPathHelper","path1","path2","x1m","y1m","x2m","y2m","pi","pj","intr","kk","segment1","segment2","pathBBox","Y","dim","xmin","ymin","ellipsePath","getPath","pathToAbsolute","pa0","pa","crz","dots","pop","catmullRom2bezier","l2c","q2c","ax","ay","x0","y0","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","curve","bx","by","qx","qy","attrs2","processPath","pcom","T","a2c","large_arc_flag","sweep_flag","recursive","_120","f1","f2","rx2","ry2","df","f2old","x2old","y2old","c1","s1","c2","s2","hx","hy","m1","m2","m3","m4","newres","fixArc","pp","pcoms1","pcoms2","fixM","a1","a2","pfirst","seg","seg2","seglen","seg2len","crp","iLen","getSubpath","closest","inside","found","intersection","intersectionNumber","isPointInside","toRelative","lowerCase","rel","toCubic","pathi","Set","items","bindings","setproto","thisArg","Animation","each","begin","handler","cb","callbacker","aname","unbound","insertion","tail","todel","arglen","exclude","names","getEmpty","getViewBox","getColour","path2array","isNumeric","equal","Number","tt1","tt2","maxlength","equaliseTransform","arr1","arr2","bUnit","supportsTouch","events","touchMap","mousedown","mousemove","mouseup","getScroll","preventTouch","originalEvent","preventDefault","stopTouch","stopPropagation","addEvent","fn","realName","scrollY","scrollX","targetTouches","olde","clientX","clientY","addEventListener","removeEventListener","drag","dragMove","dragi","touch","touches","identifier","_drag","move_scope","dragUp","unmousemove","unmouseup","end_scope","start_scope","off","eventName","unbind","f_in","f_out","scope_in","scope_out","mouseover","mouseout","unhover","unmouseover","unmouseout","draggable","onmove","onstart","onend","origTransform","init","undrag","unmousedown","pproto","rgurl","filstr","filterUnits","def","shadow","grayscale","amount","sepia","saturate","hueRotate","amount2","brightness","contrast","firstLetter","getAlign","way","align","animation","inAnim","_attrs","_callback","curStatus","eq","fkeys","tkeys","saveColor","colors","A100","A200","A400","A700","mui","flat","pink","purple","deeppurple","indigo","lightblue","cyan","teal","lightgreen","lime","yellow","amber","orange","deeporange","brown","grey","bluegrey","turquoise","greensea","sunflower","emerland","nephritis","carrot","pumpkin","peterriver","belizehole","alizarin","pomegranate","amethyst","wisteria","clouds","silver","wetasphalt","midnightblue","concrete","asbestos","importMUIColors","__WEBPACK_AMD_DEFINE_RESULT__","current_event","comaseparator","numsort","lastDefined","objtos","ar","oldstop","listeners","indexed","queue","ce","sort","_events","nes","es","sep","RegExp","exist","subname","cur","nts","inodes","funcs","prune","steps","stepsTotal","nextStep","closeButton","transformOrigin","transformStyle","perspective","perspectiveOrigin","burgerIcon","_interopDefault","ex","React","React__default","ExecutionEnvironment","shallowEqual","handleStateChangeOnClient","WrappedComponent","mountedInstances","emitChange","SideEffect","recordedState","componentWillMount","componentDidUpdate","componentWillUnmount","displayName","getDisplayName","canUseWorkers","Worker","canUseEventListeners","attachEvent","canUseViewport","screen","objA","objB","compare","compareContext","ret","keysA","keysB","bHasOwnProperty","idx","valueA","valueB","keyList","hasProp","hasElementType","arrA","arrB","dateA","dateB","regexpA","regexpB","$$typeof","message","warn","_typeof","Symbol","iterator","_objectAssign2","clock","getTitleFromPropsList","propsList","innermostTitle","getInnermostProperty","innermostTemplate","innermostDefaultTitle","getOnChangeClientState","getAttributesFromPropsList","tagType","tagAttrs","current","getBaseTagFromPropsList","primaryAttributes","reverse","innermostBaseTag","lowerCaseAttributeKey","getTagsFromPropsList","approvedSeenTags","approvedTags","instanceTags","instanceSeenTags","primaryAttributeKey","attributeKey","tagUnion","rafPolyfill","currentTime","cafPolyfill","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","msg","_helmetCallback","commitTagChanges","updateAttributes","updateTitle","tagUpdates","updateTags","addedTags","removedTags","_tagUpdates$tagType","newTags","oldTags","flattenArray","possibleArray","elementTag","helmetAttributeString","helmetAttributes","attributesToRemove","attributeKeys","indexToSave","_i","tags","headElement","head","tagNodes","indexToDelete","newElement","styleSheet","some","existingTag","isEqualNode","generateElementAttributesAsString","convertElementAttributestoReactProps","initProps","getMethodsForTag","encode","toComponent","_initProps","attributeString","flattenedTitle","generateTitleAsString","_mappedTag","mappedTag","mappedAttribute","content","dangerouslySetInnerHTML","__html","generateTagsAsReactComponent","attributeHtml","tagContent","isSelfClosing","generateTagsAsString","initAttributes","_ref$title"],"mappings":"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","file":"1-b01b4398810f4b74f15c.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x3, _x4, _x5) { var _again = true; _function: while (_again) { var object = _x3, property = _x4, receiver = _x5; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x3 = parent; _x4 = property; _x5 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _baseStyles = require('./baseStyles');\n\nvar _baseStyles2 = _interopRequireDefault(_baseStyles);\n\nvar _BurgerIcon = require('./BurgerIcon');\n\nvar _BurgerIcon2 = _interopRequireDefault(_BurgerIcon);\n\nvar _CrossIcon = require('./CrossIcon');\n\nvar _CrossIcon2 = _interopRequireDefault(_CrossIcon);\n\nexports['default'] = function (styles) {\n  var Menu = (function (_Component) {\n    _inherits(Menu, _Component);\n\n    function Menu(props) {\n      _classCallCheck(this, Menu);\n\n      _get(Object.getPrototypeOf(Menu.prototype), 'constructor', this).call(this, props);\n      this.state = {\n        isOpen: false\n      };\n\n      if (!styles) {\n        throw new Error('No styles supplied');\n      }\n    }\n\n    _createClass(Menu, [{\n      key: 'toggleMenu',\n      value: function toggleMenu() {\n        var _this = this;\n\n        var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n        var isOpen = options.isOpen;\n        var noStateChange = options.noStateChange;\n\n        var newState = {\n          isOpen: typeof isOpen !== 'undefined' ? isOpen : !this.state.isOpen\n        };\n\n        this.applyWrapperStyles();\n\n        this.setState(newState, function () {\n          !noStateChange && _this.props.onStateChange(newState);\n\n          if (!_this.props.disableAutoFocus) {\n            // For accessibility reasons, ensures that when we toggle open,\n            // we focus the first menu item if one exists.\n            if (newState.isOpen) {\n              var firstItem = document.querySelector('.bm-item');\n              if (firstItem) {\n                firstItem.focus();\n              }\n            } else {\n              if (document.activeElement) {\n                document.activeElement.blur();\n              } else {\n                document.body.blur(); // Needed for IE\n              }\n            }\n          }\n\n          // Timeout ensures wrappers are cleared after animation finishes.\n          _this.timeoutId && clearTimeout(_this.timeoutId);\n          _this.timeoutId = setTimeout(function () {\n            _this.timeoutId = null;\n            if (!newState.isOpen) {\n              _this.applyWrapperStyles(false);\n            }\n          }, 500);\n        });\n      }\n\n      // Applies component-specific styles to external wrapper elements.\n    }, {\n      key: 'applyWrapperStyles',\n      value: function applyWrapperStyles() {\n        var set = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\n        var applyClass = function applyClass(el, className) {\n          return el.classList[set ? 'add' : 'remove'](className);\n        };\n\n        if (this.props.htmlClassName) {\n          applyClass(document.querySelector('html'), this.props.htmlClassName);\n        }\n        if (this.props.bodyClassName) {\n          applyClass(document.querySelector('body'), this.props.bodyClassName);\n        }\n\n        if (styles.pageWrap && this.props.pageWrapId) {\n          this.handleExternalWrapper(this.props.pageWrapId, styles.pageWrap, set);\n        }\n\n        if (styles.outerContainer && this.props.outerContainerId) {\n          this.handleExternalWrapper(this.props.outerContainerId, styles.outerContainer, set);\n        }\n      }\n\n      // Sets or unsets styles on DOM elements outside the menu component.\n      // This is necessary for correct page interaction with some of the menus.\n      // Throws and returns if the required external elements don't exist,\n      // which means any external page animations won't be applied.\n    }, {\n      key: 'handleExternalWrapper',\n      value: function handleExternalWrapper(id, wrapperStyles, set) {\n        var wrapper = document.getElementById(id);\n\n        if (!wrapper) {\n          console.error(\"Element with ID '\" + id + \"' not found\");\n          return;\n        }\n\n        var builtStyles = this.getStyle(wrapperStyles);\n\n        for (var prop in builtStyles) {\n          if (builtStyles.hasOwnProperty(prop)) {\n            wrapper.style[prop] = set ? builtStyles[prop] : '';\n          }\n        }\n\n        // Prevent any horizontal scroll.\n        // Only set overflow-x as an inline style if htmlClassName or\n        // bodyClassName is not passed in. Otherwise, it is up to the caller to\n        // decide if they want to set the overflow style in CSS using the custom\n        // class names.\n        var applyOverflow = function applyOverflow(el) {\n          return el.style['overflow-x'] = set ? 'hidden' : '';\n        };\n        if (!this.props.htmlClassName) {\n          applyOverflow(document.querySelector('html'));\n        }\n        if (!this.props.bodyClassName) {\n          applyOverflow(document.querySelector('body'));\n        }\n      }\n\n      // Builds styles incrementally for a given element.\n    }, {\n      key: 'getStyles',\n      value: function getStyles(el, index, inline) {\n        var propName = 'bm' + el.replace(el.charAt(0), el.charAt(0).toUpperCase());\n\n        // Set base styles.\n        var output = _baseStyles2['default'][el] ? this.getStyle(_baseStyles2['default'][el]) : {};\n\n        // Add animation-specific styles.\n        if (styles[el]) {\n          output = _extends({}, output, this.getStyle(styles[el], index + 1));\n        }\n\n        // Add custom styles.\n        if (this.props.styles[propName]) {\n          output = _extends({}, output, this.props.styles[propName]);\n        }\n\n        // Add element inline styles.\n        if (inline) {\n          output = _extends({}, output, inline);\n        }\n\n        return output;\n      }\n    }, {\n      key: 'getStyle',\n      value: function getStyle(style, index) {\n        var width = this.props.width;\n\n        var formattedWidth = typeof width !== 'string' ? width + 'px' : width;\n        return style(this.state.isOpen, formattedWidth, this.props.right, index);\n      }\n    }, {\n      key: 'listenForClose',\n      value: function listenForClose(e) {\n        e = e || window.event;\n\n        // Close on ESC, unless disabled\n        if (!this.props.disableCloseOnEsc && this.state.isOpen && (e.key === 'Escape' || e.keyCode === 27)) {\n          this.toggleMenu();\n        }\n      }\n    }, {\n      key: 'shouldDisableOverlayClick',\n      value: function shouldDisableOverlayClick() {\n        if (typeof this.props.disableOverlayClick === 'function') {\n          return this.props.disableOverlayClick();\n        } else {\n          return this.props.disableOverlayClick;\n        }\n      }\n    }, {\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        // Bind ESC key handler (unless custom function supplied).\n        if (this.props.customOnKeyDown) {\n          window.onkeydown = this.props.customOnKeyDown;\n        } else {\n          window.onkeydown = this.listenForClose.bind(this);\n        }\n\n        // Allow initial open state to be set by props.\n        if (this.props.isOpen) {\n          this.toggleMenu({ isOpen: true, noStateChange: true });\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        window.onkeydown = null;\n\n        this.applyWrapperStyles(false);\n      }\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate(prevProps) {\n        var _this2 = this;\n\n        var wasToggled = typeof this.props.isOpen !== 'undefined' && this.props.isOpen !== this.state.isOpen && this.props.isOpen !== prevProps.isOpen;\n        if (wasToggled) {\n          this.toggleMenu();\n          // Toggling changes SVG animation requirements, so we defer these until the next componentDidUpdate\n          return;\n        }\n\n        if (styles.svg) {\n          (function () {\n            var morphShape = _reactDom2['default'].findDOMNode(_this2, 'bm-morph-shape');\n            var path = styles.svg.lib(morphShape).select('path');\n\n            if (_this2.state.isOpen) {\n              // Animate SVG path.\n              styles.svg.animate(path);\n            } else {\n              // Reset path (timeout ensures animation happens off screen).\n              setTimeout(function () {\n                path.attr('d', styles.svg.pathInitial);\n              }, 300);\n            }\n          })();\n        }\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this3 = this;\n\n        return _react2['default'].createElement(\n          'div',\n          null,\n          !this.props.noOverlay && _react2['default'].createElement('div', {\n            className: ('bm-overlay ' + this.props.overlayClassName).trim(),\n            onClick: function () {\n              return !_this3.shouldDisableOverlayClick() && _this3.toggleMenu();\n            },\n            style: this.getStyles('overlay')\n          }),\n          _react2['default'].createElement(\n            'div',\n            {\n              id: this.props.id,\n              className: ('bm-menu-wrap ' + this.props.className).trim(),\n              style: this.getStyles('menuWrap')\n            },\n            styles.svg && _react2['default'].createElement(\n              'div',\n              {\n                className: ('bm-morph-shape ' + this.props.morphShapeClassName).trim(),\n                style: this.getStyles('morphShape')\n              },\n              _react2['default'].createElement(\n                'svg',\n                {\n                  width: '100%',\n                  height: '100%',\n                  viewBox: '0 0 100 800',\n                  preserveAspectRatio: 'none'\n                },\n                _react2['default'].createElement('path', { d: styles.svg.pathInitial })\n              )\n            ),\n            _react2['default'].createElement(\n              'div',\n              {\n                className: ('bm-menu ' + this.props.menuClassName).trim(),\n                style: this.getStyles('menu')\n              },\n              _react2['default'].createElement(\n                'nav',\n                {\n                  className: ('bm-item-list ' + this.props.itemListClassName).trim(),\n                  style: this.getStyles('itemList')\n                },\n                _react2['default'].Children.map(this.props.children, function (item, index) {\n                  if (item) {\n                    var classList = ['bm-item', _this3.props.itemClassName, item.props.className].filter(function (className) {\n                      return !!className;\n                    }).join(' ');\n                    var extraProps = {\n                      key: index,\n                      className: classList,\n                      style: _this3.getStyles('item', index, item.props.style),\n                      tabIndex: _this3.state.isOpen ? 0 : -1\n                    };\n                    return _react2['default'].cloneElement(item, extraProps);\n                  }\n                })\n              )\n            ),\n            this.props.customCrossIcon !== false && _react2['default'].createElement(\n              'div',\n              { style: this.getStyles('closeButton') },\n              _react2['default'].createElement(_CrossIcon2['default'], {\n                onClick: function () {\n                  return _this3.toggleMenu();\n                },\n                styles: this.props.styles,\n                customIcon: this.props.customCrossIcon,\n                className: this.props.crossButtonClassName,\n                crossClassName: this.props.crossClassName,\n                tabIndex: this.state.isOpen ? 0 : -1\n              })\n            )\n          ),\n          this.props.customBurgerIcon !== false && _react2['default'].createElement(\n            'div',\n            { style: this.getStyles('burgerIcon') },\n            _react2['default'].createElement(_BurgerIcon2['default'], {\n              onClick: function () {\n                return _this3.toggleMenu();\n              },\n              styles: this.props.styles,\n              customIcon: this.props.customBurgerIcon,\n              className: this.props.burgerButtonClassName,\n              barClassName: this.props.burgerBarClassName\n            })\n          )\n        );\n      }\n    }]);\n\n    return Menu;\n  })(_react.Component);\n\n  Menu.propTypes = {\n    bodyClassName: _propTypes2['default'].string,\n    burgerBarClassName: _propTypes2['default'].string,\n    burgerButtonClassName: _propTypes2['default'].string,\n    className: _propTypes2['default'].string,\n    crossButtonClassName: _propTypes2['default'].string,\n    crossClassName: _propTypes2['default'].string,\n    customBurgerIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n    customCrossIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n    customOnKeyDown: _propTypes2['default'].func,\n    disableAutoFocus: _propTypes2['default'].bool,\n    disableCloseOnEsc: _propTypes2['default'].bool,\n    disableOverlayClick: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].func]),\n    htmlClassName: _propTypes2['default'].string,\n    id: _propTypes2['default'].string,\n    isOpen: _propTypes2['default'].bool,\n    itemClassName: _propTypes2['default'].string,\n    itemListClassName: _propTypes2['default'].string,\n    menuClassName: _propTypes2['default'].string,\n    morphShapeClassName: _propTypes2['default'].string,\n    noOverlay: _propTypes2['default'].bool,\n    onStateChange: _propTypes2['default'].func,\n    outerContainerId: styles && styles.outerContainer ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n    overlayClassName: _propTypes2['default'].string,\n    pageWrapId: styles && styles.pageWrap ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n    right: _propTypes2['default'].bool,\n    styles: _propTypes2['default'].object,\n    width: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].string])\n  };\n\n  Menu.defaultProps = {\n    bodyClassName: '',\n    burgerBarClassName: '',\n    burgerButtonClassName: '',\n    className: '',\n    crossButtonClassName: '',\n    crossClassName: '',\n    disableAutoFocus: false,\n    disableCloseOnEsc: false,\n    htmlClassName: '',\n    id: '',\n    itemClassName: '',\n    itemListClassName: '',\n    menuClassName: '',\n    morphShapeClassName: '',\n    noOverlay: false,\n    onStateChange: function onStateChange() {},\n    outerContainerId: '',\n    overlayClassName: '',\n    pageWrapId: '',\n    styles: {},\n    width: 300\n  };\n\n  return Menu;\n};\n\nmodule.exports = exports['default'];","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = {\n  slide: require('./menus/slide'),\n  stack: require('./menus/stack'),\n  elastic: require('./menus/elastic'),\n  bubble: require('./menus/bubble'),\n  push: require('./menus/push'),\n  pushRotate: require('./menus/pushRotate'),\n  scaleDown: require('./menus/scaleDown'),\n  scaleRotate: require('./menus/scaleRotate'),\n  fallDown: require('./menus/fallDown'),\n  reveal: require('./menus/reveal')\n};\nmodule.exports = exports['default'];","exports.__esModule = true;\nexports.Helmet = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactSideEffect = require(\"react-side-effect\");\n\nvar _reactSideEffect2 = _interopRequireDefault(_reactSideEffect);\n\nvar _reactFastCompare = require(\"react-fast-compare\");\n\nvar _reactFastCompare2 = _interopRequireDefault(_reactFastCompare);\n\nvar _HelmetUtils = require(\"./HelmetUtils.js\");\n\nvar _HelmetConstants = require(\"./HelmetConstants.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Helmet = function Helmet(Component) {\n    var _class, _temp;\n\n    return _temp = _class = function (_React$Component) {\n        _inherits(HelmetWrapper, _React$Component);\n\n        function HelmetWrapper() {\n            _classCallCheck(this, HelmetWrapper);\n\n            return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n        }\n\n        HelmetWrapper.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n            return !(0, _reactFastCompare2.default)(this.props, nextProps);\n        };\n\n        HelmetWrapper.prototype.mapNestedChildrenToProps = function mapNestedChildrenToProps(child, nestedChildren) {\n            if (!nestedChildren) {\n                return null;\n            }\n\n            switch (child.type) {\n                case _HelmetConstants.TAG_NAMES.SCRIPT:\n                case _HelmetConstants.TAG_NAMES.NOSCRIPT:\n                    return {\n                        innerHTML: nestedChildren\n                    };\n\n                case _HelmetConstants.TAG_NAMES.STYLE:\n                    return {\n                        cssText: nestedChildren\n                    };\n            }\n\n            throw new Error(\"<\" + child.type + \" /> elements are self-closing and can not contain children. Refer to our API for more information.\");\n        };\n\n        HelmetWrapper.prototype.flattenArrayTypeChildren = function flattenArrayTypeChildren(_ref) {\n            var _extends2;\n\n            var child = _ref.child,\n                arrayTypeChildren = _ref.arrayTypeChildren,\n                newChildProps = _ref.newChildProps,\n                nestedChildren = _ref.nestedChildren;\n\n            return _extends({}, arrayTypeChildren, (_extends2 = {}, _extends2[child.type] = [].concat(arrayTypeChildren[child.type] || [], [_extends({}, newChildProps, this.mapNestedChildrenToProps(child, nestedChildren))]), _extends2));\n        };\n\n        HelmetWrapper.prototype.mapObjectTypeChildren = function mapObjectTypeChildren(_ref2) {\n            var _extends3, _extends4;\n\n            var child = _ref2.child,\n                newProps = _ref2.newProps,\n                newChildProps = _ref2.newChildProps,\n                nestedChildren = _ref2.nestedChildren;\n\n            switch (child.type) {\n                case _HelmetConstants.TAG_NAMES.TITLE:\n                    return _extends({}, newProps, (_extends3 = {}, _extends3[child.type] = nestedChildren, _extends3.titleAttributes = _extends({}, newChildProps), _extends3));\n\n                case _HelmetConstants.TAG_NAMES.BODY:\n                    return _extends({}, newProps, {\n                        bodyAttributes: _extends({}, newChildProps)\n                    });\n\n                case _HelmetConstants.TAG_NAMES.HTML:\n                    return _extends({}, newProps, {\n                        htmlAttributes: _extends({}, newChildProps)\n                    });\n            }\n\n            return _extends({}, newProps, (_extends4 = {}, _extends4[child.type] = _extends({}, newChildProps), _extends4));\n        };\n\n        HelmetWrapper.prototype.mapArrayTypeChildrenToProps = function mapArrayTypeChildrenToProps(arrayTypeChildren, newProps) {\n            var newFlattenedProps = _extends({}, newProps);\n\n            Object.keys(arrayTypeChildren).forEach(function (arrayChildName) {\n                var _extends5;\n\n                newFlattenedProps = _extends({}, newFlattenedProps, (_extends5 = {}, _extends5[arrayChildName] = arrayTypeChildren[arrayChildName], _extends5));\n            });\n\n            return newFlattenedProps;\n        };\n\n        HelmetWrapper.prototype.warnOnInvalidChildren = function warnOnInvalidChildren(child, nestedChildren) {\n            if (process.env.NODE_ENV !== \"production\") {\n                if (!_HelmetConstants.VALID_TAG_NAMES.some(function (name) {\n                    return child.type === name;\n                })) {\n                    if (typeof child.type === \"function\") {\n                        return (0, _HelmetUtils.warn)(\"You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.\");\n                    }\n\n                    return (0, _HelmetUtils.warn)(\"Only elements types \" + _HelmetConstants.VALID_TAG_NAMES.join(\", \") + \" are allowed. Helmet does not support rendering <\" + child.type + \"> elements. Refer to our API for more information.\");\n                }\n\n                if (nestedChildren && typeof nestedChildren !== \"string\" && (!Array.isArray(nestedChildren) || nestedChildren.some(function (nestedChild) {\n                    return typeof nestedChild !== \"string\";\n                }))) {\n                    throw new Error(\"Helmet expects a string as a child of <\" + child.type + \">. Did you forget to wrap your children in braces? ( <\" + child.type + \">{``}</\" + child.type + \"> ) Refer to our API for more information.\");\n                }\n            }\n\n            return true;\n        };\n\n        HelmetWrapper.prototype.mapChildrenToProps = function mapChildrenToProps(children, newProps) {\n            var _this2 = this;\n\n            var arrayTypeChildren = {};\n\n            _react2.default.Children.forEach(children, function (child) {\n                if (!child || !child.props) {\n                    return;\n                }\n\n                var _child$props = child.props,\n                    nestedChildren = _child$props.children,\n                    childProps = _objectWithoutProperties(_child$props, [\"children\"]);\n\n                var newChildProps = (0, _HelmetUtils.convertReactPropstoHtmlAttributes)(childProps);\n\n                _this2.warnOnInvalidChildren(child, nestedChildren);\n\n                switch (child.type) {\n                    case _HelmetConstants.TAG_NAMES.LINK:\n                    case _HelmetConstants.TAG_NAMES.META:\n                    case _HelmetConstants.TAG_NAMES.NOSCRIPT:\n                    case _HelmetConstants.TAG_NAMES.SCRIPT:\n                    case _HelmetConstants.TAG_NAMES.STYLE:\n                        arrayTypeChildren = _this2.flattenArrayTypeChildren({\n                            child: child,\n                            arrayTypeChildren: arrayTypeChildren,\n                            newChildProps: newChildProps,\n                            nestedChildren: nestedChildren\n                        });\n                        break;\n\n                    default:\n                        newProps = _this2.mapObjectTypeChildren({\n                            child: child,\n                            newProps: newProps,\n                            newChildProps: newChildProps,\n                            nestedChildren: nestedChildren\n                        });\n                        break;\n                }\n            });\n\n            newProps = this.mapArrayTypeChildrenToProps(arrayTypeChildren, newProps);\n            return newProps;\n        };\n\n        HelmetWrapper.prototype.render = function render() {\n            var _props = this.props,\n                children = _props.children,\n                props = _objectWithoutProperties(_props, [\"children\"]);\n\n            var newProps = _extends({}, props);\n\n            if (children) {\n                newProps = this.mapChildrenToProps(children, newProps);\n            }\n\n            return _react2.default.createElement(Component, newProps);\n        };\n\n        _createClass(HelmetWrapper, null, [{\n            key: \"canUseDOM\",\n\n\n            // Component.peek comes from react-side-effect:\n            // For testing, you may use a static peek() method available on the returned component.\n            // It lets you get the current state without resetting the mounted instance stack.\n            // Don’t use it for anything other than testing.\n\n            /**\n             * @param {Object} base: {\"target\": \"_blank\", \"href\": \"http://mysite.com/\"}\n             * @param {Object} bodyAttributes: {\"className\": \"root\"}\n             * @param {String} defaultTitle: \"Default Title\"\n             * @param {Boolean} defer: true\n             * @param {Boolean} encodeSpecialCharacters: true\n             * @param {Object} htmlAttributes: {\"lang\": \"en\", \"amp\": undefined}\n             * @param {Array} link: [{\"rel\": \"canonical\", \"href\": \"http://mysite.com/example\"}]\n             * @param {Array} meta: [{\"name\": \"description\", \"content\": \"Test description\"}]\n             * @param {Array} noscript: [{\"innerHTML\": \"<img src='http://mysite.com/js/test.js'\"}]\n             * @param {Function} onChangeClientState: \"(newState) => console.log(newState)\"\n             * @param {Array} script: [{\"type\": \"text/javascript\", \"src\": \"http://mysite.com/js/test.js\"}]\n             * @param {Array} style: [{\"type\": \"text/css\", \"cssText\": \"div { display: block; color: blue; }\"}]\n             * @param {String} title: \"Title\"\n             * @param {Object} titleAttributes: {\"itemprop\": \"name\"}\n             * @param {String} titleTemplate: \"MySite.com - %s\"\n             */\n            set: function set(canUseDOM) {\n                Component.canUseDOM = canUseDOM;\n            }\n        }]);\n\n        return HelmetWrapper;\n    }(_react2.default.Component), _class.propTypes = {\n        base: _propTypes2.default.object,\n        bodyAttributes: _propTypes2.default.object,\n        children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]),\n        defaultTitle: _propTypes2.default.string,\n        defer: _propTypes2.default.bool,\n        encodeSpecialCharacters: _propTypes2.default.bool,\n        htmlAttributes: _propTypes2.default.object,\n        link: _propTypes2.default.arrayOf(_propTypes2.default.object),\n        meta: _propTypes2.default.arrayOf(_propTypes2.default.object),\n        noscript: _propTypes2.default.arrayOf(_propTypes2.default.object),\n        onChangeClientState: _propTypes2.default.func,\n        script: _propTypes2.default.arrayOf(_propTypes2.default.object),\n        style: _propTypes2.default.arrayOf(_propTypes2.default.object),\n        title: _propTypes2.default.string,\n        titleAttributes: _propTypes2.default.object,\n        titleTemplate: _propTypes2.default.string\n    }, _class.defaultProps = {\n        defer: true,\n        encodeSpecialCharacters: true\n    }, _class.peek = Component.peek, _class.rewind = function () {\n        var mappedState = Component.rewind();\n        if (!mappedState) {\n            // provide fallback if mappedState is undefined\n            mappedState = (0, _HelmetUtils.mapStateOnServer)({\n                baseTag: [],\n                bodyAttributes: {},\n                encodeSpecialCharacters: true,\n                htmlAttributes: {},\n                linkTags: [],\n                metaTags: [],\n                noscriptTags: [],\n                scriptTags: [],\n                styleTags: [],\n                title: \"\",\n                titleAttributes: {}\n            });\n        }\n\n        return mappedState;\n    }, _temp;\n};\n\nvar NullComponent = function NullComponent() {\n    return null;\n};\n\nvar HelmetSideEffects = (0, _reactSideEffect2.default)(_HelmetUtils.reducePropsToState, _HelmetUtils.handleClientStateChange, _HelmetUtils.mapStateOnServer)(NullComponent);\n\nvar HelmetExport = Helmet(HelmetSideEffects);\nHelmetExport.renderStatic = HelmetExport.rewind;\n\nexports.Helmet = HelmetExport;\nexports.default = HelmetExport;","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nexports['default'] = function () {\n  var Snap = undefined;\n  try {\n    Snap = require('snapsvg-cjs');\n  } finally {\n    return Snap;\n  }\n};\n\nmodule.exports = exports['default'];","exports.__esModule = true;\nvar ATTRIBUTE_NAMES = exports.ATTRIBUTE_NAMES = {\n    BODY: \"bodyAttributes\",\n    HTML: \"htmlAttributes\",\n    TITLE: \"titleAttributes\"\n};\n\nvar TAG_NAMES = exports.TAG_NAMES = {\n    BASE: \"base\",\n    BODY: \"body\",\n    HEAD: \"head\",\n    HTML: \"html\",\n    LINK: \"link\",\n    META: \"meta\",\n    NOSCRIPT: \"noscript\",\n    SCRIPT: \"script\",\n    STYLE: \"style\",\n    TITLE: \"title\"\n};\n\nvar VALID_TAG_NAMES = exports.VALID_TAG_NAMES = Object.keys(TAG_NAMES).map(function (name) {\n    return TAG_NAMES[name];\n});\n\nvar TAG_PROPERTIES = exports.TAG_PROPERTIES = {\n    CHARSET: \"charset\",\n    CSS_TEXT: \"cssText\",\n    HREF: \"href\",\n    HTTPEQUIV: \"http-equiv\",\n    INNER_HTML: \"innerHTML\",\n    ITEM_PROP: \"itemprop\",\n    NAME: \"name\",\n    PROPERTY: \"property\",\n    REL: \"rel\",\n    SRC: \"src\"\n};\n\nvar REACT_TAG_MAP = exports.REACT_TAG_MAP = {\n    accesskey: \"accessKey\",\n    charset: \"charSet\",\n    class: \"className\",\n    contenteditable: \"contentEditable\",\n    contextmenu: \"contextMenu\",\n    \"http-equiv\": \"httpEquiv\",\n    itemprop: \"itemProp\",\n    tabindex: \"tabIndex\"\n};\n\nvar HELMET_PROPS = exports.HELMET_PROPS = {\n    DEFAULT_TITLE: \"defaultTitle\",\n    DEFER: \"defer\",\n    ENCODE_SPECIAL_CHARACTERS: \"encodeSpecialCharacters\",\n    ON_CHANGE_CLIENT_STATE: \"onChangeClientState\",\n    TITLE_TEMPLATE: \"titleTemplate\"\n};\n\nvar HTML_TAG_MAP = exports.HTML_TAG_MAP = Object.keys(REACT_TAG_MAP).reduce(function (obj, key) {\n    obj[REACT_TAG_MAP[key]] = key;\n    return obj;\n}, {});\n\nvar SELF_CLOSING_TAGS = exports.SELF_CLOSING_TAGS = [TAG_NAMES.NOSCRIPT, TAG_NAMES.SCRIPT, TAG_NAMES.STYLE];\n\nvar HELMET_ATTRIBUTE = exports.HELMET_ATTRIBUTE = \"data-react-helmet\";","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar styles = {\n  overlay: function overlay(isOpen) {\n    return {\n      position: 'fixed',\n      zIndex: 1000,\n      width: '100%',\n      height: '100%',\n      background: 'rgba(0, 0, 0, 0.3)',\n      opacity: isOpen ? 1 : 0,\n      MozTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      OTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transition: isOpen ? 'opacity 0.3s' : 'opacity 0.3s, transform 0s 0.3s'\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      position: 'fixed',\n      right: right ? 0 : 'inherit',\n      zIndex: 1100,\n      width: width,\n      height: '100%',\n      MozTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  menu: function menu() {\n    return {\n      height: '100%',\n      boxSizing: 'border-box',\n      overflow: 'auto'\n    };\n  },\n\n  itemList: function itemList() {\n    return {\n      height: '100%'\n    };\n  },\n\n  item: function item() {\n    return {\n      display: 'block'\n    };\n  }\n};\n\nexports['default'] = styles;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar BurgerIcon = (function (_Component) {\n  _inherits(BurgerIcon, _Component);\n\n  function BurgerIcon(props) {\n    _classCallCheck(this, BurgerIcon);\n\n    _get(Object.getPrototypeOf(BurgerIcon.prototype), 'constructor', this).call(this, props);\n    this.state = {\n      hover: false\n    };\n  }\n\n  _createClass(BurgerIcon, [{\n    key: 'getLineStyle',\n    value: function getLineStyle(index) {\n      return _extends({\n        position: 'absolute',\n        height: '20%',\n        left: 0,\n        right: 0,\n        top: 20 * (index * 2) + '%',\n        opacity: this.state.hover ? 0.6 : 1\n      }, this.state.hover && this.props.styles.bmBurgerBarsHover);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n\n      var icon = undefined;\n      var buttonStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        fontSize: 0,\n        background: 'transparent',\n        cursor: 'pointer'\n      };\n\n      if (this.props.customIcon) {\n        var extraProps = {\n          className: ('bm-icon ' + (this.props.customIcon.props.className || '')).trim(),\n          style: _extends({ width: '100%', height: '100%' }, this.props.styles.bmIcon)\n        };\n        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n      } else {\n        icon = _react2['default'].createElement(\n          'span',\n          null,\n          [0, 1, 2].map(function (bar) {\n            return _react2['default'].createElement('span', {\n              key: bar,\n              className: ('bm-burger-bars ' + _this.props.barClassName + ' ' + (_this.state.hover ? 'bm-burger-bars-hover' : '')).trim(),\n              style: _extends({}, _this.getLineStyle(bar), _this.props.styles.bmBurgerBars)\n            });\n          })\n        );\n      }\n\n      return _react2['default'].createElement(\n        'div',\n        {\n          className: ('bm-burger-button ' + this.props.className).trim(),\n          style: _extends({ zIndex: 1000 }, this.props.styles.bmBurgerButton)\n        },\n        icon,\n        _react2['default'].createElement(\n          'button',\n          {\n            onClick: this.props.onClick,\n            onMouseOver: function () {\n              return _this.setState({ hover: true });\n            },\n            onMouseOut: function () {\n              return _this.setState({ hover: false });\n            },\n            style: buttonStyle\n          },\n          'Open Menu'\n        )\n      );\n    }\n  }]);\n\n  return BurgerIcon;\n})(_react.Component);\n\nexports['default'] = BurgerIcon;\n\nBurgerIcon.propTypes = {\n  barClassName: _propTypes2['default'].string,\n  customIcon: _propTypes2['default'].element,\n  styles: _propTypes2['default'].object\n};\n\nBurgerIcon.defaultProps = {\n  barClassName: '',\n  className: '',\n  styles: {}\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar CrossIcon = (function (_Component) {\n  _inherits(CrossIcon, _Component);\n\n  function CrossIcon() {\n    _classCallCheck(this, CrossIcon);\n\n    _get(Object.getPrototypeOf(CrossIcon.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(CrossIcon, [{\n    key: 'getCrossStyle',\n    value: function getCrossStyle(type) {\n      return {\n        position: 'absolute',\n        width: 3,\n        height: 14,\n        transform: type === 'before' ? 'rotate(45deg)' : 'rotate(-45deg)'\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n\n      var icon;\n      var buttonWrapperStyle = {\n        position: 'absolute',\n        width: 24,\n        height: 24,\n        right: 8,\n        top: 8\n      };\n      var buttonStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        fontSize: 0,\n        background: 'transparent',\n        cursor: 'pointer'\n      };\n\n      if (this.props.customIcon) {\n        var extraProps = {\n          className: ('bm-cross ' + (this.props.customIcon.props.className || '')).trim(),\n          style: _extends({ width: '100%', height: '100%' }, this.props.styles.bmCross)\n        };\n        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n      } else {\n        icon = _react2['default'].createElement(\n          'span',\n          { style: { position: 'absolute', top: '6px', right: '14px' } },\n          ['before', 'after'].map(function (type, i) {\n            return _react2['default'].createElement('span', {\n              key: i,\n              className: ('bm-cross ' + _this.props.crossClassName).trim(),\n              style: _extends({}, _this.getCrossStyle(type), _this.props.styles.bmCross)\n            });\n          })\n        );\n      }\n\n      return _react2['default'].createElement(\n        'div',\n        {\n          className: ('bm-cross-button ' + this.props.className).trim(),\n          style: _extends({}, buttonWrapperStyle, this.props.styles.bmCrossButton)\n        },\n        icon,\n        _react2['default'].createElement(\n          'button',\n          {\n            onClick: this.props.onClick,\n            style: buttonStyle,\n            tabIndex: this.props.tabIndex\n          },\n          'Close Menu'\n        )\n      );\n    }\n  }]);\n\n  return CrossIcon;\n})(_react.Component);\n\nexports['default'] = CrossIcon;\n\nCrossIcon.propTypes = {\n  crossClassName: _propTypes2['default'].string,\n  customIcon: _propTypes2['default'].element,\n  styles: _propTypes2['default'].object,\n  tabIndex: _propTypes2['default'].number\n};\n\nCrossIcon.defaultProps = {\n  crossClassName: '',\n  className: '',\n  styles: {},\n  tabIndex: 0\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0.4s cubic-bezier(0.7, 0, 0.3, 1)'\n    };\n  },\n\n  item: function item(isOpen, width, right, nthChild) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      OTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      transform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0s 0.2s cubic-bezier(0.7, 0, 0.3, 1)'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _snapsvgImporter = require('../snapsvgImporter');\n\nvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  svg: {\n    lib: _snapsvgImporter2['default'],\n    pathInitial: 'M-1,0h101c0,0-97.833,153.603-97.833,396.167C2.167,627.579,100,800,100,800H-1V0z',\n    pathOpen: 'M-1,0h101c0,0,0-1,0,395c0,404,0,405,0,405H-1V0z',\n    animate: function animate(path) {\n      path.animate({ path: this.pathOpen }, 400, window.mina.easeinout);\n    }\n  },\n\n  morphShape: function morphShape(isOpen, width, right) {\n    return {\n      position: 'absolute',\n      width: 120,\n      height: '100%',\n      right: right ? 'inherit' : 0,\n      left: right ? 0 : 'inherit',\n      MozTransform: right ? 'rotateY(180deg)' : '',\n      MsTransform: right ? 'rotateY(180deg)' : '',\n      OTransform: right ? 'rotateY(180deg)' : '',\n      WebkitTransform: right ? 'rotateY(180deg)' : '',\n      transform: right ? 'rotateY(180deg)' : ''\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: 'all 0.3s'\n    };\n  },\n\n  menu: function menu(isOpen, width, right) {\n    return {\n      position: 'fixed',\n      right: right ? 0 : 'inherit',\n      width: 180,\n      whiteSpace: 'nowrap',\n      boxSizing: 'border-box',\n      overflow: 'visible'\n    };\n  },\n\n  itemList: function itemList(isOpen, width, right) {\n    if (right) {\n      return {\n        position: 'relative',\n        left: '-110px',\n        width: '170%',\n        overflow: 'auto'\n      };\n    }\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      transition: isOpen ? 'all 0.3s' : 'all 0.3s 0.1s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","window.eve = require('eve')\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar mina = (function (eve) {\n    var animations = {},\n    requestAnimFrame = window.requestAnimationFrame       ||\n                       window.webkitRequestAnimationFrame ||\n                       window.mozRequestAnimationFrame    ||\n                       window.oRequestAnimationFrame      ||\n                       window.msRequestAnimationFrame     ||\n                       function (callback) {\n                           setTimeout(callback, 16, new Date().getTime());\n                           return true;\n                       },\n    requestID,\n    isArray = Array.isArray || function (a) {\n        return a instanceof Array ||\n            Object.prototype.toString.call(a) == \"[object Array]\";\n    },\n    idgen = 0,\n    idprefix = \"M\" + (+new Date).toString(36),\n    ID = function () {\n        return idprefix + (idgen++).toString(36);\n    },\n    diff = function (a, b, A, B) {\n        if (isArray(a)) {\n            res = [];\n            for (var i = 0, ii = a.length; i < ii; i++) {\n                res[i] = diff(a[i], b, A[i], B);\n            }\n            return res;\n        }\n        var dif = (A - a) / (B - b);\n        return function (bb) {\n            return a + dif * (bb - b);\n        };\n    },\n    timer = Date.now || function () {\n        return +new Date;\n    },\n    sta = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.s;\n        }\n        var ds = a.s - val;\n        a.b += a.dur * ds;\n        a.B += a.dur * ds;\n        a.s = val;\n    },\n    speed = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.spd;\n        }\n        a.spd = val;\n    },\n    duration = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.dur;\n        }\n        a.s = a.s * val / a.dur;\n        a.dur = val;\n    },\n    stopit = function () {\n        var a = this;\n        delete animations[a.id];\n        a.update();\n        eve(\"mina.stop.\" + a.id, a);\n    },\n    pause = function () {\n        var a = this;\n        if (a.pdif) {\n            return;\n        }\n        delete animations[a.id];\n        a.update();\n        a.pdif = a.get() - a.b;\n    },\n    resume = function () {\n        var a = this;\n        if (!a.pdif) {\n            return;\n        }\n        a.b = a.get() - a.pdif;\n        delete a.pdif;\n        animations[a.id] = a;\n        frame();\n    },\n    update = function () {\n        var a = this,\n            res;\n        if (isArray(a.start)) {\n            res = [];\n            for (var j = 0, jj = a.start.length; j < jj; j++) {\n                res[j] = +a.start[j] +\n                    (a.end[j] - a.start[j]) * a.easing(a.s);\n            }\n        } else {\n            res = +a.start + (a.end - a.start) * a.easing(a.s);\n        }\n        a.set(res);\n    },\n    frame = function (timeStamp) {\n        // Manual invokation?\n        if (!timeStamp) {\n            // Frame loop stopped?\n            if (!requestID) {\n                // Start frame loop...\n                requestID = requestAnimFrame(frame);\n            }\n            return;\n        }\n        var len = 0;\n        for (var i in animations) if (animations.hasOwnProperty(i)) {\n            var a = animations[i],\n                b = a.get(),\n                res;\n            len++;\n            a.s = (b - a.b) / (a.dur / a.spd);\n            if (a.s >= 1) {\n                delete animations[i];\n                a.s = 1;\n                len--;\n                (function (a) {\n                    setTimeout(function () {\n                        eve(\"mina.finish.\" + a.id, a);\n                    });\n                }(a));\n            }\n            a.update();\n        }\n        requestID = len ? requestAnimFrame(frame) : false;\n    },\n    /*\\\n     * mina\n     [ method ]\n     **\n     * Generic animation of numbers\n     **\n     - a (number) start _slave_ number\n     - A (number) end _slave_ number\n     - b (number) start _master_ number (start time in general case)\n     - B (number) end _master_ number (end time in general case)\n     - get (function) getter of _master_ number (see @mina.time)\n     - set (function) setter of _slave_ number\n     - easing (function) #optional easing function, default is @mina.linear\n     = (object) animation descriptor\n     o {\n     o         id (string) animation id,\n     o         start (number) start _slave_ number,\n     o         end (number) end _slave_ number,\n     o         b (number) start _master_ number,\n     o         s (number) animation status (0..1),\n     o         dur (number) animation duration,\n     o         spd (number) animation speed,\n     o         get (function) getter of _master_ number (see @mina.time),\n     o         set (function) setter of _slave_ number,\n     o         easing (function) easing function, default is @mina.linear,\n     o         status (function) status getter/setter,\n     o         speed (function) speed getter/setter,\n     o         duration (function) duration getter/setter,\n     o         stop (function) animation stopper\n     o         pause (function) pauses the animation\n     o         resume (function) resumes the animation\n     o         update (function) calles setter with the right value of the animation\n     o }\n    \\*/\n    mina = function (a, A, b, B, get, set, easing) {\n        var anim = {\n            id: ID(),\n            start: a,\n            end: A,\n            b: b,\n            s: 0,\n            dur: B - b,\n            spd: 1,\n            get: get,\n            set: set,\n            easing: easing || mina.linear,\n            status: sta,\n            speed: speed,\n            duration: duration,\n            stop: stopit,\n            pause: pause,\n            resume: resume,\n            update: update\n        };\n        animations[anim.id] = anim;\n        var len = 0, i;\n        for (i in animations) if (animations.hasOwnProperty(i)) {\n            len++;\n            if (len == 2) {\n                break;\n            }\n        }\n        len == 1 && frame();\n        return anim;\n    };\n    /*\\\n     * mina.time\n     [ method ]\n     **\n     * Returns the current time. Equivalent to:\n     | function () {\n     |     return (new Date).getTime();\n     | }\n    \\*/\n    mina.time = timer;\n    /*\\\n     * mina.getById\n     [ method ]\n     **\n     * Returns an animation by its id\n     - id (string) animation's id\n     = (object) See @mina\n    \\*/\n    mina.getById = function (id) {\n        return animations[id] || null;\n    };\n\n    /*\\\n     * mina.linear\n     [ method ]\n     **\n     * Default linear easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.linear = function (n) {\n        return n;\n    };\n    /*\\\n     * mina.easeout\n     [ method ]\n     **\n     * Easeout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeout = function (n) {\n        return Math.pow(n, 1.7);\n    };\n    /*\\\n     * mina.easein\n     [ method ]\n     **\n     * Easein easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easein = function (n) {\n        return Math.pow(n, .48);\n    };\n    /*\\\n     * mina.easeinout\n     [ method ]\n     **\n     * Easeinout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeinout = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        if (n == 0) {\n            return 0;\n        }\n        var q = .48 - n / 1.04,\n            Q = Math.sqrt(.1734 + q * q),\n            x = Q - q,\n            X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n            y = -Q - q,\n            Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n            t = X + Y + .5;\n        return (1 - t) * 3 * t * t + t * t * t;\n    };\n    /*\\\n     * mina.backin\n     [ method ]\n     **\n     * Backin easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backin = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        var s = 1.70158;\n        return n * n * ((s + 1) * n - s);\n    };\n    /*\\\n     * mina.backout\n     [ method ]\n     **\n     * Backout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backout = function (n) {\n        if (n == 0) {\n            return 0;\n        }\n        n = n - 1;\n        var s = 1.70158;\n        return n * n * ((s + 1) * n + s) + 1;\n    };\n    /*\\\n     * mina.elastic\n     [ method ]\n     **\n     * Elastic easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.elastic = function (n) {\n        if (n == !!n) {\n            return n;\n        }\n        return Math.pow(2, -10 * n) * Math.sin((n - .075) *\n            (2 * Math.PI) / .3) + 1;\n    };\n    /*\\\n     * mina.bounce\n     [ method ]\n     **\n     * Bounce easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.bounce = function (n) {\n        var s = 7.5625,\n            p = 2.75,\n            l;\n        if (n < 1 / p) {\n            l = s * n * n;\n        } else {\n            if (n < 2 / p) {\n                n -= 1.5 / p;\n                l = s * n * n + .75;\n            } else {\n                if (n < 2.5 / p) {\n                    n -= 2.25 / p;\n                    l = s * n * n + .9375;\n                } else {\n                    n -= 2.625 / p;\n                    l = s * n * n + .984375;\n                }\n            }\n        }\n        return l;\n    };\n    window.mina = mina;\n    return mina;\n})(typeof eve == \"undefined\" ? function () {} : eve);\n\n// Copyright (c) 2013 - 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar Snap = (function(root) {\nSnap.version = \"0.5.1\";\n/*\\\n * Snap\n [ method ]\n **\n * Creates a drawing surface or wraps existing SVG element.\n **\n - width (number|string) width of surface\n - height (number|string) height of surface\n * or\n - DOM (SVGElement) element to be wrapped into Snap structure\n * or\n - array (array) array of elements (will return set of elements)\n * or\n - query (string) CSS query selector\n = (object) @Element\n\\*/\nfunction Snap(w, h) {\n    if (w) {\n        if (w.nodeType) {\n            return wrap(w);\n        }\n        if (is(w, \"array\") && Snap.set) {\n            return Snap.set.apply(Snap, w);\n        }\n        if (w instanceof Element) {\n            return w;\n        }\n        if (h == null) {\n            try {\n                w = glob.doc.querySelector(String(w));\n                return wrap(w);\n            } catch (e) {\n                return null;\n            }\n        }\n    }\n    w = w == null ? \"100%\" : w;\n    h = h == null ? \"100%\" : h;\n    return new Paper(w, h);\n}\nSnap.toString = function () {\n    return \"Snap v\" + this.version;\n};\nSnap._ = {};\nvar glob = {\n    win: root.window,\n    doc: root.window.document\n};\nSnap._.glob = glob;\nvar has = \"hasOwnProperty\",\n    Str = String,\n    toFloat = parseFloat,\n    toInt = parseInt,\n    math = Math,\n    mmax = math.max,\n    mmin = math.min,\n    abs = math.abs,\n    pow = math.pow,\n    PI = math.PI,\n    round = math.round,\n    E = \"\",\n    S = \" \",\n    objectToString = Object.prototype.toString,\n    ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n    bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n    separator = Snap._.separator = /[,\\s]+/,\n    whitespace = /[\\s]/g,\n    commaSpaces = /[\\s]*,[\\s]*/,\n    hsrg = {hs: 1, rg: 1},\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\s]*,?[\\s]*/ig,\n    idgen = 0,\n    idprefix = \"S\" + (+new Date).toString(36),\n    ID = function (el) {\n        return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n    },\n    xlink = \"http://www.w3.org/1999/xlink\",\n    xmlns = \"http://www.w3.org/2000/svg\",\n    hub = {},\n    /*\\\n     * Snap.url\n     [ method ]\n     **\n     * Wraps path into `\"url('<path>')\"`.\n     - value (string) path\n     = (string) wrapped path\n    \\*/\n    URL = Snap.url = function (url) {\n        return \"url('#\" + url + \"')\";\n    };\n\nfunction $(el, attr) {\n    if (attr) {\n        if (el == \"#text\") {\n            el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (el == \"#comment\") {\n            el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (typeof el == \"string\") {\n            el = $(el);\n        }\n        if (typeof attr == \"string\") {\n            if (el.nodeType == 1) {\n                if (attr.substring(0, 6) == \"xlink:\") {\n                    return el.getAttributeNS(xlink, attr.substring(6));\n                }\n                if (attr.substring(0, 4) == \"xml:\") {\n                    return el.getAttributeNS(xmlns, attr.substring(4));\n                }\n                return el.getAttribute(attr);\n            } else if (attr == \"text\") {\n                return el.nodeValue;\n            } else {\n                return null;\n            }\n        }\n        if (el.nodeType == 1) {\n            for (var key in attr) if (attr[has](key)) {\n                var val = Str(attr[key]);\n                if (val) {\n                    if (key.substring(0, 6) == \"xlink:\") {\n                        el.setAttributeNS(xlink, key.substring(6), val);\n                    } else if (key.substring(0, 4) == \"xml:\") {\n                        el.setAttributeNS(xmlns, key.substring(4), val);\n                    } else {\n                        el.setAttribute(key, val);\n                    }\n                } else {\n                    el.removeAttribute(key);\n                }\n            }\n        } else if (\"text\" in attr) {\n            el.nodeValue = attr.text;\n        }\n    } else {\n        el = glob.doc.createElementNS(xmlns, el);\n    }\n    return el;\n}\nSnap._.$ = $;\nSnap._.id = ID;\nfunction getAttrs(el) {\n    var attrs = el.attributes,\n        name,\n        out = {};\n    for (var i = 0; i < attrs.length; i++) {\n        if (attrs[i].namespaceURI == xlink) {\n            name = \"xlink:\";\n        } else {\n            name = \"\";\n        }\n        name += attrs[i].name;\n        out[name] = attrs[i].textContent;\n    }\n    return out;\n}\nfunction is(o, type) {\n    type = Str.prototype.toLowerCase.call(type);\n    if (type == \"finite\") {\n        return isFinite(o);\n    }\n    if (type == \"array\" &&\n        (o instanceof Array || Array.isArray && Array.isArray(o))) {\n        return true;\n    }\n    return  type == \"null\" && o === null ||\n            type == typeof o && o !== null ||\n            type == \"object\" && o === Object(o) ||\n            objectToString.call(o).slice(8, -1).toLowerCase() == type;\n}\n/*\\\n * Snap.format\n [ method ]\n **\n * Replaces construction of type `{<name>}` to the corresponding argument\n **\n - token (string) string to format\n - json (object) object which properties are used as a replacement\n = (string) formatted string\n > Usage\n | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n |     x: 10,\n |     y: 20,\n |     dim: {\n |         width: 40,\n |         height: 50,\n |         \"negative width\": -40\n |     }\n | }));\n\\*/\nSnap.format = (function () {\n    var tokenRegex = /\\{([^\\}]+)\\}/g,\n        objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n        replacer = function (all, key, obj) {\n            var res = obj;\n            key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n                name = name || quotedName;\n                if (res) {\n                    if (name in res) {\n                        res = res[name];\n                    }\n                    typeof res == \"function\" && isFunc && (res = res());\n                }\n            });\n            res = (res == null || res == obj ? all : res) + \"\";\n            return res;\n        };\n    return function (str, obj) {\n        return Str(str).replace(tokenRegex, function (all, key) {\n            return replacer(all, key, obj);\n        });\n    };\n})();\nfunction clone(obj) {\n    if (typeof obj == \"function\" || Object(obj) !== obj) {\n        return obj;\n    }\n    var res = new obj.constructor;\n    for (var key in obj) if (obj[has](key)) {\n        res[key] = clone(obj[key]);\n    }\n    return res;\n}\nSnap._.clone = clone;\nfunction repush(array, item) {\n    for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n        return array.push(array.splice(i, 1)[0]);\n    }\n}\nfunction cacher(f, scope, postprocessor) {\n    function newf() {\n        var arg = Array.prototype.slice.call(arguments, 0),\n            args = arg.join(\"\\u2400\"),\n            cache = newf.cache = newf.cache || {},\n            count = newf.count = newf.count || [];\n        if (cache[has](args)) {\n            repush(count, args);\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n        count.length >= 1e3 && delete cache[count.shift()];\n        count.push(args);\n        cache[args] = f.apply(scope, arg);\n        return postprocessor ? postprocessor(cache[args]) : cache[args];\n    }\n    return newf;\n}\nSnap._.cacher = cacher;\nfunction angle(x1, y1, x2, y2, x3, y3) {\n    if (x3 == null) {\n        var x = x1 - x2,\n            y = y1 - y2;\n        if (!x && !y) {\n            return 0;\n        }\n        return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n    } else {\n        return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n    }\n}\nfunction rad(deg) {\n    return deg % 360 * PI / 180;\n}\nfunction deg(rad) {\n    return rad * 180 / PI % 360;\n}\nfunction x_y() {\n    return this.x + S + this.y;\n}\nfunction x_y_w_h() {\n    return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n}\n\n/*\\\n * Snap.rad\n [ method ]\n **\n * Transform angle to radians\n - deg (number) angle in degrees\n = (number) angle in radians\n\\*/\nSnap.rad = rad;\n/*\\\n * Snap.deg\n [ method ]\n **\n * Transform angle to degrees\n - rad (number) angle in radians\n = (number) angle in degrees\n\\*/\nSnap.deg = deg;\n/*\\\n * Snap.sin\n [ method ]\n **\n * Equivalent to `Math.sin()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) sin\n\\*/\nSnap.sin = function (angle) {\n    return math.sin(Snap.rad(angle));\n};\n/*\\\n * Snap.tan\n [ method ]\n **\n * Equivalent to `Math.tan()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) tan\n\\*/\nSnap.tan = function (angle) {\n    return math.tan(Snap.rad(angle));\n};\n/*\\\n * Snap.cos\n [ method ]\n **\n * Equivalent to `Math.cos()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) cos\n\\*/\nSnap.cos = function (angle) {\n    return math.cos(Snap.rad(angle));\n};\n/*\\\n * Snap.asin\n [ method ]\n **\n * Equivalent to `Math.asin()` only works with degrees, not radians.\n - num (number) value\n = (number) asin in degrees\n\\*/\nSnap.asin = function (num) {\n    return Snap.deg(math.asin(num));\n};\n/*\\\n * Snap.acos\n [ method ]\n **\n * Equivalent to `Math.acos()` only works with degrees, not radians.\n - num (number) value\n = (number) acos in degrees\n\\*/\nSnap.acos = function (num) {\n    return Snap.deg(math.acos(num));\n};\n/*\\\n * Snap.atan\n [ method ]\n **\n * Equivalent to `Math.atan()` only works with degrees, not radians.\n - num (number) value\n = (number) atan in degrees\n\\*/\nSnap.atan = function (num) {\n    return Snap.deg(math.atan(num));\n};\n/*\\\n * Snap.atan2\n [ method ]\n **\n * Equivalent to `Math.atan2()` only works with degrees, not radians.\n - num (number) value\n = (number) atan2 in degrees\n\\*/\nSnap.atan2 = function (num) {\n    return Snap.deg(math.atan2(num));\n};\n/*\\\n * Snap.angle\n [ method ]\n **\n * Returns an angle between two or three points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n - x3 (number) #optional x coord of third point\n - y3 (number) #optional y coord of third point\n = (number) angle in degrees\n\\*/\nSnap.angle = angle;\n/*\\\n * Snap.len\n [ method ]\n **\n * Returns distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len = function (x1, y1, x2, y2) {\n    return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n};\n/*\\\n * Snap.len2\n [ method ]\n **\n * Returns squared distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len2 = function (x1, y1, x2, y2) {\n    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n};\n/*\\\n * Snap.closestPoint\n [ method ]\n **\n * Returns closest point to a given one on a given path.\n - path (Element) path element\n - x (number) x coord of a point\n - y (number) y coord of a point\n = (object) in format\n {\n    x (number) x coord of the point on the path\n    y (number) y coord of the point on the path\n    length (number) length of the path to the point\n    distance (number) distance from the given point to the path\n }\n\\*/\n// Copied from http://bl.ocks.org/mbostock/8027637\nSnap.closestPoint = function (path, x, y) {\n    function distance2(p) {\n        var dx = p.x - x,\n            dy = p.y - y;\n        return dx * dx + dy * dy;\n    }\n    var pathNode = path.node,\n        pathLength = pathNode.getTotalLength(),\n        precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n        best,\n        bestLength,\n        bestDistance = Infinity;\n\n    // linear scan for coarse approximation\n    for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n        if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n            best = scan;\n            bestLength = scanLength;\n            bestDistance = scanDistance;\n        }\n    }\n\n    // binary search for precise estimate\n    precision *= .5;\n    while (precision > .5) {\n        var before,\n            after,\n            beforeLength,\n            afterLength,\n            beforeDistance,\n            afterDistance;\n        if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n            best = before;\n            bestLength = beforeLength;\n            bestDistance = beforeDistance;\n        } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n            best = after;\n            bestLength = afterLength;\n            bestDistance = afterDistance;\n        } else {\n            precision *= .5;\n        }\n    }\n\n    best = {\n        x: best.x,\n        y: best.y,\n        length: bestLength,\n        distance: Math.sqrt(bestDistance)\n    };\n    return best;\n}\n/*\\\n * Snap.is\n [ method ]\n **\n * Handy replacement for the `typeof` operator\n - o (…) any object or primitive\n - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n = (boolean) `true` if given value is of given type\n\\*/\nSnap.is = is;\n/*\\\n * Snap.snapTo\n [ method ]\n **\n * Snaps given value to given grid\n - values (array|number) given array of values or step of the grid\n - value (number) value to adjust\n - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n = (number) adjusted value\n\\*/\nSnap.snapTo = function (values, value, tolerance) {\n    tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n    if (is(values, \"array\")) {\n        var i = values.length;\n        while (i--) if (abs(values[i] - value) <= tolerance) {\n            return values[i];\n        }\n    } else {\n        values = +values;\n        var rem = value % values;\n        if (rem < tolerance) {\n            return value - rem;\n        }\n        if (rem > values - tolerance) {\n            return value - rem + values;\n        }\n    }\n    return value;\n};\n// Colour\n/*\\\n * Snap.getRGB\n [ method ]\n **\n * Parses color string as RGB object\n - color (string) color string in one of the following formats:\n # <ul>\n #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n # </ul>\n * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) true if string can't be parsed\n o }\n\\*/\nSnap.getRGB = cacher(function (colour) {\n    if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    if (colour == \"none\") {\n        return {r: -1, g: -1, b: -1, hex: \"none\", toString: rgbtoString};\n    }\n    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n    if (!colour) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    var res,\n        red,\n        green,\n        blue,\n        opacity,\n        t,\n        values,\n        rgb = colour.match(colourRegExp);\n    if (rgb) {\n        if (rgb[2]) {\n            blue = toInt(rgb[2].substring(5), 16);\n            green = toInt(rgb[2].substring(3, 5), 16);\n            red = toInt(rgb[2].substring(1, 3), 16);\n        }\n        if (rgb[3]) {\n            blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n            green = toInt((t = rgb[3].charAt(2)) + t, 16);\n            red = toInt((t = rgb[3].charAt(1)) + t, 16);\n        }\n        if (rgb[4]) {\n            values = rgb[4].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red *= 2.55);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green *= 2.55);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue *= 2.55);\n            rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        }\n        if (rgb[5]) {\n            values = rgb[5].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsb2rgb(red, green, blue, opacity);\n        }\n        if (rgb[6]) {\n            values = rgb[6].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsl2rgb(red, green, blue, opacity);\n        }\n        red = mmin(math.round(red), 255);\n        green = mmin(math.round(green), 255);\n        blue = mmin(math.round(blue), 255);\n        opacity = mmin(mmax(opacity, 0), 1);\n        rgb = {r: red, g: green, b: blue, toString: rgbtoString};\n        rgb.hex = \"#\" + (16777216 | blue | green << 8 | red << 16).toString(16).slice(1);\n        rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n        return rgb;\n    }\n    return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n}, Snap);\n/*\\\n * Snap.hsb\n [ method ]\n **\n * Converts HSB values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - b (number) value or brightness\n = (string) hex representation of the color\n\\*/\nSnap.hsb = cacher(function (h, s, b) {\n    return Snap.hsb2rgb(h, s, b).hex;\n});\n/*\\\n * Snap.hsl\n [ method ]\n **\n * Converts HSL values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (string) hex representation of the color\n\\*/\nSnap.hsl = cacher(function (h, s, l) {\n    return Snap.hsl2rgb(h, s, l).hex;\n});\n/*\\\n * Snap.rgb\n [ method ]\n **\n * Converts RGB values to a hex representation of the color\n - r (number) red\n - g (number) green\n - b (number) blue\n = (string) hex representation of the color\n\\*/\nSnap.rgb = cacher(function (r, g, b, o) {\n    if (is(o, \"finite\")) {\n        var round = math.round;\n        return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n    }\n    return \"#\" + (16777216 | b | g << 8 | r << 16).toString(16).slice(1);\n});\nvar toHex = function (color) {\n    var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n        red = \"rgb(255, 0, 0)\";\n    toHex = cacher(function (color) {\n        if (color.toLowerCase() == \"red\") {\n            return red;\n        }\n        i.style.color = red;\n        i.style.color = color;\n        var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n        return out == red ? null : out;\n    });\n    return toHex(color);\n},\nhsbtoString = function () {\n    return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n},\nhsltoString = function () {\n    return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n},\nrgbtoString = function () {\n    return this.opacity == 1 || this.opacity == null ?\n            this.hex :\n            \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n},\nprepareRGB = function (r, g, b) {\n    if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n        b = r.b;\n        g = r.g;\n        r = r.r;\n    }\n    if (g == null && is(r, string)) {\n        var clr = Snap.getRGB(r);\n        r = clr.r;\n        g = clr.g;\n        b = clr.b;\n    }\n    if (r > 1 || g > 1 || b > 1) {\n        r /= 255;\n        g /= 255;\n        b /= 255;\n    }\n\n    return [r, g, b];\n},\npackageRGB = function (r, g, b, o) {\n    r = math.round(r * 255);\n    g = math.round(g * 255);\n    b = math.round(b * 255);\n    var rgb = {\n        r: r,\n        g: g,\n        b: b,\n        opacity: is(o, \"finite\") ? o : 1,\n        hex: Snap.rgb(r, g, b),\n        toString: rgbtoString\n    };\n    is(o, \"finite\") && (rgb.opacity = o);\n    return rgb;\n};\n/*\\\n * Snap.color\n [ method ]\n **\n * Parses the color string and returns an object featuring the color's component values\n - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n = (object) Combined RGB/HSB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) `true` if string can't be parsed,\n o     h (number) hue,\n o     s (number) saturation,\n o     v (number) value (brightness),\n o     l (number) lightness\n o }\n\\*/\nSnap.color = function (clr) {\n    var rgb;\n    if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n        rgb = Snap.hsb2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n        rgb = Snap.hsl2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else {\n        if (is(clr, \"string\")) {\n            clr = Snap.getRGB(clr);\n        }\n        if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n            rgb = Snap.rgb2hsl(clr);\n            clr.h = rgb.h;\n            clr.s = rgb.s;\n            clr.l = rgb.l;\n            rgb = Snap.rgb2hsb(clr);\n            clr.v = rgb.b;\n        } else {\n            clr = {hex: \"none\"};\n            clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n            clr.error = 1;\n        }\n    }\n    clr.toString = rgbtoString;\n    return clr;\n};\n/*\\\n * Snap.hsb2rgb\n [ method ]\n **\n * Converts HSB values to an RGB object\n - h (number) hue\n - s (number) saturation\n - v (number) value or brightness\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsb2rgb = function (h, s, v, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n        v = h.b;\n        s = h.s;\n        o = h.o;\n        h = h.h;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = v * s;\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = v - C;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.hsl2rgb\n [ method ]\n **\n * Converts HSL values to an RGB object\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsl2rgb = function (h, s, l, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n    }\n    if (h > 1 || s > 1 || l > 1) {\n        h /= 360;\n        s /= 100;\n        l /= 100;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = 2 * s * (l < .5 ? l : 1 - l);\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = l - C / 2;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.rgb2hsb\n [ method ]\n **\n * Converts RGB values to an HSB object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSB object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     b (number) brightness\n o }\n\\*/\nSnap.rgb2hsb = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, V, C;\n    V = mmax(r, g, b);\n    C = V - mmin(r, g, b);\n    H = C == 0 ? null :\n        V == r ? (g - b) / C :\n        V == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    S = C == 0 ? 0 : C / V;\n    return {h: H, s: S, b: V, toString: hsbtoString};\n};\n/*\\\n * Snap.rgb2hsl\n [ method ]\n **\n * Converts RGB values to an HSL object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSL object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     l (number) luminosity\n o }\n\\*/\nSnap.rgb2hsl = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, L, M, m, C;\n    M = mmax(r, g, b);\n    m = mmin(r, g, b);\n    C = M - m;\n    H = C == 0 ? null :\n        M == r ? (g - b) / C :\n        M == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    L = (M + m) / 2;\n    S = C == 0 ? 0 :\n         L < .5 ? C / (2 * L) :\n                  C / (2 - 2 * L);\n    return {h: H, s: S, l: L, toString: hsltoString};\n};\n\n// Transformations\n/*\\\n * Snap.parsePathString\n [ method ]\n **\n * Utility method\n **\n * Parses given path string into an array of arrays of path segments\n - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n = (array) array of segments\n\\*/\nSnap.parsePathString = function (pathString) {\n    if (!pathString) {\n        return null;\n    }\n    var pth = Snap.path(pathString);\n    if (pth.arr) {\n        return Snap.path.clone(pth.arr);\n    }\n\n    var paramCounts = {a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0},\n        data = [];\n    if (is(pathString, \"array\") && is(pathString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(pathString);\n    }\n    if (!data.length) {\n        Str(pathString).replace(pathCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            if (name == \"m\" && params.length > 2) {\n                data.push([b].concat(params.splice(0, 2)));\n                name = \"l\";\n                b = b == \"m\" ? \"l\" : \"L\";\n            }\n            if (name == \"o\" && params.length == 1) {\n                data.push([b, params[0]]);\n            }\n            if (name == \"r\") {\n                data.push([b].concat(params));\n            } else while (params.length >= paramCounts[name]) {\n                data.push([b].concat(params.splice(0, paramCounts[name])));\n                if (!paramCounts[name]) {\n                    break;\n                }\n            }\n        });\n    }\n    data.toString = Snap.path.toString;\n    pth.arr = Snap.path.clone(data);\n    return data;\n};\n/*\\\n * Snap.parseTransformString\n [ method ]\n **\n * Utility method\n **\n * Parses given transform string into an array of transformations\n - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n = (array) array of transformations\n\\*/\nvar parseTransformString = Snap.parseTransformString = function (TString) {\n    if (!TString) {\n        return null;\n    }\n    var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n        data = [];\n    if (is(TString, \"array\") && is(TString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(TString);\n    }\n    if (!data.length) {\n        Str(TString).replace(tCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            data.push([b].concat(params));\n        });\n    }\n    data.toString = Snap.path.toString;\n    return data;\n};\nfunction svgTransform2string(tstr) {\n    var res = [];\n    tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n        params = params.split(/\\s*,\\s*|\\s+/);\n        if (name == \"rotate\" && params.length == 1) {\n            params.push(0, 0);\n        }\n        if (name == \"scale\") {\n            if (params.length > 2) {\n                params = params.slice(0, 2);\n            } else if (params.length == 2) {\n                params.push(0, 0);\n            }\n            if (params.length == 1) {\n                params.push(params[0], 0, 0);\n            }\n        }\n        if (name == \"skewX\") {\n            res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n        } else if (name == \"skewY\") {\n            res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n        } else {\n            res.push([name.charAt(0)].concat(params));\n        }\n        return all;\n    });\n    return res;\n}\nSnap._.svgTransform2string = svgTransform2string;\nSnap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\nfunction transform2matrix(tstr, bbox) {\n    var tdata = parseTransformString(tstr),\n        m = new Snap.Matrix;\n    if (tdata) {\n        for (var i = 0, ii = tdata.length; i < ii; i++) {\n            var t = tdata[i],\n                tlen = t.length,\n                command = Str(t[0]).toLowerCase(),\n                absolute = t[0] != command,\n                inver = absolute ? m.invert() : 0,\n                x1,\n                y1,\n                x2,\n                y2,\n                bb;\n            if (command == \"t\" && tlen == 2){\n                m.translate(t[1], 0);\n            } else if (command == \"t\" && tlen == 3) {\n                if (absolute) {\n                    x1 = inver.x(0, 0);\n                    y1 = inver.y(0, 0);\n                    x2 = inver.x(t[1], t[2]);\n                    y2 = inver.y(t[1], t[2]);\n                    m.translate(x2 - x1, y2 - y1);\n                } else {\n                    m.translate(t[1], t[2]);\n                }\n            } else if (command == \"r\") {\n                if (tlen == 2) {\n                    bb = bb || bbox;\n                    m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.rotate(t[1], x2, y2);\n                    } else {\n                        m.rotate(t[1], t[2], t[3]);\n                    }\n                }\n            } else if (command == \"s\") {\n                if (tlen == 2 || tlen == 3) {\n                    bb = bb || bbox;\n                    m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.scale(t[1], t[1], x2, y2);\n                    } else {\n                        m.scale(t[1], t[1], t[2], t[3]);\n                    }\n                } else if (tlen == 5) {\n                    if (absolute) {\n                        x2 = inver.x(t[3], t[4]);\n                        y2 = inver.y(t[3], t[4]);\n                        m.scale(t[1], t[2], x2, y2);\n                    } else {\n                        m.scale(t[1], t[2], t[3], t[4]);\n                    }\n                }\n            } else if (command == \"m\" && tlen == 7) {\n                m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n            }\n        }\n    }\n    return m;\n}\nSnap._.transform2matrix = transform2matrix;\nSnap._unit2px = unit2px;\nvar contains = glob.doc.contains || glob.doc.compareDocumentPosition ?\n    function (a, b) {\n        var adown = a.nodeType == 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n            return a == bup || !!(bup && bup.nodeType == 1 && (\n                adown.contains ?\n                    adown.contains(bup) :\n                    a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16\n            ));\n    } :\n    function (a, b) {\n        if (b) {\n            while (b) {\n                b = b.parentNode;\n                if (b == a) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\nfunction getSomeDefs(el) {\n    var p = el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) ||\n            el.node.parentNode && wrap(el.node.parentNode) ||\n            Snap.select(\"svg\") ||\n            Snap(0, 0),\n        pdefs = p.select(\"defs\"),\n        defs  = pdefs == null ? false : pdefs.node;\n    if (!defs) {\n        defs = make(\"defs\", p.node).node;\n    }\n    return defs;\n}\nfunction getSomeSVG(el) {\n    return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n}\nSnap._.getSomeDefs = getSomeDefs;\nSnap._.getSomeSVG = getSomeSVG;\nfunction unit2px(el, name, value) {\n    var svg = getSomeSVG(el).node,\n        out = {},\n        mgr = svg.querySelector(\".svg---mgr\");\n    if (!mgr) {\n        mgr = $(\"rect\");\n        $(mgr, {x: -9e9, y: -9e9, width: 10, height: 10, \"class\": \"svg---mgr\", fill: \"none\"});\n        svg.appendChild(mgr);\n    }\n    function getW(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {width: val});\n        try {\n            return mgr.getBBox().width;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function getH(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {height: val});\n        try {\n            return mgr.getBBox().height;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function set(nam, f) {\n        if (name == null) {\n            out[nam] = f(el.attr(nam) || 0);\n        } else if (nam == name) {\n            out = f(value == null ? el.attr(nam) || 0 : value);\n        }\n    }\n    switch (el.type) {\n        case \"rect\":\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        case \"image\":\n            set(\"width\", getW);\n            set(\"height\", getH);\n        case \"text\":\n            set(\"x\", getW);\n            set(\"y\", getH);\n        break;\n        case \"circle\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"r\", getW);\n        break;\n        case \"ellipse\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        break;\n        case \"line\":\n            set(\"x1\", getW);\n            set(\"x2\", getW);\n            set(\"y1\", getH);\n            set(\"y2\", getH);\n        break;\n        case \"marker\":\n            set(\"refX\", getW);\n            set(\"markerWidth\", getW);\n            set(\"refY\", getH);\n            set(\"markerHeight\", getH);\n        break;\n        case \"radialGradient\":\n            set(\"fx\", getW);\n            set(\"fy\", getH);\n        break;\n        case \"tspan\":\n            set(\"dx\", getW);\n            set(\"dy\", getH);\n        break;\n        default:\n            set(name, getW);\n    }\n    svg.removeChild(mgr);\n    return out;\n}\n/*\\\n * Snap.select\n [ method ]\n **\n * Wraps a DOM element specified by CSS selector as @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.select = function (query) {\n    query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n    return wrap(glob.doc.querySelector(query));\n};\n/*\\\n * Snap.selectAll\n [ method ]\n **\n * Wraps DOM elements specified by CSS selector as set or array of @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.selectAll = function (query) {\n    var nodelist = glob.doc.querySelectorAll(query),\n        set = (Snap.set || Array)();\n    for (var i = 0; i < nodelist.length; i++) {\n        set.push(wrap(nodelist[i]));\n    }\n    return set;\n};\n\nfunction add2group(list) {\n    if (!is(list, \"array\")) {\n        list = Array.prototype.slice.call(arguments, 0);\n    }\n    var i = 0,\n        j = 0,\n        node = this.node;\n    while (this[i]) delete this[i++];\n    for (i = 0; i < list.length; i++) {\n        if (list[i].type == \"set\") {\n            list[i].forEach(function (el) {\n                node.appendChild(el.node);\n            });\n        } else {\n            node.appendChild(list[i].node);\n        }\n    }\n    var children = node.childNodes;\n    for (i = 0; i < children.length; i++) {\n        this[j++] = wrap(children[i]);\n    }\n    return this;\n}\n// Hub garbage collector every 10s\nsetInterval(function () {\n    for (var key in hub) if (hub[has](key)) {\n        var el = hub[key],\n            node = el.node;\n        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n            delete hub[key];\n        }\n    }\n}, 1e4);\nfunction Element(el) {\n    if (el.snap in hub) {\n        return hub[el.snap];\n    }\n    var svg;\n    try {\n        svg = el.ownerSVGElement;\n    } catch(e) {}\n    /*\\\n     * Element.node\n     [ property (object) ]\n     **\n     * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n     > Usage\n     | // draw a circle at coordinate 10,10 with radius of 10\n     | var c = paper.circle(10, 10, 10);\n     | c.node.onclick = function () {\n     |     c.attr(\"fill\", \"red\");\n     | };\n    \\*/\n    this.node = el;\n    if (svg) {\n        this.paper = new Paper(svg);\n    }\n    /*\\\n     * Element.type\n     [ property (string) ]\n     **\n     * SVG tag name of the given element.\n    \\*/\n    this.type = el.tagName || el.nodeName;\n    var id = this.id = ID(this);\n    this.anims = {};\n    this._ = {\n        transform: []\n    };\n    el.snap = id;\n    hub[id] = this;\n    if (this.type == \"g\") {\n        this.add = add2group;\n    }\n    if (this.type in {g: 1, mask: 1, pattern: 1, symbol: 1}) {\n        for (var method in Paper.prototype) if (Paper.prototype[has](method)) {\n            this[method] = Paper.prototype[method];\n        }\n    }\n}\n   /*\\\n     * Element.attr\n     [ method ]\n     **\n     * Gets or sets given attributes of the element.\n     **\n     - params (object) contains key-value pairs of attributes you want to set\n     * or\n     - param (string) name of the attribute\n     = (Element) the current element\n     * or\n     = (string) value of attribute\n     > Usage\n     | el.attr({\n     |     fill: \"#fc0\",\n     |     stroke: \"#000\",\n     |     strokeWidth: 2, // CamelCase...\n     |     \"fill-opacity\": 0.5, // or dash-separated names\n     |     width: \"*=2\" // prefixed values\n     | });\n     | console.log(el.attr(\"fill\")); // #fc0\n     * Prefixed values in format `\"+=10\"` supported. All four operations\n     * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n     * and `-`: `\"+=2em\"`.\n    \\*/\n    Element.prototype.attr = function (params, value) {\n        var el = this,\n            node = el.node;\n        if (!params) {\n            if (node.nodeType != 1) {\n                return {\n                    text: node.nodeValue\n                };\n            }\n            var attr = node.attributes,\n                out = {};\n            for (var i = 0, ii = attr.length; i < ii; i++) {\n                out[attr[i].nodeName] = attr[i].nodeValue;\n            }\n            return out;\n        }\n        if (is(params, \"string\")) {\n            if (arguments.length > 1) {\n                var json = {};\n                json[params] = value;\n                params = json;\n            } else {\n                return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n            }\n        }\n        for (var att in params) {\n            if (params[has](att)) {\n                eve(\"snap.util.attr.\" + att, el, params[att]);\n            }\n        }\n        return el;\n    };\n/*\\\n * Snap.parse\n [ method ]\n **\n * Parses SVG fragment and converts it into a @Fragment\n **\n - svg (string) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.parse = function (svg) {\n    var f = glob.doc.createDocumentFragment(),\n        full = true,\n        div = glob.doc.createElement(\"div\");\n    svg = Str(svg);\n    if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n        svg = \"<svg>\" + svg + \"</svg>\";\n        full = false;\n    }\n    div.innerHTML = svg;\n    svg = div.getElementsByTagName(\"svg\")[0];\n    if (svg) {\n        if (full) {\n            f = svg;\n        } else {\n            while (svg.firstChild) {\n                f.appendChild(svg.firstChild);\n            }\n        }\n    }\n    return new Fragment(f);\n};\nfunction Fragment(frag) {\n    this.node = frag;\n}\n/*\\\n * Snap.fragment\n [ method ]\n **\n * Creates a DOM fragment from a given list of elements or strings\n **\n - varargs (…) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.fragment = function () {\n    var args = Array.prototype.slice.call(arguments, 0),\n        f = glob.doc.createDocumentFragment();\n    for (var i = 0, ii = args.length; i < ii; i++) {\n        var item = args[i];\n        if (item.node && item.node.nodeType) {\n            f.appendChild(item.node);\n        }\n        if (item.nodeType) {\n            f.appendChild(item);\n        }\n        if (typeof item == \"string\") {\n            f.appendChild(Snap.parse(item).node);\n        }\n    }\n    return new Fragment(f);\n};\n\nfunction make(name, parent) {\n    var res = $(name);\n    parent.appendChild(res);\n    var el = wrap(res);\n    return el;\n}\nfunction Paper(w, h) {\n    var res,\n        desc,\n        defs,\n        proto = Paper.prototype;\n    if (w && w.tagName && w.tagName.toLowerCase() == \"svg\") {\n        if (w.snap in hub) {\n            return hub[w.snap];\n        }\n        var doc = w.ownerDocument;\n        res = new Element(w);\n        desc = w.getElementsByTagName(\"desc\")[0];\n        defs = w.getElementsByTagName(\"defs\")[0];\n        if (!desc) {\n            desc = $(\"desc\");\n            desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n            res.node.appendChild(desc);\n        }\n        if (!defs) {\n            defs = $(\"defs\");\n            res.node.appendChild(defs);\n        }\n        res.defs = defs;\n        for (var key in proto) if (proto[has](key)) {\n            res[key] = proto[key];\n        }\n        res.paper = res.root = res;\n    } else {\n        res = make(\"svg\", glob.doc.body);\n        $(res.node, {\n            height: h,\n            version: 1.1,\n            width: w,\n            xmlns: xmlns\n        });\n    }\n    return res;\n}\nfunction wrap(dom) {\n    if (!dom) {\n        return dom;\n    }\n    if (dom instanceof Element || dom instanceof Fragment) {\n        return dom;\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n        return new Paper(dom);\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n        return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n    }\n    return new Element(dom);\n}\n\nSnap._.make = make;\nSnap._.wrap = wrap;\n/*\\\n * Paper.el\n [ method ]\n **\n * Creates an element on paper with a given name and no attributes\n **\n - name (string) tag name\n - attr (object) attributes\n = (Element) the current element\n > Usage\n | var c = paper.circle(10, 10, 10); // is the same as...\n | var c = paper.el(\"circle\").attr({\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n | // and the same as\n | var c = paper.el(\"circle\", {\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n\\*/\nPaper.prototype.el = function (name, attr) {\n    var el = make(name, this.node);\n    attr && el.attr(attr);\n    return el;\n};\n/*\\\n * Element.children\n [ method ]\n **\n * Returns array of all the children of the element.\n = (array) array of Elements\n\\*/\nElement.prototype.children = function () {\n    var out = [],\n        ch = this.node.childNodes;\n    for (var i = 0, ii = ch.length; i < ii; i++) {\n        out[i] = Snap(ch[i]);\n    }\n    return out;\n};\nfunction jsonFiller(root, o) {\n    for (var i = 0, ii = root.length; i < ii; i++) {\n        var item = {\n                type: root[i].type,\n                attr: root[i].attr()\n            },\n            children = root[i].children();\n        o.push(item);\n        if (children.length) {\n            jsonFiller(children, item.childNodes = []);\n        }\n    }\n}\n/*\\\n * Element.toJSON\n [ method ]\n **\n * Returns object representation of the given element and all its children.\n = (object) in format\n o {\n o     type (string) this.type,\n o     attr (object) attributes map,\n o     childNodes (array) optional array of children in the same format\n o }\n\\*/\nElement.prototype.toJSON = function () {\n    var out = [];\n    jsonFiller([this], out);\n    return out[0];\n};\n// default\neve.on(\"snap.util.getattr\", function () {\n    var att = eve.nt();\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    var css = att.replace(/[A-Z]/g, function (letter) {\n        return \"-\" + letter.toLowerCase();\n    });\n    if (cssAttr[has](css)) {\n        return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n    } else {\n        return $(this.node, att);\n    }\n});\nvar cssAttr = {\n    \"alignment-baseline\": 0,\n    \"baseline-shift\": 0,\n    \"clip\": 0,\n    \"clip-path\": 0,\n    \"clip-rule\": 0,\n    \"color\": 0,\n    \"color-interpolation\": 0,\n    \"color-interpolation-filters\": 0,\n    \"color-profile\": 0,\n    \"color-rendering\": 0,\n    \"cursor\": 0,\n    \"direction\": 0,\n    \"display\": 0,\n    \"dominant-baseline\": 0,\n    \"enable-background\": 0,\n    \"fill\": 0,\n    \"fill-opacity\": 0,\n    \"fill-rule\": 0,\n    \"filter\": 0,\n    \"flood-color\": 0,\n    \"flood-opacity\": 0,\n    \"font\": 0,\n    \"font-family\": 0,\n    \"font-size\": 0,\n    \"font-size-adjust\": 0,\n    \"font-stretch\": 0,\n    \"font-style\": 0,\n    \"font-variant\": 0,\n    \"font-weight\": 0,\n    \"glyph-orientation-horizontal\": 0,\n    \"glyph-orientation-vertical\": 0,\n    \"image-rendering\": 0,\n    \"kerning\": 0,\n    \"letter-spacing\": 0,\n    \"lighting-color\": 0,\n    \"marker\": 0,\n    \"marker-end\": 0,\n    \"marker-mid\": 0,\n    \"marker-start\": 0,\n    \"mask\": 0,\n    \"opacity\": 0,\n    \"overflow\": 0,\n    \"pointer-events\": 0,\n    \"shape-rendering\": 0,\n    \"stop-color\": 0,\n    \"stop-opacity\": 0,\n    \"stroke\": 0,\n    \"stroke-dasharray\": 0,\n    \"stroke-dashoffset\": 0,\n    \"stroke-linecap\": 0,\n    \"stroke-linejoin\": 0,\n    \"stroke-miterlimit\": 0,\n    \"stroke-opacity\": 0,\n    \"stroke-width\": 0,\n    \"text-anchor\": 0,\n    \"text-decoration\": 0,\n    \"text-rendering\": 0,\n    \"unicode-bidi\": 0,\n    \"visibility\": 0,\n    \"word-spacing\": 0,\n    \"writing-mode\": 0\n};\n\neve.on(\"snap.util.attr\", function (value) {\n    var att = eve.nt(),\n        attr = {};\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    attr[att] = value;\n    var style = att.replace(/-(\\w)/gi, function (all, letter) {\n            return letter.toUpperCase();\n        }),\n        css = att.replace(/[A-Z]/g, function (letter) {\n            return \"-\" + letter.toLowerCase();\n        });\n    if (cssAttr[has](css)) {\n        this.node.style[style] = value == null ? E : value;\n    } else {\n        $(this.node, attr);\n    }\n});\n(function (proto) {}(Paper.prototype));\n\n// simple ajax\n/*\\\n * Snap.ajax\n [ method ]\n **\n * Simple implementation of Ajax\n **\n - url (string) URL\n - postData (object|string) data for post request\n - callback (function) callback\n - scope (object) #optional scope of callback\n * or\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n = (XMLHttpRequest) the XMLHttpRequest object, just in case\n\\*/\nSnap.ajax = function (url, postData, callback, scope){\n    var req = new XMLHttpRequest,\n        id = ID();\n    if (req) {\n        if (is(postData, \"function\")) {\n            scope = callback;\n            callback = postData;\n            postData = null;\n        } else if (is(postData, \"object\")) {\n            var pd = [];\n            for (var key in postData) if (postData.hasOwnProperty(key)) {\n                pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n            }\n            postData = pd.join(\"&\");\n        }\n        req.open(postData ? \"POST\" : \"GET\", url, true);\n        if (postData) {\n            req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        }\n        if (callback) {\n            eve.once(\"snap.ajax.\" + id + \".0\", callback);\n            eve.once(\"snap.ajax.\" + id + \".200\", callback);\n            eve.once(\"snap.ajax.\" + id + \".304\", callback);\n        }\n        req.onreadystatechange = function() {\n            if (req.readyState != 4) return;\n            eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n        };\n        if (req.readyState == 4) {\n            return req;\n        }\n        req.send(postData);\n        return req;\n    }\n};\n/*\\\n * Snap.load\n [ method ]\n **\n * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n **\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n\\*/\nSnap.load = function (url, callback, scope) {\n    Snap.ajax(url, function (req) {\n        var f = Snap.parse(req.responseText);\n        scope ? callback.call(scope, f) : callback(f);\n    });\n};\nvar getOffset = function (elem) {\n    var box = elem.getBoundingClientRect(),\n        doc = elem.ownerDocument,\n        body = doc.body,\n        docElem = doc.documentElement,\n        clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n        top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n    return {\n        y: top,\n        x: left\n    };\n};\n/*\\\n * Snap.getElementByPoint\n [ method ]\n **\n * Returns you topmost element under given point.\n **\n = (object) Snap element object\n - x (number) x coordinate from the top left corner of the window\n - y (number) y coordinate from the top left corner of the window\n > Usage\n | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n\\*/\nSnap.getElementByPoint = function (x, y) {\n    var paper = this,\n        svg = paper.canvas,\n        target = glob.doc.elementFromPoint(x, y);\n    if (glob.win.opera && target.tagName == \"svg\") {\n        var so = getOffset(target),\n            sr = target.createSVGRect();\n        sr.x = x - so.x;\n        sr.y = y - so.y;\n        sr.width = sr.height = 1;\n        var hits = target.getIntersectionList(sr, null);\n        if (hits.length) {\n            target = hits[hits.length - 1];\n        }\n    }\n    if (!target) {\n        return null;\n    }\n    return wrap(target);\n};\n/*\\\n * Snap.plugin\n [ method ]\n **\n * Let you write plugins. You pass in a function with five arguments, like this:\n | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n |     Snap.newmethod = function () {};\n |     Element.prototype.newmethod = function () {};\n |     Paper.prototype.newmethod = function () {};\n | });\n * Inside the function you have access to all main objects (and their\n * prototypes). This allow you to extend anything you want.\n **\n - f (function) your plugin body\n\\*/\nSnap.plugin = function (f) {\n    f(Snap, Element, Paper, glob, Fragment);\n};\nglob.win.Snap = Snap;\nreturn Snap;\n}(window || this));\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        unit2px = Snap._unit2px,\n        $ = Snap._.$,\n        make = Snap._.make,\n        getSomeDefs = Snap._.getSomeDefs,\n        has = \"hasOwnProperty\",\n        wrap = Snap._.wrap;\n    /*\\\n     * Element.getBBox\n     [ method ]\n     **\n     * Returns the bounding box descriptor for the given element\n     **\n     = (object) bounding box descriptor:\n     o {\n     o     cx: (number) x of the center,\n     o     cy: (number) x of the center,\n     o     h: (number) height,\n     o     height: (number) height,\n     o     path: (string) path command for the box,\n     o     r0: (number) radius of a circle that fully encloses the box,\n     o     r1: (number) radius of the smallest circle that can be enclosed,\n     o     r2: (number) radius of the largest circle that can be enclosed,\n     o     vb: (string) box as a viewbox command,\n     o     w: (number) width,\n     o     width: (number) width,\n     o     x2: (number) x of the right side,\n     o     x: (number) x of the left side,\n     o     y2: (number) y of the bottom edge,\n     o     y: (number) y of the top edge\n     o }\n    \\*/\n    elproto.getBBox = function (isWithoutTransform) {\n        if (this.type == \"tspan\") {\n            return Snap._.box(this.node.getClientRects().item(0));\n        }\n        if (!Snap.Matrix || !Snap.path) {\n            return this.node.getBBox();\n        }\n        var el = this,\n            m = new Snap.Matrix;\n        if (el.removed) {\n            return Snap._.box();\n        }\n        while (el.type == \"use\") {\n            if (!isWithoutTransform) {\n                m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n            }\n            if (el.original) {\n                el = el.original;\n            } else {\n                var href = el.attr(\"xlink:href\");\n                el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n            }\n        }\n        var _ = el._,\n            pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n        try {\n            if (isWithoutTransform) {\n                _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n                return Snap._.box(_.bboxwt);\n            } else {\n                el.realPath = pathfinder(el);\n                el.matrix = el.transform().localMatrix;\n                _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n                return Snap._.box(_.bbox);\n            }\n        } catch (e) {\n            // Firefox doesn’t give you bbox of hidden element\n            return Snap._.box();\n        }\n    };\n    var propString = function () {\n        return this.string;\n    };\n    function extractTransform(el, tstr) {\n        if (tstr == null) {\n            var doReturn = true;\n            if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n                tstr = el.node.getAttribute(\"gradientTransform\");\n            } else if (el.type == \"pattern\") {\n                tstr = el.node.getAttribute(\"patternTransform\");\n            } else {\n                tstr = el.node.getAttribute(\"transform\");\n            }\n            if (!tstr) {\n                return new Snap.Matrix;\n            }\n            tstr = Snap._.svgTransform2string(tstr);\n        } else {\n            if (!Snap._.rgTransform.test(tstr)) {\n                tstr = Snap._.svgTransform2string(tstr);\n            } else {\n                tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || \"\");\n            }\n            if (is(tstr, \"array\")) {\n                tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n            }\n            el._.transform = tstr;\n        }\n        var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n        if (doReturn) {\n            return m;\n        } else {\n            el.matrix = m;\n        }\n    }\n    /*\\\n     * Element.transform\n     [ method ]\n     **\n     * Gets or sets transformation of the element\n     **\n     - tstr (string) transform string in Snap or SVG format\n     = (Element) the current element\n     * or\n     = (object) transformation descriptor:\n     o {\n     o     string (string) transform string,\n     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n     o     localMatrix (Matrix) matrix of transformations applied only to the element,\n     o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n     o     global (string) global transformation as string,\n     o     local (string) local transformation as string,\n     o     toString (function) returns `string` property\n     o }\n    \\*/\n    elproto.transform = function (tstr) {\n        var _ = this._;\n        if (tstr == null) {\n            var papa = this,\n                global = new Snap.Matrix(this.node.getCTM()),\n                local = extractTransform(this),\n                ms = [local],\n                m = new Snap.Matrix,\n                i,\n                localString = local.toTransformString(),\n                string = Str(local) == Str(this.matrix) ?\n                            Str(_.transform) : localString;\n            while (papa.type != \"svg\" && (papa = papa.parent())) {\n                ms.push(extractTransform(papa));\n            }\n            i = ms.length;\n            while (i--) {\n                m.add(ms[i]);\n            }\n            return {\n                string: string,\n                globalMatrix: global,\n                totalMatrix: m,\n                localMatrix: local,\n                diffMatrix: global.clone().add(local.invert()),\n                global: global.toTransformString(),\n                total: m.toTransformString(),\n                local: localString,\n                toString: propString\n            };\n        }\n        if (tstr instanceof Snap.Matrix) {\n            this.matrix = tstr;\n            this._.transform = tstr.toTransformString();\n        } else {\n            extractTransform(this, tstr);\n        }\n\n        if (this.node) {\n            if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n                $(this.node, {gradientTransform: this.matrix});\n            } else if (this.type == \"pattern\") {\n                $(this.node, {patternTransform: this.matrix});\n            } else {\n                $(this.node, {transform: this.matrix});\n            }\n        }\n\n        return this;\n    };\n    /*\\\n     * Element.parent\n     [ method ]\n     **\n     * Returns the element's parent\n     **\n     = (Element) the parent element\n    \\*/\n    elproto.parent = function () {\n        return wrap(this.node.parentNode);\n    };\n    /*\\\n     * Element.append\n     [ method ]\n     **\n     * Appends the given element to current one\n     **\n     - el (Element|Set) element to append\n     = (Element) the parent element\n    \\*/\n    /*\\\n     * Element.add\n     [ method ]\n     **\n     * See @Element.append\n    \\*/\n    elproto.append = elproto.add = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this;\n                el.forEach(function (el) {\n                    it.add(el);\n                });\n                return this;\n            }\n            el = wrap(el);\n            this.node.appendChild(el.node);\n            el.paper = this.paper;\n        }\n        return this;\n    };\n    /*\\\n     * Element.appendTo\n     [ method ]\n     **\n     * Appends the current element to the given one\n     **\n     - el (Element) parent element to append to\n     = (Element) the child element\n    \\*/\n    elproto.appendTo = function (el) {\n        if (el) {\n            el = wrap(el);\n            el.append(this);\n        }\n        return this;\n    };\n    /*\\\n     * Element.prepend\n     [ method ]\n     **\n     * Prepends the given element to the current one\n     **\n     - el (Element) element to prepend\n     = (Element) the parent element\n    \\*/\n    elproto.prepend = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this,\n                    first;\n                el.forEach(function (el) {\n                    if (first) {\n                        first.after(el);\n                    } else {\n                        it.prepend(el);\n                    }\n                    first = el;\n                });\n                return this;\n            }\n            el = wrap(el);\n            var parent = el.parent();\n            this.node.insertBefore(el.node, this.node.firstChild);\n            this.add && this.add();\n            el.paper = this.paper;\n            this.parent() && this.parent().add();\n            parent && parent.add();\n        }\n        return this;\n    };\n    /*\\\n     * Element.prependTo\n     [ method ]\n     **\n     * Prepends the current element to the given one\n     **\n     - el (Element) parent element to prepend to\n     = (Element) the child element\n    \\*/\n    elproto.prependTo = function (el) {\n        el = wrap(el);\n        el.prepend(this);\n        return this;\n    };\n    /*\\\n     * Element.before\n     [ method ]\n     **\n     * Inserts given element before the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.before = function (el) {\n        if (el.type == \"set\") {\n            var it = this;\n            el.forEach(function (el) {\n                var parent = el.parent();\n                it.node.parentNode.insertBefore(el.node, it.node);\n                parent && parent.add();\n            });\n            this.parent().add();\n            return this;\n        }\n        el = wrap(el);\n        var parent = el.parent();\n        this.node.parentNode.insertBefore(el.node, this.node);\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.after\n     [ method ]\n     **\n     * Inserts given element after the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.after = function (el) {\n        el = wrap(el);\n        var parent = el.parent();\n        if (this.node.nextSibling) {\n            this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n        } else {\n            this.node.parentNode.appendChild(el.node);\n        }\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.insertBefore\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertBefore = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.insertAfter\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertAfter = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.remove\n     [ method ]\n     **\n     * Removes element from the DOM\n     = (Element) the detached element\n    \\*/\n    elproto.remove = function () {\n        var parent = this.parent();\n        this.node.parentNode && this.node.parentNode.removeChild(this.node);\n        delete this.paper;\n        this.removed = true;\n        parent && parent.add();\n        return this;\n    };\n    /*\\\n     * Element.select\n     [ method ]\n     **\n     * Gathers the nested @Element matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Element) result of query selection\n    \\*/\n    elproto.select = function (query) {\n        return wrap(this.node.querySelector(query));\n    };\n    /*\\\n     * Element.selectAll\n     [ method ]\n     **\n     * Gathers nested @Element objects matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Set|array) result of query selection\n    \\*/\n    elproto.selectAll = function (query) {\n        var nodelist = this.node.querySelectorAll(query),\n            set = (Snap.set || Array)();\n        for (var i = 0; i < nodelist.length; i++) {\n            set.push(wrap(nodelist[i]));\n        }\n        return set;\n    };\n    /*\\\n     * Element.asPX\n     [ method ]\n     **\n     * Returns given attribute of the element as a `px` value (not %, em, etc.)\n     **\n     - attr (string) attribute name\n     - value (string) #optional attribute value\n     = (Element) result of query selection\n    \\*/\n    elproto.asPX = function (attr, value) {\n        if (value == null) {\n            value = this.attr(attr);\n        }\n        return +unit2px(this, attr, value);\n    };\n    // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n    /*\\\n     * Element.use\n     [ method ]\n     **\n     * Creates a `<use>` element linked to the current element\n     **\n     = (Element) the `<use>` element\n    \\*/\n    elproto.use = function () {\n        var use,\n            id = this.node.id;\n        if (!id) {\n            id = this.id;\n            $(this.node, {\n                id: id\n            });\n        }\n        if (this.type == \"linearGradient\" || this.type == \"radialGradient\" ||\n            this.type == \"pattern\") {\n            use = make(this.type, this.node.parentNode);\n        } else {\n            use = make(\"use\", this.node.parentNode);\n        }\n        $(use.node, {\n            \"xlink:href\": \"#\" + id\n        });\n        use.original = this;\n        return use;\n    };\n    function fixids(el) {\n        var els = el.selectAll(\"*\"),\n            it,\n            url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n            ids = [],\n            uses = {};\n        function urltest(it, name) {\n            var val = $(it.node, name);\n            val = val && val.match(url);\n            val = val && val[2];\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    var attr = {};\n                    attr[name] = Snap.url(id);\n                    $(it.node, attr);\n                });\n            }\n        }\n        function linktest(it) {\n            var val = $(it.node, \"xlink:href\");\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    it.attr(\"xlink:href\", \"#\" + id);\n                });\n            }\n        }\n        for (var i = 0, ii = els.length; i < ii; i++) {\n            it = els[i];\n            urltest(it, \"fill\");\n            urltest(it, \"stroke\");\n            urltest(it, \"filter\");\n            urltest(it, \"mask\");\n            urltest(it, \"clip-path\");\n            linktest(it);\n            var oldid = $(it.node, \"id\");\n            if (oldid) {\n                $(it.node, {id: it.id});\n                ids.push({\n                    old: oldid,\n                    id: it.id\n                });\n            }\n        }\n        for (i = 0, ii = ids.length; i < ii; i++) {\n            var fs = uses[ids[i].old];\n            if (fs) {\n                for (var j = 0, jj = fs.length; j < jj; j++) {\n                    fs[j](ids[i].id);\n                }\n            }\n        }\n    }\n    /*\\\n     * Element.clone\n     [ method ]\n     **\n     * Creates a clone of the element and inserts it after the element\n     **\n     = (Element) the clone\n    \\*/\n    elproto.clone = function () {\n        var clone = wrap(this.node.cloneNode(true));\n        if ($(clone.node, \"id\")) {\n            $(clone.node, {id: clone.id});\n        }\n        fixids(clone);\n        clone.insertAfter(this);\n        return clone;\n    };\n    /*\\\n     * Element.toDefs\n     [ method ]\n     **\n     * Moves element to the shared `<defs>` area\n     **\n     = (Element) the element\n    \\*/\n    elproto.toDefs = function () {\n        var defs = getSomeDefs(this);\n        defs.appendChild(this.node);\n        return this;\n    };\n    /*\\\n     * Element.toPattern\n     [ method ]\n     **\n     * Creates a `<pattern>` element from the current element\n     **\n     * To create a pattern you have to specify the pattern rect:\n     - x (string|number)\n     - y (string|number)\n     - width (string|number)\n     - height (string|number)\n     = (Element) the `<pattern>` element\n     * You can use pattern later on as an argument for `fill` attribute:\n     | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n     |         fill: \"none\",\n     |         stroke: \"#bada55\",\n     |         strokeWidth: 5\n     |     }).pattern(0, 0, 10, 10),\n     |     c = paper.circle(200, 200, 100);\n     | c.attr({\n     |     fill: p\n     | });\n    \\*/\n    elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n        var p = make(\"pattern\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        $(p.node, {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            patternUnits: \"userSpaceOnUse\",\n            id: p.id,\n            viewBox: [x, y, width, height].join(\" \")\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n// SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n// SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n    /*\\\n     * Element.marker\n     [ method ]\n     **\n     * Creates a `<marker>` element from the current element\n     **\n     * To create a marker you have to specify the bounding rect and reference point:\n     - x (number)\n     - y (number)\n     - width (number)\n     - height (number)\n     - refX (number)\n     - refY (number)\n     = (Element) the `<marker>` element\n     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n    \\*/\n    // TODO add usage for markers\n    elproto.marker = function (x, y, width, height, refX, refY) {\n        var p = make(\"marker\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            refX = x.refX || x.cx;\n            refY = x.refY || x.cy;\n            x = x.x;\n        }\n        $(p.node, {\n            viewBox: [x, y, width, height].join(\" \"),\n            markerWidth: width,\n            markerHeight: height,\n            orient: \"auto\",\n            refX: refX || 0,\n            refY: refY || 0,\n            id: p.id\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n    var eldata = {};\n    /*\\\n     * Element.data\n     [ method ]\n     **\n     * Adds or retrieves given value associated with given key. (Don’t confuse\n     * with `data-` attributes)\n     *\n     * See also @Element.removeData\n     - key (string) key to store data\n     - value (any) #optional value to store\n     = (object) @Element\n     * or, if value is not specified:\n     = (any) value\n     > Usage\n     | for (var i = 0, i < 5, i++) {\n     |     paper.circle(10 + 15 * i, 10, 10)\n     |          .attr({fill: \"#000\"})\n     |          .data(\"i\", i)\n     |          .click(function () {\n     |             alert(this.data(\"i\"));\n     |          });\n     | }\n    \\*/\n    elproto.data = function (key, value) {\n        var data = eldata[this.id] = eldata[this.id] || {};\n        if (arguments.length == 0){\n            eve(\"snap.data.get.\" + this.id, this, data, null);\n            return data;\n        }\n        if (arguments.length == 1) {\n            if (Snap.is(key, \"object\")) {\n                for (var i in key) if (key[has](i)) {\n                    this.data(i, key[i]);\n                }\n                return this;\n            }\n            eve(\"snap.data.get.\" + this.id, this, data[key], key);\n            return data[key];\n        }\n        data[key] = value;\n        eve(\"snap.data.set.\" + this.id, this, value, key);\n        return this;\n    };\n    /*\\\n     * Element.removeData\n     [ method ]\n     **\n     * Removes value associated with an element by given key.\n     * If key is not provided, removes all the data of the element.\n     - key (string) #optional key\n     = (object) @Element\n    \\*/\n    elproto.removeData = function (key) {\n        if (key == null) {\n            eldata[this.id] = {};\n        } else {\n            eldata[this.id] && delete eldata[this.id][key];\n        }\n        return this;\n    };\n    /*\\\n     * Element.outerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n     *\n     * See also @Element.innerSVG\n     = (string) SVG code for the element\n    \\*/\n    /*\\\n     * Element.toString\n     [ method ]\n     **\n     * See @Element.outerSVG\n    \\*/\n    elproto.outerSVG = elproto.toString = toString(1);\n    /*\\\n     * Element.innerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n     = (string) SVG code for the element\n    \\*/\n    elproto.innerSVG = toString();\n    function toString(type) {\n        return function () {\n            var res = type ? \"<\" + this.type : \"\",\n                attr = this.node.attributes,\n                chld = this.node.childNodes;\n            if (type) {\n                for (var i = 0, ii = attr.length; i < ii; i++) {\n                    res += \" \" + attr[i].name + '=\"' +\n                            attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n                }\n            }\n            if (chld.length) {\n                type && (res += \">\");\n                for (i = 0, ii = chld.length; i < ii; i++) {\n                    if (chld[i].nodeType == 3) {\n                        res += chld[i].nodeValue;\n                    } else if (chld[i].nodeType == 1) {\n                        res += wrap(chld[i]).toString();\n                    }\n                }\n                type && (res += \"</\" + this.type + \">\");\n            } else {\n                type && (res += \"/>\");\n            }\n            return res;\n        };\n    }\n    elproto.toDataURL = function () {\n        if (window && window.btoa) {\n            var bb = this.getBBox(),\n                svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n                x: +bb.x.toFixed(3),\n                y: +bb.y.toFixed(3),\n                width: +bb.width.toFixed(3),\n                height: +bb.height.toFixed(3),\n                contents: this.outerSVG()\n            });\n            return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n        }\n    };\n    /*\\\n     * Fragment.select\n     [ method ]\n     **\n     * See @Element.select\n    \\*/\n    Fragment.prototype.select = elproto.select;\n    /*\\\n     * Fragment.selectAll\n     [ method ]\n     **\n     * See @Element.selectAll\n    \\*/\n    Fragment.prototype.selectAll = elproto.selectAll;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var objectToString = Object.prototype.toString,\n        Str = String,\n        math = Math,\n        E = \"\";\n    function Matrix(a, b, c, d, e, f) {\n        if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n            this.a = a.a;\n            this.b = a.b;\n            this.c = a.c;\n            this.d = a.d;\n            this.e = a.e;\n            this.f = a.f;\n            return;\n        }\n        if (a != null) {\n            this.a = +a;\n            this.b = +b;\n            this.c = +c;\n            this.d = +d;\n            this.e = +e;\n            this.f = +f;\n        } else {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.e = 0;\n            this.f = 0;\n        }\n    }\n    (function (matrixproto) {\n        /*\\\n         * Matrix.add\n         [ method ]\n         **\n         * Adds the given matrix to existing one\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        matrixproto.add = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.add(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + b * this.c,\n                bNew = a * this.b + b * this.d;\n            this.e += e * this.a + f * this.c;\n            this.f += e * this.b + f * this.d;\n            this.c = c * this.a + d * this.c;\n            this.d = c * this.b + d * this.d;\n\n            this.a = aNew;\n            this.b = bNew;\n            return this;\n        };\n        /*\\\n         * Matrix.multLeft\n         [ method ]\n         **\n         * Multiplies a passed affine transform to the left: M * this.\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        Matrix.prototype.multLeft = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.multLeft(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + c * this.b,\n                cNew = a * this.c + c * this.d,\n                eNew = a * this.e + c * this.f + e;\n            this.b = b * this.a + d * this.b;\n            this.d = b * this.c + d * this.d;\n            this.f = b * this.e + d * this.f + f;\n\n            this.a = aNew;\n            this.c = cNew;\n            this.e = eNew;\n            return this;\n        };\n        /*\\\n         * Matrix.invert\n         [ method ]\n         **\n         * Returns an inverted version of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.invert = function () {\n            var me = this,\n                x = me.a * me.d - me.b * me.c;\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n        };\n        /*\\\n         * Matrix.clone\n         [ method ]\n         **\n         * Returns a copy of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.clone = function () {\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n        };\n        /*\\\n         * Matrix.translate\n         [ method ]\n         **\n         * Translate the matrix\n         - x (number) horizontal offset distance\n         - y (number) vertical offset distance\n        \\*/\n        matrixproto.translate = function (x, y) {\n            this.e += x * this.a + y * this.c;\n            this.f += x * this.b + y * this.d;\n            return this;\n        };\n        /*\\\n         * Matrix.scale\n         [ method ]\n         **\n         * Scales the matrix\n         - x (number) amount to be scaled, with `1` resulting in no change\n         - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n         - cx (number) #optional horizontal origin point from which to scale\n         - cy (number) #optional vertical origin point from which to scale\n         * Default cx, cy is the middle point of the element.\n        \\*/\n        matrixproto.scale = function (x, y, cx, cy) {\n            y == null && (y = x);\n            (cx || cy) && this.translate(cx, cy);\n            this.a *= x;\n            this.b *= x;\n            this.c *= y;\n            this.d *= y;\n            (cx || cy) && this.translate(-cx, -cy);\n            return this;\n        };\n        /*\\\n         * Matrix.rotate\n         [ method ]\n         **\n         * Rotates the matrix\n         - a (number) angle of rotation, in degrees\n         - x (number) horizontal origin point from which to rotate\n         - y (number) vertical origin point from which to rotate\n        \\*/\n        matrixproto.rotate = function (a, x, y) {\n            a = Snap.rad(a);\n            x = x || 0;\n            y = y || 0;\n            var cos = +math.cos(a).toFixed(9),\n                sin = +math.sin(a).toFixed(9);\n            this.add(cos, sin, -sin, cos, x, y);\n            return this.add(1, 0, 0, 1, -x, -y);\n        };\n        /*\\\n         * Matrix.skewX\n         [ method ]\n         **\n         * Skews the matrix along the x-axis\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skewX = function (x) {\n            return this.skew(x, 0);\n        };\n        /*\\\n         * Matrix.skewY\n         [ method ]\n         **\n         * Skews the matrix along the y-axis\n         - y (number) Angle to skew along the y-axis (in degrees).\n        \\*/\n        matrixproto.skewY = function (y) {\n            return this.skew(0, y);\n        };\n        /*\\\n         * Matrix.skew\n         [ method ]\n         **\n         * Skews the matrix\n         - y (number) Angle to skew along the y-axis (in degrees).\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skew = function (x, y) {\n            x = x || 0;\n            y = y || 0;\n            x = Snap.rad(x);\n            y = Snap.rad(y);\n            var c = math.tan(x).toFixed(9);\n            var b = math.tan(y).toFixed(9);\n            return this.add(1, b, c, 1, 0, 0);\n        };\n        /*\\\n         * Matrix.x\n         [ method ]\n         **\n         * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n         - x (number)\n         - y (number)\n         = (number) x\n        \\*/\n        matrixproto.x = function (x, y) {\n            return x * this.a + y * this.c + this.e;\n        };\n        /*\\\n         * Matrix.y\n         [ method ]\n         **\n         * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n         - x (number)\n         - y (number)\n         = (number) y\n        \\*/\n        matrixproto.y = function (x, y) {\n            return x * this.b + y * this.d + this.f;\n        };\n        matrixproto.get = function (i) {\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n        };\n        matrixproto.toString = function () {\n            return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n        };\n        matrixproto.offset = function () {\n            return [this.e.toFixed(4), this.f.toFixed(4)];\n        };\n        function norm(a) {\n            return a[0] * a[0] + a[1] * a[1];\n        }\n        function normalize(a) {\n            var mag = math.sqrt(norm(a));\n            a[0] && (a[0] /= mag);\n            a[1] && (a[1] /= mag);\n        }\n        /*\\\n         * Matrix.determinant\n         [ method ]\n         **\n         * Finds determinant of the given matrix.\n         = (number) determinant\n        \\*/\n        matrixproto.determinant = function () {\n            return this.a * this.d - this.b * this.c;\n        };\n        /*\\\n         * Matrix.split\n         [ method ]\n         **\n         * Splits matrix into primitive transformations\n         = (object) in format:\n         o dx (number) translation by x\n         o dy (number) translation by y\n         o scalex (number) scale by x\n         o scaley (number) scale by y\n         o shear (number) shear\n         o rotate (number) rotation in deg\n         o isSimple (boolean) could it be represented via simple transformations\n        \\*/\n        matrixproto.split = function () {\n            var out = {};\n            // translation\n            out.dx = this.e;\n            out.dy = this.f;\n\n            // scale and shear\n            var row = [[this.a, this.b], [this.c, this.d]];\n            out.scalex = math.sqrt(norm(row[0]));\n            normalize(row[0]);\n\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\n            out.scaley = math.sqrt(norm(row[1]));\n            normalize(row[1]);\n            out.shear /= out.scaley;\n\n            if (this.determinant() < 0) {\n                out.scalex = -out.scalex;\n            }\n\n            // rotation\n            var sin = row[0][1],\n                cos = row[1][1];\n            if (cos < 0) {\n                out.rotate = Snap.deg(math.acos(cos));\n                if (sin < 0) {\n                    out.rotate = 360 - out.rotate;\n                }\n            } else {\n                out.rotate = Snap.deg(math.asin(sin));\n            }\n\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n            return out;\n        };\n        /*\\\n         * Matrix.toTransformString\n         [ method ]\n         **\n         * Returns transform string that represents given matrix\n         = (string) transform string\n        \\*/\n        matrixproto.toTransformString = function (shorter) {\n            var s = shorter || this.split();\n            if (!+s.shear.toFixed(9)) {\n                s.scalex = +s.scalex.toFixed(4);\n                s.scaley = +s.scaley.toFixed(4);\n                s.rotate = +s.rotate.toFixed(4);\n                return  (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) +\n                        (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E) +\n                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E);\n            } else {\n                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n            }\n        };\n    })(Matrix.prototype);\n    /*\\\n     * Snap.Matrix\n     [ method ]\n     **\n     * Matrix constructor, extend on your own risk.\n     * To create matrices use @Snap.matrix.\n    \\*/\n    Snap.Matrix = Matrix;\n    /*\\\n     * Snap.matrix\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns a matrix based on the given parameters\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - svgMatrix (SVGMatrix)\n     = (object) @Matrix\n    \\*/\n    Snap.matrix = function (a, b, c, d, e, f) {\n        return new Matrix(a, b, c, d, e, f);\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var has = \"hasOwnProperty\",\n        make = Snap._.make,\n        wrap = Snap._.wrap,\n        is = Snap.is,\n        getSomeDefs = Snap._.getSomeDefs,\n        reURLValue = /^url\\((['\"]?)([^)]+)\\1\\)$/,\n        $ = Snap._.$,\n        URL = Snap.url,\n        Str = String,\n        separator = Snap._.separator,\n        E = \"\";\n    /*\\\n     * Snap.deurl\n     [ method ]\n     **\n     * Unwraps path from `\"url(<path>)\"`.\n     - value (string) url path\n     = (string) unwrapped path\n    \\*/\n    Snap.deurl = function (value) {\n        var res = String(value).match(reURLValue);\n        return res ? res[2] : value;\n    }\n    // Attributes event handlers\n    eve.on(\"snap.util.attr.mask\", function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value.type == \"mask\") {\n                var mask = value;\n            } else {\n                mask = make(\"mask\", getSomeDefs(this));\n                mask.node.appendChild(value.node);\n            }\n            !mask.node.id && $(mask.node, {\n                id: mask.id\n            });\n            $(this.node, {\n                mask: URL(mask.id)\n            });\n        }\n    });\n    (function (clipIt) {\n        eve.on(\"snap.util.attr.clip\", clipIt);\n        eve.on(\"snap.util.attr.clip-path\", clipIt);\n        eve.on(\"snap.util.attr.clipPath\", clipIt);\n    }(function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            var clip,\n                node = value.node;\n            while (node) {\n                if (node.nodeName === \"clipPath\") {\n                    clip = new Element(node);\n                    break;\n                }\n                if (node.nodeName === \"svg\") {\n                    clip = undefined;\n                    break;\n                }\n                node = node.parentNode;\n            }\n            if (!clip) {\n                clip = make(\"clipPath\", getSomeDefs(this));\n                clip.node.appendChild(value.node);\n                !clip.node.id && $(clip.node, {\n                    id: clip.id\n                });\n            }\n            $(this.node, {\n                \"clip-path\": URL(clip.node.id || clip.id)\n            });\n        }\n    }));\n    function fillStroke(name) {\n        return function (value) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1 &&\n                (value.node.firstChild.tagName == \"radialGradient\" ||\n                value.node.firstChild.tagName == \"linearGradient\" ||\n                value.node.firstChild.tagName == \"pattern\")) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value instanceof Element) {\n                if (value.type == \"radialGradient\" || value.type == \"linearGradient\"\n                   || value.type == \"pattern\") {\n                    if (!value.node.id) {\n                        $(value.node, {\n                            id: value.id\n                        });\n                    }\n                    var fill = URL(value.node.id);\n                } else {\n                    fill = value.attr(name);\n                }\n            } else {\n                fill = Snap.color(value);\n                if (fill.error) {\n                    var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n                    if (grad) {\n                        if (!grad.node.id) {\n                            $(grad.node, {\n                                id: grad.id\n                            });\n                        }\n                        fill = URL(grad.node.id);\n                    } else {\n                        fill = value;\n                    }\n                } else {\n                    fill = Str(fill);\n                }\n            }\n            var attrs = {};\n            attrs[name] = fill;\n            $(this.node, attrs);\n            this.node.style[name] = E;\n        };\n    }\n    eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n    eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n    var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n    eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n        string = Str(string);\n        var tokens = string.match(gradrg);\n        if (!tokens) {\n            return null;\n        }\n        var type = tokens[1],\n            params = tokens[2],\n            stops = tokens[3];\n        params = params.split(/\\s*,\\s*/).map(function (el) {\n            return +el == el ? +el : el;\n        });\n        if (params.length == 1 && params[0] == 0) {\n            params = [];\n        }\n        stops = stops.split(\"-\");\n        stops = stops.map(function (el) {\n            el = el.split(\":\");\n            var out = {\n                color: el[0]\n            };\n            if (el[1]) {\n                out.offset = parseFloat(el[1]);\n            }\n            return out;\n        });\n        var len = stops.length,\n            start = 0,\n            j = 0;\n        function seed(i, end) {\n            var step = (end - start) / (i - j);\n            for (var k = j; k < i; k++) {\n                stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n            }\n            j = i;\n            start = end;\n        }\n        len--;\n        for (var i = 0; i < len; i++) if (\"offset\" in stops[i]) {\n            seed(i, stops[i].offset);\n        }\n        stops[len].offset = stops[len].offset || 100;\n        seed(len, stops[len].offset);\n        return {\n            type: type,\n            params: params,\n            stops: stops\n        };\n    });\n\n    eve.on(\"snap.util.attr.d\", function (value) {\n        eve.stop();\n        if (is(value, \"array\") && is(value[0], \"array\")) {\n            value = Snap.path.toString.call(value);\n        }\n        value = Str(value);\n        if (value.match(/[ruo]/i)) {\n            value = Snap.path.toAbsolute(value);\n        }\n        $(this.node, {d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.#text\", function (value) {\n        eve.stop();\n        value = Str(value);\n        var txt = glob.doc.createTextNode(value);\n        while (this.node.firstChild) {\n            this.node.removeChild(this.node.firstChild);\n        }\n        this.node.appendChild(txt);\n    })(-1);\n    eve.on(\"snap.util.attr.path\", function (value) {\n        eve.stop();\n        this.attr({d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.class\", function (value) {\n        eve.stop();\n        this.node.className.baseVal = value;\n    })(-1);\n    eve.on(\"snap.util.attr.viewBox\", function (value) {\n        var vb;\n        if (is(value, \"object\") && \"x\" in value) {\n            vb = [value.x, value.y, value.width, value.height].join(\" \");\n        } else if (is(value, \"array\")) {\n            vb = value.join(\" \");\n        } else {\n            vb = value;\n        }\n        $(this.node, {\n            viewBox: vb\n        });\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.transform\", function (value) {\n        this.transform(value);\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.r\", function (value) {\n        if (this.type == \"rect\") {\n            eve.stop();\n            $(this.node, {\n                rx: value,\n                ry: value\n            });\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.textpath\", function (value) {\n        eve.stop();\n        if (this.type == \"text\") {\n            var id, tp, node;\n            if (!value && this.textPath) {\n                tp = this.textPath;\n                while (tp.node.firstChild) {\n                    this.node.appendChild(tp.node.firstChild);\n                }\n                tp.remove();\n                delete this.textPath;\n                return;\n            }\n            if (is(value, \"string\")) {\n                var defs = getSomeDefs(this),\n                    path = wrap(defs.parentNode).path(value);\n                defs.appendChild(path.node);\n                id = path.id;\n                path.attr({id: id});\n            } else {\n                value = wrap(value);\n                if (value instanceof Element) {\n                    id = value.attr(\"id\");\n                    if (!id) {\n                        id = value.id;\n                        value.attr({id: id});\n                    }\n                }\n            }\n            if (id) {\n                tp = this.textPath;\n                node = this.node;\n                if (tp) {\n                    tp.attr({\"xlink:href\": \"#\" + id});\n                } else {\n                    tp = $(\"textPath\", {\n                        \"xlink:href\": \"#\" + id\n                    });\n                    while (node.firstChild) {\n                        tp.appendChild(node.firstChild);\n                    }\n                    node.appendChild(tp);\n                    this.textPath = wrap(tp);\n                }\n            }\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.text\", function (value) {\n        if (this.type == \"text\") {\n            var i = 0,\n                node = this.node,\n                tuner = function (chunk) {\n                    var out = $(\"tspan\");\n                    if (is(chunk, \"array\")) {\n                        for (var i = 0; i < chunk.length; i++) {\n                            out.appendChild(tuner(chunk[i]));\n                        }\n                    } else {\n                        out.appendChild(glob.doc.createTextNode(chunk));\n                    }\n                    out.normalize && out.normalize();\n                    return out;\n                };\n            while (node.firstChild) {\n                node.removeChild(node.firstChild);\n            }\n            var tuned = tuner(value);\n            while (tuned.firstChild) {\n                node.appendChild(tuned.firstChild);\n            }\n        }\n        eve.stop();\n    })(-1);\n    function setFontSize(value) {\n        eve.stop();\n        if (value == +value) {\n            value += \"px\";\n        }\n        this.node.style.fontSize = value;\n    }\n    eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n    eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n\n\n    eve.on(\"snap.util.getattr.transform\", function () {\n        eve.stop();\n        return this.transform();\n    })(-1);\n    eve.on(\"snap.util.getattr.textpath\", function () {\n        eve.stop();\n        return this.textPath;\n    })(-1);\n    // Markers\n    (function () {\n        function getter(end) {\n            return function () {\n                eve.stop();\n                var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n                if (style == \"none\") {\n                    return style;\n                } else {\n                    return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n                }\n            };\n        }\n        function setter(end) {\n            return function (value) {\n                eve.stop();\n                var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n                if (value == \"\" || !value) {\n                    this.node.style[name] = \"none\";\n                    return;\n                }\n                if (value.type == \"marker\") {\n                    var id = value.node.id;\n                    if (!id) {\n                        $(value.node, {id: value.id});\n                    }\n                    this.node.style[name] = URL(id);\n                    return;\n                }\n            };\n        }\n        eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n    }());\n    eve.on(\"snap.util.getattr.r\", function () {\n        if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n            eve.stop();\n            return $(this.node, \"rx\");\n        }\n    })(-1);\n    function textExtract(node) {\n        var out = [];\n        var children = node.childNodes;\n        for (var i = 0, ii = children.length; i < ii; i++) {\n            var chi = children[i];\n            if (chi.nodeType == 3) {\n                out.push(chi.nodeValue);\n            }\n            if (chi.tagName == \"tspan\") {\n                if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n                    out.push(chi.firstChild.nodeValue);\n                } else {\n                    out.push(textExtract(chi));\n                }\n            }\n        }\n        return out;\n    }\n    eve.on(\"snap.util.getattr.text\", function () {\n        if (this.type == \"text\" || this.type == \"tspan\") {\n            eve.stop();\n            var out = textExtract(this.node);\n            return out.length == 1 ? out[0] : out;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.#text\", function () {\n        return this.node.textContent;\n    })(-1);\n    eve.on(\"snap.util.getattr.fill\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.fill\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.stroke\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.stroke\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.viewBox\", function () {\n        eve.stop();\n        var vb = $(this.node, \"viewBox\");\n        if (vb) {\n            vb = vb.split(separator);\n            return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.points\", function () {\n        var p = $(this.node, \"points\");\n        eve.stop();\n        if (p) {\n            return p.split(separator);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.path\", function () {\n        var p = $(this.node, \"d\");\n        eve.stop();\n        return p;\n    })(-1);\n    eve.on(\"snap.util.getattr.class\", function () {\n        return this.node.className.baseVal;\n    })(-1);\n    function getFontSize() {\n        eve.stop();\n        return this.node.style.fontSize;\n    }\n    eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n    eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var rgNotSpace = /\\S+/g,\n        rgBadSpace = /[\\t\\r\\n\\f]/g,\n        rgTrim = /(^\\s+|\\s+$)/g,\n        Str = String,\n        elproto = Element.prototype;\n    /*\\\n     * Element.addClass\n     [ method ]\n     **\n     * Adds given class name or list of class names to the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.addClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n\n        if (classes.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (!~pos) {\n                    curClasses.push(clazz);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.removeClass\n     [ method ]\n     **\n     * Removes given class name or list of class names from the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.removeClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        if (curClasses.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (~pos) {\n                    curClasses.splice(pos, 1);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.hasClass\n     [ method ]\n     **\n     * Checks if the element has a given class name in the list of class names applied to it.\n     - value (string) class name\n     **\n     = (boolean) `true` if the element has given class\n    \\*/\n    elproto.hasClass = function (value) {\n        var elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [];\n        return !!~curClasses.indexOf(value);\n    };\n    /*\\\n     * Element.toggleClass\n     [ method ]\n     **\n     * Add or remove one or more classes from the element, depending on either\n     * the class’s presence or the value of the `flag` argument.\n     - value (string) class name or space separated list of class names\n     - flag (boolean) value to determine whether the class should be added or removed\n     **\n     = (Element) original element.\n    \\*/\n    elproto.toggleClass = function (value, flag) {\n        if (flag != null) {\n            if (flag) {\n                return this.addClass(value);\n            } else {\n                return this.removeClass(value);\n            }\n        }\n        var classes = (value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        j = 0;\n        while (clazz = classes[j++]) {\n            pos = curClasses.indexOf(clazz);\n            if (~pos) {\n                curClasses.splice(pos, 1);\n            } else {\n                curClasses.push(clazz);\n            }\n        }\n\n        finalValue = curClasses.join(\" \");\n        if (className != finalValue) {\n            elem.className.baseVal = finalValue;\n        }\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var operators = {\n            \"+\": function (x, y) {\n                    return x + y;\n                },\n            \"-\": function (x, y) {\n                    return x - y;\n                },\n            \"/\": function (x, y) {\n                    return x / y;\n                },\n            \"*\": function (x, y) {\n                    return x * y;\n                }\n        },\n        Str = String,\n        reUnit = /[a-z]+$/i,\n        reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    eve.on(\"snap.util.attr\", function (val) {\n        var plus = Str(val).match(reAddon);\n        if (plus) {\n            var evnt = eve.nt(),\n                name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n                a = this.attr(name),\n                atr = {};\n            eve.stop();\n            var unit = plus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[plus[1]];\n            if (aUnit && aUnit == unit) {\n                val = op(parseFloat(a), +plus[2]);\n            } else {\n                a = this.asPX(name);\n                val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n            }\n            if (isNaN(a) || isNaN(val)) {\n                return;\n            }\n            atr[name] = val;\n            this.attr(atr);\n        }\n    })(-10);\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this,\n            bplus = Str(b).match(reAddon);\n        if (bplus) {\n            eve.stop();\n            var unit = bplus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[bplus[1]];\n            if (aUnit && aUnit == unit) {\n                return {\n                    from: parseFloat(a),\n                    to: op(parseFloat(a), +bplus[2]),\n                    f: getUnit(aUnit)\n                };\n            } else {\n                a = this.asPX(name);\n                return {\n                    from: a,\n                    to: op(a, this.asPX(name, bplus[2] + unit)),\n                    f: getNumber\n                };\n            }\n        }\n    })(-10);\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var proto = Paper.prototype,\n        is = Snap.is;\n    /*\\\n     * Paper.rect\n     [ method ]\n     *\n     * Draws a rectangle\n     **\n     - x (number) x coordinate of the top left corner\n     - y (number) y coordinate of the top left corner\n     - width (number) width\n     - height (number) height\n     - rx (number) #optional horizontal radius for rounded corners, default is 0\n     - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n     = (object) the `rect` element\n     **\n     > Usage\n     | // regular rectangle\n     | var c = paper.rect(10, 10, 50, 50);\n     | // rectangle with rounded corners\n     | var c = paper.rect(40, 40, 50, 50, 10);\n    \\*/\n    proto.rect = function (x, y, w, h, rx, ry) {\n        var attr;\n        if (ry == null) {\n            ry = rx;\n        }\n        if (is(x, \"object\") && x == \"[object Object]\") {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                width: w,\n                height: h\n            };\n            if (rx != null) {\n                attr.rx = rx;\n                attr.ry = ry;\n            }\n        }\n        return this.el(\"rect\", attr);\n    };\n    /*\\\n     * Paper.circle\n     [ method ]\n     **\n     * Draws a circle\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - r (number) radius\n     = (object) the `circle` element\n     **\n     > Usage\n     | var c = paper.circle(50, 50, 40);\n    \\*/\n    proto.circle = function (cx, cy, r) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr = {\n                cx: cx,\n                cy: cy,\n                r: r\n            };\n        }\n        return this.el(\"circle\", attr);\n    };\n\n    var preload = (function () {\n        function onerror() {\n            this.parentNode.removeChild(this);\n        }\n        return function (src, f) {\n            var img = glob.doc.createElement(\"img\"),\n                body = glob.doc.body;\n            img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n            img.onload = function () {\n                f.call(img);\n                img.onload = img.onerror = null;\n                body.removeChild(img);\n            };\n            img.onerror = onerror;\n            body.appendChild(img);\n            img.src = src;\n        };\n    }());\n\n    /*\\\n     * Paper.image\n     [ method ]\n     **\n     * Places an image on the surface\n     **\n     - src (string) URI of the source image\n     - x (number) x offset position\n     - y (number) y offset position\n     - width (number) width of the image\n     - height (number) height of the image\n     = (object) the `image` element\n     * or\n     = (object) Snap element object with type `image`\n     **\n     > Usage\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n    \\*/\n    proto.image = function (src, x, y, width, height) {\n        var el = this.el(\"image\");\n        if (is(src, \"object\") && \"src\" in src) {\n            el.attr(src);\n        } else if (src != null) {\n            var set = {\n                \"xlink:href\": src,\n                preserveAspectRatio: \"none\"\n            };\n            if (x != null && y != null) {\n                set.x = x;\n                set.y = y;\n            }\n            if (width != null && height != null) {\n                set.width = width;\n                set.height = height;\n            } else {\n                preload(src, function () {\n                    Snap._.$(el.node, {\n                        width: this.offsetWidth,\n                        height: this.offsetHeight\n                    });\n                });\n            }\n            Snap._.$(el.node, set);\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ellipse\n     [ method ]\n     **\n     * Draws an ellipse\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - rx (number) horizontal radius\n     - ry (number) vertical radius\n     = (object) the `ellipse` element\n     **\n     > Usage\n     | var c = paper.ellipse(50, 50, 40, 20);\n    \\*/\n    proto.ellipse = function (cx, cy, rx, ry) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr ={\n                cx: cx,\n                cy: cy,\n                rx: rx,\n                ry: ry\n            };\n        }\n        return this.el(\"ellipse\", attr);\n    };\n    // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n    /*\\\n     * Paper.path\n     [ method ]\n     **\n     * Creates a `<path>` element using the given string as the path's definition\n     - pathString (string) #optional path string in SVG format\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n     | \"M10,20L30,40\"\n     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n     *\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n     > Usage\n     | var c = paper.path(\"M10 10L90 90\");\n     | // draw a diagonal line:\n     | // move to 10,10, line to 90,90\n    \\*/\n    proto.path = function (d) {\n        var attr;\n        if (is(d, \"object\") && !is(d, \"array\")) {\n            attr = d;\n        } else if (d) {\n            attr = {d: d};\n        }\n        return this.el(\"path\", attr);\n    };\n    /*\\\n     * Paper.g\n     [ method ]\n     **\n     * Creates a group element\n     **\n     - varargs (…) #optional elements to nest within the group\n     = (object) the `g` element\n     **\n     > Usage\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g(c2, c1); // note that the order of elements is different\n     * or\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g();\n     | g.add(c2, c1);\n    \\*/\n    /*\\\n     * Paper.group\n     [ method ]\n     **\n     * See @Paper.g\n    \\*/\n    proto.group = proto.g = function (first) {\n        var attr,\n            el = this.el(\"g\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.svg\n     [ method ]\n     **\n     * Creates a nested SVG element.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `svg` element\n     **\n    \\*/\n    proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n        var attrs = {};\n        if (is(x, \"object\") && y == null) {\n            attrs = x;\n        } else {\n            if (x != null) {\n                attrs.x = x;\n            }\n            if (y != null) {\n                attrs.y = y;\n            }\n            if (width != null) {\n                attrs.width = width;\n            }\n            if (height != null) {\n                attrs.height = height;\n            }\n            if (vbx != null && vby != null && vbw != null && vbh != null) {\n                attrs.viewBox = [vbx, vby, vbw, vbh];\n            }\n        }\n        return this.el(\"svg\", attrs);\n    };\n    /*\\\n     * Paper.mask\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a mask.\n     **\n     = (object) the `mask` element\n     **\n    \\*/\n    proto.mask = function (first) {\n        var attr,\n            el = this.el(\"mask\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ptrn\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `pattern` element\n     **\n    \\*/\n    proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n        if (is(x, \"object\")) {\n            var attr = x;\n        } else {\n            attr = {patternUnits: \"userSpaceOnUse\"};\n            if (x) {\n                attr.x = x;\n            }\n            if (y) {\n                attr.y = y;\n            }\n            if (width != null) {\n                attr.width = width;\n            }\n            if (height != null) {\n                attr.height = height;\n            }\n            if (vx != null && vy != null && vw != null && vh != null) {\n                attr.viewBox = [vx, vy, vw, vh];\n            } else {\n                attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n            }\n        }\n        return this.el(\"pattern\", attr);\n    };\n    /*\\\n     * Paper.use\n     [ method ]\n     **\n     * Creates a <use> element.\n     - id (string) @optional id of element to link\n     * or\n     - id (Element) @optional element to link\n     **\n     = (object) the `use` element\n     **\n    \\*/\n    proto.use = function (id) {\n        if (id != null) {\n            if (id instanceof Element) {\n                if (!id.attr(\"id\")) {\n                    id.attr({id: Snap._.id(id)});\n                }\n                id = id.attr(\"id\");\n            }\n            if (String(id).charAt() == \"#\") {\n                id = id.substring(1);\n            }\n            return this.el(\"use\", {\"xlink:href\": \"#\" + id});\n        } else {\n            return Element.prototype.use.call(this);\n        }\n    };\n    /*\\\n     * Paper.symbol\n     [ method ]\n     **\n     * Creates a <symbol> element.\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     = (object) the `symbol` element\n     **\n    \\*/\n    proto.symbol = function (vx, vy, vw, vh) {\n        var attr = {};\n        if (vx != null && vy != null && vw != null && vh != null) {\n            attr.viewBox = [vx, vy, vw, vh];\n        }\n\n        return this.el(\"symbol\", attr);\n    };\n    /*\\\n     * Paper.text\n     [ method ]\n     **\n     * Draws a text string\n     **\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n     = (object) the `text` element\n     **\n     > Usage\n     | var t1 = paper.text(50, 50, \"Snap\");\n     | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n     | // Text path usage\n     | t1.attr({textpath: \"M10,10L100,100\"});\n     | // or\n     | var pth = paper.path(\"M10,10L100,100\");\n     | t1.attr({textpath: pth});\n    \\*/\n    proto.text = function (x, y, text) {\n        var attr = {};\n        if (is(x, \"object\")) {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                text: text || \"\"\n            };\n        }\n        return this.el(\"text\", attr);\n    };\n    /*\\\n     * Paper.line\n     [ method ]\n     **\n     * Draws a line\n     **\n     - x1 (number) x coordinate position of the start\n     - y1 (number) y coordinate position of the start\n     - x2 (number) x coordinate position of the end\n     - y2 (number) y coordinate position of the end\n     = (object) the `line` element\n     **\n     > Usage\n     | var t1 = paper.line(50, 50, 100, 100);\n    \\*/\n    proto.line = function (x1, y1, x2, y2) {\n        var attr = {};\n        if (is(x1, \"object\")) {\n            attr = x1;\n        } else if (x1 != null) {\n            attr = {\n                x1: x1,\n                x2: x2,\n                y1: y1,\n                y2: y2\n            };\n        }\n        return this.el(\"line\", attr);\n    };\n    /*\\\n     * Paper.polyline\n     [ method ]\n     **\n     * Draws a polyline\n     **\n     - points (array) array of points\n     * or\n     - varargs (…) points\n     = (object) the `polyline` element\n     **\n     > Usage\n     | var p1 = paper.polyline([10, 10, 100, 100]);\n     | var p2 = paper.polyline(10, 10, 100, 100);\n    \\*/\n    proto.polyline = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polyline\", attr);\n    };\n    /*\\\n     * Paper.polygon\n     [ method ]\n     **\n     * Draws a polygon. See @Paper.polyline\n    \\*/\n    proto.polygon = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polygon\", attr);\n    };\n    // gradients\n    (function () {\n        var $ = Snap._.$;\n        // gradients' helpers\n        /*\\\n         * Element.stops\n         [ method ]\n         **\n         * Only for gradients!\n         * Returns array of gradient stops elements.\n         = (array) the stops array.\n        \\*/\n        function Gstops() {\n            return this.selectAll(\"stop\");\n        }\n        /*\\\n         * Element.addStop\n         [ method ]\n         **\n         * Only for gradients!\n         * Adds another stop to the gradient.\n         - color (string) stops color\n         - offset (number) stops offset 0..100\n         = (object) gradient element\n        \\*/\n        function GaddStop(color, offset) {\n            var stop = $(\"stop\"),\n                attr = {\n                    offset: +offset + \"%\"\n                };\n            color = Snap.color(color);\n            attr[\"stop-color\"] = color.hex;\n            if (color.opacity < 1) {\n                attr[\"stop-opacity\"] = color.opacity;\n            }\n            $(stop, attr);\n            var stops = this.stops(),\n                inserted;\n            for (var i = 0; i < stops.length; i++) {\n                var stopOffset = parseFloat(stops[i].attr(\"offset\"));\n                if (stopOffset > offset) {\n                    this.node.insertBefore(stop, stops[i].node);\n                    inserted = true;\n                    break;\n                }\n            }\n            if (!inserted) {\n                this.node.appendChild(stop);\n            }\n            return this;\n        }\n        function GgetBBox() {\n            if (this.type == \"linearGradient\") {\n                var x1 = $(this.node, \"x1\") || 0,\n                    x2 = $(this.node, \"x2\") || 1,\n                    y1 = $(this.node, \"y1\") || 0,\n                    y2 = $(this.node, \"y2\") || 0;\n                return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n            } else {\n                var cx = this.node.cx || .5,\n                    cy = this.node.cy || .5,\n                    r = this.node.r || 0;\n                return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n            }\n        }\n        /*\\\n         * Element.setStops\n         [ method ]\n         **\n         * Only for gradients!\n         * Updates stops of the gradient based on passed gradient descriptor. See @Ppaer.gradient\n         - str (string) gradient descriptor part after `()`.\n         = (object) gradient element\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         | g.setStops(\"#fff-#000-#f00-#fc0\");\n        \\*/\n        function GsetStops(str) {\n            var grad = str,\n                stops = this.stops();\n            if (typeof str == \"string\") {\n                grad = eve(\"snap.util.grad.parse\", null, \"l(0,0,0,1)\" + str).firstDefined().stops;\n            }\n            if (!Snap.is(grad, \"array\")) {\n                return;\n            }\n            for (var i = 0; i < stops.length; i++) {\n                if (grad[i]) {\n                    var color = Snap.color(grad[i].color),\n                        attr = {\"offset\": grad[i].offset + \"%\"};\n                    attr[\"stop-color\"] = color.hex;\n                    if (color.opacity < 1) {\n                        attr[\"stop-opacity\"] = color.opacity;\n                    }\n                    stops[i].attr(attr);\n                } else {\n                    stops[i].remove();\n                }\n            }\n            for (i = stops.length; i < grad.length; i++) {\n                this.addStop(grad[i].color, grad[i].offset);\n            }\n            return this;\n        }\n        function gradient(defs, str) {\n            var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n                el;\n            if (!grad) {\n                return null;\n            }\n            grad.params.unshift(defs);\n            if (grad.type.toLowerCase() == \"l\") {\n                el = gradientLinear.apply(0, grad.params);\n            } else {\n                el = gradientRadial.apply(0, grad.params);\n            }\n            if (grad.type != grad.type.toLowerCase()) {\n                $(el.node, {\n                    gradientUnits: \"userSpaceOnUse\"\n                });\n            }\n            var stops = grad.stops,\n                len = stops.length;\n            for (var i = 0; i < len; i++) {\n                var stop = stops[i];\n                el.addStop(stop.color, stop.offset);\n            }\n            return el;\n        }\n        function gradientLinear(defs, x1, y1, x2, y2) {\n            var el = Snap._.make(\"linearGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            el.setStops = GsetStops;\n            if (x1 != null) {\n                $(el.node, {\n                    x1: x1,\n                    y1: y1,\n                    x2: x2,\n                    y2: y2\n                });\n            }\n            return el;\n        }\n        function gradientRadial(defs, cx, cy, r, fx, fy) {\n            var el = Snap._.make(\"radialGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            if (cx != null) {\n                $(el.node, {\n                    cx: cx,\n                    cy: cy,\n                    r: r\n                });\n            }\n            if (fx != null && fy != null) {\n                $(el.node, {\n                    fx: fx,\n                    fy: fy\n                });\n            }\n            return el;\n        }\n        /*\\\n         * Paper.gradient\n         [ method ]\n         **\n         * Creates a gradient element\n         **\n         - gradient (string) gradient descriptor\n         > Gradient Descriptor\n         * The gradient descriptor is an expression formatted as\n         * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n         * either linear or radial.  The uppercase `L` or `R` letters\n         * indicate absolute coordinates offset from the SVG surface.\n         * Lowercase `l` or `r` letters indicate coordinates\n         * calculated relative to the element to which the gradient is\n         * applied.  Coordinates specify a linear gradient vector as\n         * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n         * `r` and optional `fx`, `fy` specifying a focal point away\n         * from the center of the circle. Specify `<colors>` as a list\n         * of dash-separated CSS color values.  Each color may be\n         * followed by a custom offset value, separated with a colon\n         * character.\n         > Examples\n         * Linear gradient, relative from top-left corner to bottom-right\n         * corner, from black through red to white:\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         * Linear gradient, absolute from (0, 0) to (100, 100), from black\n         * through red at 25% to white:\n         | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n         * Radial gradient, relative from the center of the element with radius\n         * half the width, from black to white:\n         | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n         * To apply the gradient:\n         | paper.circle(50, 50, 40).attr({\n         |     fill: g\n         | });\n         = (object) the `gradient` element\n        \\*/\n        proto.gradient = function (str) {\n            return gradient(this.defs, str);\n        };\n        proto.gradientLinear = function (x1, y1, x2, y2) {\n            return gradientLinear(this.defs, x1, y1, x2, y2);\n        };\n        proto.gradientRadial = function (cx, cy, r, fx, fy) {\n            return gradientRadial(this.defs, cx, cy, r, fx, fy);\n        };\n        /*\\\n         * Paper.toString\n         [ method ]\n         **\n         * Returns SVG code for the @Paper\n         = (string) SVG code for the @Paper\n        \\*/\n        proto.toString = function () {\n            var doc = this.node.ownerDocument,\n                f = doc.createDocumentFragment(),\n                d = doc.createElement(\"div\"),\n                svg = this.node.cloneNode(true),\n                res;\n            f.appendChild(d);\n            d.appendChild(svg);\n            Snap._.$(svg, {xmlns: \"http://www.w3.org/2000/svg\"});\n            res = d.innerHTML;\n            f.removeChild(f.firstChild);\n            return res;\n        };\n        /*\\\n         * Paper.toDataURL\n         [ method ]\n         **\n         * Returns SVG code for the @Paper as Data URI string.\n         = (string) Data URI string\n        \\*/\n        proto.toDataURL = function () {\n            if (window && window.btoa) {\n                return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n            }\n        };\n        /*\\\n         * Paper.clear\n         [ method ]\n         **\n         * Removes all child nodes of the paper, except <defs>.\n        \\*/\n        proto.clear = function () {\n            var node = this.node.firstChild,\n                next;\n            while (node) {\n                next = node.nextSibling;\n                if (node.tagName != \"defs\") {\n                    node.parentNode.removeChild(node);\n                } else {\n                    proto.clear.call({node: node});\n                }\n                node = next;\n            }\n        };\n    }());\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        clone = Snap._.clone,\n        has = \"hasOwnProperty\",\n        p2s = /,?([a-z]),?/gi,\n        toFloat = parseFloat,\n        math = Math,\n        PI = math.PI,\n        mmin = math.min,\n        mmax = math.max,\n        pow = math.pow,\n        abs = math.abs;\n    function paths(ps) {\n        var p = paths.ps = paths.ps || {};\n        if (p[ps]) {\n            p[ps].sleep = 100;\n        } else {\n            p[ps] = {\n                sleep: 100\n            };\n        }\n        setTimeout(function () {\n            for (var key in p) if (p[has](key) && key != ps) {\n                p[key].sleep--;\n                !p[key].sleep && delete p[key];\n            }\n        });\n        return p[ps];\n    }\n    function box(x, y, width, height) {\n        if (x == null) {\n            x = y = width = height = 0;\n        }\n        if (y == null) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            w: width,\n            height: height,\n            h: height,\n            x2: x + width,\n            y2: y + height,\n            cx: x + width / 2,\n            cy: y + height / 2,\n            r1: math.min(width, height) / 2,\n            r2: math.max(width, height) / 2,\n            r0: math.sqrt(width * width + height * height) / 2,\n            path: rectPath(x, y, width, height),\n            vb: [x, y, width, height].join(\" \")\n        };\n    }\n    function toString() {\n        return this.join(\",\").replace(p2s, \"$1\");\n    }\n    function pathClone(pathArray) {\n        var res = clone(pathArray);\n        res.toString = toString;\n        return res;\n    }\n    function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n        if (length == null) {\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n        } else {\n            return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y,\n                getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n        }\n    }\n    function getLengthFactory(istotal, subpath) {\n        function O(val) {\n            return +(+val).toFixed(3);\n        }\n        return Snap._.cacher(function (path, length, onlystart) {\n            if (path instanceof Element) {\n                path = path.attr(\"d\");\n            }\n            path = path2curve(path);\n            var x, y, p, l, sp = \"\", subpaths = {}, point,\n                len = 0;\n            for (var i = 0, ii = path.length; i < ii; i++) {\n                p = path[i];\n                if (p[0] == \"M\") {\n                    x = +p[1];\n                    y = +p[2];\n                } else {\n                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                    if (len + l > length) {\n                        if (subpath && !subpaths.start) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            sp += [\n                                \"C\" + O(point.start.x),\n                                O(point.start.y),\n                                O(point.m.x),\n                                O(point.m.y),\n                                O(point.x),\n                                O(point.y)\n                            ];\n                            if (onlystart) {return sp;}\n                            subpaths.start = sp;\n                            sp = [\n                                \"M\" + O(point.x),\n                                O(point.y) + \"C\" + O(point.n.x),\n                                O(point.n.y),\n                                O(point.end.x),\n                                O(point.end.y),\n                                O(p[5]),\n                                O(p[6])\n                            ].join();\n                            len += l;\n                            x = +p[5];\n                            y = +p[6];\n                            continue;\n                        }\n                        if (!istotal && !subpath) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            return point;\n                        }\n                    }\n                    len += l;\n                    x = +p[5];\n                    y = +p[6];\n                }\n                sp += p.shift() + p;\n            }\n            subpaths.end = sp;\n            point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n            return point;\n        }, null, Snap._.clone);\n    }\n    var getTotalLength = getLengthFactory(1),\n        getPointAtLength = getLengthFactory(),\n        getSubpathsAtLength = getLengthFactory(0, 1);\n    function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t,\n            t13 = pow(t1, 3),\n            t12 = pow(t1, 2),\n            t2 = t * t,\n            t3 = t2 * t,\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n            ax = t1 * p1x + t * c1x,\n            ay = t1 * p1y + t * c1y,\n            cx = t1 * c2x + t * p2x,\n            cy = t1 * c2y + t * p2y,\n            alpha = 90 - math.atan2(mx - nx, my - ny) * 180 / PI;\n        // (mx > nx || my < ny) && (alpha += 180);\n        return {\n            x: x,\n            y: y,\n            m: {x: mx, y: my},\n            n: {x: nx, y: ny},\n            start: {x: ax, y: ay},\n            end: {x: cx, y: cy},\n            alpha: alpha\n        };\n    }\n    function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n        if (!Snap.is(p1x, \"array\")) {\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n        }\n        var bbox = curveDim.apply(null, p1x);\n        return box(\n            bbox.min.x,\n            bbox.min.y,\n            bbox.max.x - bbox.min.x,\n            bbox.max.y - bbox.min.y\n        );\n    }\n    function isPointInsideBBox(bbox, x, y) {\n        return  x >= bbox.x &&\n                x <= bbox.x + bbox.width &&\n                y >= bbox.y &&\n                y <= bbox.y + bbox.height;\n    }\n    function isBBoxIntersect(bbox1, bbox2) {\n        bbox1 = box(bbox1);\n        bbox2 = box(bbox2);\n        return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\n                || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\n                || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n    }\n    function base3(t, p1, p2, p3, p4) {\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n        return t * t2 - 3 * p1 + 3 * p2;\n    }\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n        if (z == null) {\n            z = 1;\n        }\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\n        var z2 = z / 2,\n            n = 12,\n            Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n            sum = 0;\n        for (var i = 0; i < n; i++) {\n            var ct = z2 * Tvalues[i] + z2,\n                xbase = base3(ct, x1, x2, x3, x4),\n                ybase = base3(ct, y1, y2, y3, y4),\n                comb = xbase * xbase + ybase * ybase;\n            sum += Cvalues[i] * math.sqrt(comb);\n        }\n        return z2 * sum;\n    }\n    function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n            return;\n        }\n        var t = 1,\n            step = t / 2,\n            t2 = t - step,\n            l,\n            e = .01;\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        while (abs(l - ll) > e) {\n            step /= 2;\n            t2 += (l < ll ? 1 : -1) * step;\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        }\n        return t2;\n    }\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (\n            mmax(x1, x2) < mmin(x3, x4) ||\n            mmin(x1, x2) > mmax(x3, x4) ||\n            mmax(y1, y2) < mmin(y3, y4) ||\n            mmin(y1, y2) > mmax(y3, y4)\n        ) {\n            return;\n        }\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n        if (!denominator) {\n            return;\n        }\n        var px = nx / denominator,\n            py = ny / denominator,\n            px2 = +px.toFixed(2),\n            py2 = +py.toFixed(2);\n        if (\n            px2 < +mmin(x1, x2).toFixed(2) ||\n            px2 > +mmax(x1, x2).toFixed(2) ||\n            px2 < +mmin(x3, x4).toFixed(2) ||\n            px2 > +mmax(x3, x4).toFixed(2) ||\n            py2 < +mmin(y1, y2).toFixed(2) ||\n            py2 > +mmax(y1, y2).toFixed(2) ||\n            py2 < +mmin(y3, y4).toFixed(2) ||\n            py2 > +mmax(y3, y4).toFixed(2)\n        ) {\n            return;\n        }\n        return {x: px, y: py};\n    }\n    function inter(bez1, bez2) {\n        return interHelper(bez1, bez2);\n    }\n    function interCount(bez1, bez2) {\n        return interHelper(bez1, bez2, 1);\n    }\n    function interHelper(bez1, bez2, justCount) {\n        var bbox1 = bezierBBox(bez1),\n            bbox2 = bezierBBox(bez2);\n        if (!isBBoxIntersect(bbox1, bbox2)) {\n            return justCount ? 0 : [];\n        }\n        var l1 = bezlen.apply(0, bez1),\n            l2 = bezlen.apply(0, bez2),\n            n1 = ~~(l1 / 8),\n            n2 = ~~(l2 / 8),\n            dots1 = [],\n            dots2 = [],\n            xy = {},\n            res = justCount ? 0 : [];\n        for (var i = 0; i < n1 + 1; i++) {\n            var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n            dots1.push({x: p.x, y: p.y, t: i / n1});\n        }\n        for (i = 0; i < n2 + 1; i++) {\n            p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n            dots2.push({x: p.x, y: p.y, t: i / n2});\n        }\n        for (i = 0; i < n1; i++) {\n            for (var j = 0; j < n2; j++) {\n                var di = dots1[i],\n                    di1 = dots1[i + 1],\n                    dj = dots2[j],\n                    dj1 = dots2[j + 1],\n                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n                if (is) {\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n                        continue;\n                    }\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n                    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n                        if (justCount) {\n                            res++;\n                        } else {\n                            res.push({\n                                x: is.x,\n                                y: is.y,\n                                t1: t1,\n                                t2: t2\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function pathIntersection(path1, path2) {\n        return interPathHelper(path1, path2);\n    }\n    function pathIntersectionNumber(path1, path2) {\n        return interPathHelper(path1, path2, 1);\n    }\n    function interPathHelper(path1, path2, justCount) {\n        path1 = path2curve(path1);\n        path2 = path2curve(path2);\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n            res = justCount ? 0 : [];\n        for (var i = 0, ii = path1.length; i < ii; i++) {\n            var pi = path1[i];\n            if (pi[0] == \"M\") {\n                x1 = x1m = pi[1];\n                y1 = y1m = pi[2];\n            } else {\n                if (pi[0] == \"C\") {\n                    bez1 = [x1, y1].concat(pi.slice(1));\n                    x1 = bez1[6];\n                    y1 = bez1[7];\n                } else {\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n                    x1 = x1m;\n                    y1 = y1m;\n                }\n                for (var j = 0, jj = path2.length; j < jj; j++) {\n                    var pj = path2[j];\n                    if (pj[0] == \"M\") {\n                        x2 = x2m = pj[1];\n                        y2 = y2m = pj[2];\n                    } else {\n                        if (pj[0] == \"C\") {\n                            bez2 = [x2, y2].concat(pj.slice(1));\n                            x2 = bez2[6];\n                            y2 = bez2[7];\n                        } else {\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                            x2 = x2m;\n                            y2 = y2m;\n                        }\n                        var intr = interHelper(bez1, bez2, justCount);\n                        if (justCount) {\n                            res += intr;\n                        } else {\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\n                                intr[k].segment1 = i;\n                                intr[k].segment2 = j;\n                                intr[k].bez1 = bez1;\n                                intr[k].bez2 = bez2;\n                            }\n                            res = res.concat(intr);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function isPointInsidePath(path, x, y) {\n        var bbox = pathBBox(path);\n        return isPointInsideBBox(bbox, x, y) &&\n               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n    }\n    function pathBBox(path) {\n        var pth = paths(path);\n        if (pth.bbox) {\n            return clone(pth.bbox);\n        }\n        if (!path) {\n            return box();\n        }\n        path = path2curve(path);\n        var x = 0,\n            y = 0,\n            X = [],\n            Y = [],\n            p;\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            p = path[i];\n            if (p[0] == \"M\") {\n                x = p[1];\n                y = p[2];\n                X.push(x);\n                Y.push(y);\n            } else {\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                X = X.concat(dim.min.x, dim.max.x);\n                Y = Y.concat(dim.min.y, dim.max.y);\n                x = p[5];\n                y = p[6];\n            }\n        }\n        var xmin = mmin.apply(0, X),\n            ymin = mmin.apply(0, Y),\n            xmax = mmax.apply(0, X),\n            ymax = mmax.apply(0, Y),\n            bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n        pth.bbox = clone(bb);\n        return bb;\n    }\n    function rectPath(x, y, w, h, r) {\n        if (r) {\n            return [\n                [\"M\", +x + +r, y],\n                [\"l\", w - r * 2, 0],\n                [\"a\", r, r, 0, 0, 1, r, r],\n                [\"l\", 0, h - r * 2],\n                [\"a\", r, r, 0, 0, 1, -r, r],\n                [\"l\", r * 2 - w, 0],\n                [\"a\", r, r, 0, 0, 1, -r, -r],\n                [\"l\", 0, r * 2 - h],\n                [\"a\", r, r, 0, 0, 1, r, -r],\n                [\"z\"]\n            ];\n        }\n        var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n        res.toString = toString;\n        return res;\n    }\n    function ellipsePath(x, y, rx, ry, a) {\n        if (a == null && ry == null) {\n            ry = rx;\n        }\n        x = +x;\n        y = +y;\n        rx = +rx;\n        ry = +ry;\n        if (a != null) {\n            var rad = Math.PI / 180,\n                x1 = x + rx * Math.cos(-ry * rad),\n                x2 = x + rx * Math.cos(-a * rad),\n                y1 = y + rx * Math.sin(-ry * rad),\n                y2 = y + rx * Math.sin(-a * rad),\n                res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n        } else {\n            res = [\n                [\"M\", x, y],\n                [\"m\", 0, -ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry],\n                [\"z\"]\n            ];\n        }\n        res.toString = toString;\n        return res;\n    }\n    var unit2px = Snap._unit2px,\n        getPath = {\n        path: function (el) {\n            return el.attr(\"path\");\n        },\n        circle: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx, attr.cy, attr.r);\n        },\n        ellipse: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n        },\n        rect: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n        },\n        image: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n        },\n        line: function (el) {\n            return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n        },\n        polyline: function (el) {\n            return \"M\" + el.attr(\"points\");\n        },\n        polygon: function (el) {\n            return \"M\" + el.attr(\"points\") + \"z\";\n        },\n        deflt: function (el) {\n            var bbox = el.node.getBBox();\n            return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n        }\n    };\n    function pathToRelative(pathArray) {\n        var pth = paths(pathArray),\n            lowerCase = String.prototype.toLowerCase;\n        if (pth.rel) {\n            return pathClone(pth.rel);\n        }\n        if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0;\n        if (pathArray[0][0] == \"M\") {\n            x = pathArray[0][1];\n            y = pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res.push([\"M\", x, y]);\n        }\n        for (var i = start, ii = pathArray.length; i < ii; i++) {\n            var r = res[i] = [],\n                pa = pathArray[i];\n            if (pa[0] != lowerCase.call(pa[0])) {\n                r[0] = lowerCase.call(pa[0]);\n                switch (r[0]) {\n                    case \"a\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +(pa[6] - x).toFixed(3);\n                        r[7] = +(pa[7] - y).toFixed(3);\n                        break;\n                    case \"v\":\n                        r[1] = +(pa[1] - y).toFixed(3);\n                        break;\n                    case \"m\":\n                        mx = pa[1];\n                        my = pa[2];\n                    default:\n                        for (var j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +(pa[j] - (j % 2 ? x : y)).toFixed(3);\n                        }\n                }\n            } else {\n                r = res[i] = [];\n                if (pa[0] == \"m\") {\n                    mx = pa[1] + x;\n                    my = pa[2] + y;\n                }\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    res[i][k] = pa[k];\n                }\n            }\n            var len = res[i].length;\n            switch (res[i][0]) {\n                case \"z\":\n                    x = mx;\n                    y = my;\n                    break;\n                case \"h\":\n                    x += +res[i][len - 1];\n                    break;\n                case \"v\":\n                    y += +res[i][len - 1];\n                    break;\n                default:\n                    x += +res[i][len - 2];\n                    y += +res[i][len - 1];\n            }\n        }\n        res.toString = toString;\n        pth.rel = pathClone(res);\n        return res;\n    }\n    function pathToAbsolute(pathArray) {\n        var pth = paths(pathArray);\n        if (pth.abs) {\n            return pathClone(pth.abs);\n        }\n        if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) { // rough assumption\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        if (!pathArray || !pathArray.length) {\n            return [[\"M\", 0, 0]];\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0,\n            pa0;\n        if (pathArray[0][0] == \"M\") {\n            x = +pathArray[0][1];\n            y = +pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res[0] = [\"M\", x, y];\n        }\n        var crz = pathArray.length == 3 &&\n            pathArray[0][0] == \"M\" &&\n            pathArray[1][0].toUpperCase() == \"R\" &&\n            pathArray[2][0].toUpperCase() == \"Z\";\n        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n            res.push(r = []);\n            pa = pathArray[i];\n            pa0 = pa[0];\n            if (pa0 != pa0.toUpperCase()) {\n                r[0] = pa0.toUpperCase();\n                switch (r[0]) {\n                    case \"A\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +pa[6] + x;\n                        r[7] = +pa[7] + y;\n                        break;\n                    case \"V\":\n                        r[1] = +pa[1] + y;\n                        break;\n                    case \"H\":\n                        r[1] = +pa[1] + x;\n                        break;\n                    case \"R\":\n                        var dots = [x, y].concat(pa.slice(1));\n                        for (var j = 2, jj = dots.length; j < jj; j++) {\n                            dots[j] = +dots[j] + x;\n                            dots[++j] = +dots[j] + y;\n                        }\n                        res.pop();\n                        res = res.concat(catmullRom2bezier(dots, crz));\n                        break;\n                    case \"O\":\n                        res.pop();\n                        dots = ellipsePath(x, y, pa[1], pa[2]);\n                        dots.push(dots[0]);\n                        res = res.concat(dots);\n                        break;\n                    case \"U\":\n                        res.pop();\n                        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                        r = [\"U\"].concat(res[res.length - 1].slice(-2));\n                        break;\n                    case \"M\":\n                        mx = +pa[1] + x;\n                        my = +pa[2] + y;\n                    default:\n                        for (j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +pa[j] + (j % 2 ? x : y);\n                        }\n                }\n            } else if (pa0 == \"R\") {\n                dots = [x, y].concat(pa.slice(1));\n                res.pop();\n                res = res.concat(catmullRom2bezier(dots, crz));\n                r = [\"R\"].concat(pa.slice(-2));\n            } else if (pa0 == \"O\") {\n                res.pop();\n                dots = ellipsePath(x, y, pa[1], pa[2]);\n                dots.push(dots[0]);\n                res = res.concat(dots);\n            } else if (pa0 == \"U\") {\n                res.pop();\n                res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                r = [\"U\"].concat(res[res.length - 1].slice(-2));\n            } else {\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    r[k] = pa[k];\n                }\n            }\n            pa0 = pa0.toUpperCase();\n            if (pa0 != \"O\") {\n                switch (r[0]) {\n                    case \"Z\":\n                        x = +mx;\n                        y = +my;\n                        break;\n                    case \"H\":\n                        x = r[1];\n                        break;\n                    case \"V\":\n                        y = r[1];\n                        break;\n                    case \"M\":\n                        mx = r[r.length - 2];\n                        my = r[r.length - 1];\n                    default:\n                        x = r[r.length - 2];\n                        y = r[r.length - 1];\n                }\n            }\n        }\n        res.toString = toString;\n        pth.abs = pathClone(res);\n        return res;\n    }\n    function l2c(x1, y1, x2, y2) {\n        return [x1, y1, x2, y2, x2, y2];\n    }\n    function q2c(x1, y1, ax, ay, x2, y2) {\n        var _13 = 1 / 3,\n            _23 = 2 / 3;\n        return [\n                _13 * x1 + _23 * ax,\n                _13 * y1 + _23 * ay,\n                _13 * x2 + _23 * ax,\n                _13 * y2 + _23 * ay,\n                x2,\n                y2\n            ];\n    }\n    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n        // for more information of where this math came from visit:\n        // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n        var _120 = PI * 120 / 180,\n            rad = PI / 180 * (+angle || 0),\n            res = [],\n            xy,\n            rotate = Snap._.cacher(function (x, y, rad) {\n                var X = x * math.cos(rad) - y * math.sin(rad),\n                    Y = x * math.sin(rad) + y * math.cos(rad);\n                return {x: X, y: Y};\n            });\n        if (!rx || !ry) {\n            return [x1, y1, x2, y2, x2, y2];\n        }\n        if (!recursive) {\n            xy = rotate(x1, y1, -rad);\n            x1 = xy.x;\n            y1 = xy.y;\n            xy = rotate(x2, y2, -rad);\n            x2 = xy.x;\n            y2 = xy.y;\n            var cos = math.cos(PI / 180 * angle),\n                sin = math.sin(PI / 180 * angle),\n                x = (x1 - x2) / 2,\n                y = (y1 - y2) / 2;\n            var h = x * x / (rx * rx) + y * y / (ry * ry);\n            if (h > 1) {\n                h = math.sqrt(h);\n                rx = h * rx;\n                ry = h * ry;\n            }\n            var rx2 = rx * rx,\n                ry2 = ry * ry,\n                k = (large_arc_flag == sweep_flag ? -1 : 1) *\n                    math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n                cx = k * rx * y / ry + (x1 + x2) / 2,\n                cy = k * -ry * x / rx + (y1 + y2) / 2,\n                f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n                f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n            f1 = x1 < cx ? PI - f1 : f1;\n            f2 = x2 < cx ? PI - f2 : f2;\n            f1 < 0 && (f1 = PI * 2 + f1);\n            f2 < 0 && (f2 = PI * 2 + f2);\n            if (sweep_flag && f1 > f2) {\n                f1 = f1 - PI * 2;\n            }\n            if (!sweep_flag && f2 > f1) {\n                f2 = f2 - PI * 2;\n            }\n        } else {\n            f1 = recursive[0];\n            f2 = recursive[1];\n            cx = recursive[2];\n            cy = recursive[3];\n        }\n        var df = f2 - f1;\n        if (abs(df) > _120) {\n            var f2old = f2,\n                x2old = x2,\n                y2old = y2;\n            f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n            x2 = cx + rx * math.cos(f2);\n            y2 = cy + ry * math.sin(f2);\n            res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n        }\n        df = f2 - f1;\n        var c1 = math.cos(f1),\n            s1 = math.sin(f1),\n            c2 = math.cos(f2),\n            s2 = math.sin(f2),\n            t = math.tan(df / 4),\n            hx = 4 / 3 * rx * t,\n            hy = 4 / 3 * ry * t,\n            m1 = [x1, y1],\n            m2 = [x1 + hx * s1, y1 - hy * c1],\n            m3 = [x2 + hx * s2, y2 - hy * c2],\n            m4 = [x2, y2];\n        m2[0] = 2 * m1[0] - m2[0];\n        m2[1] = 2 * m1[1] - m2[1];\n        if (recursive) {\n            return [m2, m3, m4].concat(res);\n        } else {\n            res = [m2, m3, m4].concat(res).join().split(\",\");\n            var newres = [];\n            for (var i = 0, ii = res.length; i < ii; i++) {\n                newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n            }\n            return newres;\n        }\n    }\n    function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t;\n        return {\n            x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n            y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n        };\n    }\n\n    // Returns bounding box of cubic bezier curve.\n    // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // Original version: NISHIO Hirokazu\n    // Modifications: https://github.com/timo22345\n    function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n        var tvalues = [],\n            bounds = [[], []],\n            a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n        for (var i = 0; i < 2; ++i) {\n            if (i == 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n            } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n            }\n            if (abs(a) < 1e-12) {\n                if (abs(b) < 1e-12) {\n                    continue;\n                }\n                t = -c / b;\n                if (0 < t && t < 1) {\n                    tvalues.push(t);\n                }\n                continue;\n            }\n            b2ac = b * b - 4 * c * a;\n            sqrtb2ac = math.sqrt(b2ac);\n            if (b2ac < 0) {\n                continue;\n            }\n            t1 = (-b + sqrtb2ac) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n            }\n            t2 = (-b - sqrtb2ac) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n            }\n        }\n\n        var x, y, j = tvalues.length,\n            jlen = j,\n            mt;\n        while (j--) {\n            t = tvalues[j];\n            mt = 1 - t;\n            bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n            bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n        }\n\n        bounds[0][jlen] = x0;\n        bounds[1][jlen] = y0;\n        bounds[0][jlen + 1] = x3;\n        bounds[1][jlen + 1] = y3;\n        bounds[0].length = bounds[1].length = jlen + 2;\n\n\n        return {\n          min: {x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1])},\n          max: {x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1])}\n        };\n    }\n\n    function path2curve(path, path2) {\n        var pth = !path2 && paths(path);\n        if (!path2 && pth.curve) {\n            return pathClone(pth.curve);\n        }\n        var p = pathToAbsolute(path),\n            p2 = path2 && pathToAbsolute(path2),\n            attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            processPath = function (path, d, pcom) {\n                var nx, ny;\n                if (!path) {\n                    return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n                }\n                !(path[0] in {T: 1, Q: 1}) && (d.qx = d.qy = null);\n                switch (path[0]) {\n                    case \"M\":\n                        d.X = path[1];\n                        d.Y = path[2];\n                        break;\n                    case \"A\":\n                        path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n                        break;\n                    case \"S\":\n                        if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n                            nx = d.x * 2 - d.bx;          // And reflect the previous\n                            ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n                        }\n                        else {                            // or some else or nothing\n                            nx = d.x;\n                            ny = d.y;\n                        }\n                        path = [\"C\", nx, ny].concat(path.slice(1));\n                        break;\n                    case \"T\":\n                        if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n                            d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n                            d.qy = d.y * 2 - d.qy;        // to case \"S\".\n                        }\n                        else {                            // or something else or nothing\n                            d.qx = d.x;\n                            d.qy = d.y;\n                        }\n                        path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                        break;\n                    case \"Q\":\n                        d.qx = path[1];\n                        d.qy = path[2];\n                        path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                        break;\n                    case \"L\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n                        break;\n                    case \"H\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n                        break;\n                    case \"V\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n                        break;\n                    case \"Z\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n                        break;\n                }\n                return path;\n            },\n            fixArc = function (pp, i) {\n                if (pp[i].length > 7) {\n                    pp[i].shift();\n                    var pi = pp[i];\n                    while (pi.length) {\n                        pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n                        p2 && (pcoms2[i] = \"A\"); // the same as above\n                        pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n                    }\n                    pp.splice(i, 1);\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            fixM = function (path1, path2, a1, a2, i) {\n                if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n                    path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n                    a1.bx = 0;\n                    a1.by = 0;\n                    a1.x = path1[i][1];\n                    a1.y = path1[i][2];\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            pcoms1 = [], // path commands of original path p\n            pcoms2 = [], // path commands of original path p2\n            pfirst = \"\", // temporary holder for original path command\n            pcom = \"\"; // holder for previous path command of original path\n        for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n            p[i] && (pfirst = p[i][0]); // save current path command\n\n            if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n            {\n                pcoms1[i] = pfirst; // Save current path command\n                i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n            }\n            p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n            if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n            // which may produce multiple C:s\n            // so we have to make sure that C is also C in original path\n\n            fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n            if (p2) { // the same procedures is done to p2\n                p2[i] && (pfirst = p2[i][0]);\n                if (pfirst != \"C\") {\n                    pcoms2[i] = pfirst;\n                    i && (pcom = pcoms2[i - 1]);\n                }\n                p2[i] = processPath(p2[i], attrs2, pcom);\n\n                if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n                    pcoms2[i] = \"C\";\n                }\n\n                fixArc(p2, i);\n            }\n            fixM(p, p2, attrs, attrs2, i);\n            fixM(p2, p, attrs2, attrs, i);\n            var seg = p[i],\n                seg2 = p2 && p2[i],\n                seglen = seg.length,\n                seg2len = p2 && seg2.length;\n            attrs.x = seg[seglen - 2];\n            attrs.y = seg[seglen - 1];\n            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n            attrs2.x = p2 && seg2[seg2len - 2];\n            attrs2.y = p2 && seg2[seg2len - 1];\n        }\n        if (!p2) {\n            pth.curve = pathClone(p);\n        }\n        return p2 ? [p, p2] : p;\n    }\n    function mapPath(path, matrix) {\n        if (!matrix) {\n            return path;\n        }\n        var x, y, i, j, ii, jj, pathi;\n        path = path2curve(path);\n        for (i = 0, ii = path.length; i < ii; i++) {\n            pathi = path[i];\n            for (j = 1, jj = pathi.length; j < jj; j += 2) {\n                x = matrix.x(pathi[j], pathi[j + 1]);\n                y = matrix.y(pathi[j], pathi[j + 1]);\n                pathi[j] = x;\n                pathi[j + 1] = y;\n            }\n        }\n        return path;\n    }\n\n    // http://schepers.cc/getting-to-the-point\n    function catmullRom2bezier(crp, z) {\n        var d = [];\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n            var p = [\n                        {x: +crp[i - 2], y: +crp[i - 1]},\n                        {x: +crp[i],     y: +crp[i + 1]},\n                        {x: +crp[i + 2], y: +crp[i + 3]},\n                        {x: +crp[i + 4], y: +crp[i + 5]}\n                    ];\n            if (z) {\n                if (!i) {\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n                } else if (iLen - 4 == i) {\n                    p[3] = {x: +crp[0], y: +crp[1]};\n                } else if (iLen - 2 == i) {\n                    p[2] = {x: +crp[0], y: +crp[1]};\n                    p[3] = {x: +crp[2], y: +crp[3]};\n                }\n            } else {\n                if (iLen - 4 == i) {\n                    p[3] = p[2];\n                } else if (!i) {\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n                }\n            }\n            d.push([\"C\",\n                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n                  p[2].x,\n                  p[2].y\n            ]);\n        }\n\n        return d;\n    }\n\n    // export\n    Snap.path = paths;\n\n    /*\\\n     * Snap.path.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the given path in pixels\n     **\n     - path (string) SVG path string\n     **\n     = (number) length\n    \\*/\n    Snap.path.getTotalLength = getTotalLength;\n    /*\\\n     * Snap.path.getPointAtLength\n     [ method ]\n     **\n     * Returns the coordinates of the point located at the given length along the given path\n     **\n     - path (string) SVG path string\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    Snap.path.getPointAtLength = getPointAtLength;\n    /*\\\n     * Snap.path.getSubpath\n     [ method ]\n     **\n     * Returns the subpath of a given path between given start and end lengths\n     **\n     - path (string) SVG path string\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    Snap.path.getSubpath = function (path, from, to) {\n        if (this.getTotalLength(path) - to < 1e-6) {\n            return getSubpathsAtLength(path, from).end;\n        }\n        var a = getSubpathsAtLength(path, to, 1);\n        return from ? getSubpathsAtLength(a, from).end : a;\n    };\n    /*\\\n     * Element.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the path in pixels (only works for `path` elements)\n     = (number) length\n    \\*/\n    elproto.getTotalLength = function () {\n        if (this.node.getTotalLength) {\n            return this.node.getTotalLength();\n        }\n    };\n    // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n    /*\\\n     * Element.getPointAtLength\n     [ method ]\n     **\n     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n     **\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    elproto.getPointAtLength = function (length) {\n        return getPointAtLength(this.attr(\"d\"), length);\n    };\n    // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n    /*\\\n     * Element.getSubpath\n     [ method ]\n     **\n     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n     **\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    elproto.getSubpath = function (from, to) {\n        return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n    };\n    Snap._.box = box;\n    /*\\\n     * Snap.path.findDotsAtSegment\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds dot coordinates on the given cubic beziér curve at the given t\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     - t (number) position on the curve (0..1)\n     = (object) point information in format:\n     o {\n     o     x: (number) x coordinate of the point,\n     o     y: (number) y coordinate of the point,\n     o     m: {\n     o         x: (number) x coordinate of the left anchor,\n     o         y: (number) y coordinate of the left anchor\n     o     },\n     o     n: {\n     o         x: (number) x coordinate of the right anchor,\n     o         y: (number) y coordinate of the right anchor\n     o     },\n     o     start: {\n     o         x: (number) x coordinate of the start of the curve,\n     o         y: (number) y coordinate of the start of the curve\n     o     },\n     o     end: {\n     o         x: (number) x coordinate of the end of the curve,\n     o         y: (number) y coordinate of the end of the curve\n     o     },\n     o     alpha: (number) angle of the curve derivative at the point\n     o }\n    \\*/\n    Snap.path.findDotsAtSegment = findDotsAtSegment;\n    /*\\\n     * Snap.path.bezierBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given cubic beziér curve\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     * or\n     - bez (array) array of six points for beziér curve\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.bezierBBox = bezierBBox;\n    /*\\\n     * Snap.path.isPointInsideBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside bounding box\n     - bbox (string) bounding box\n     - x (string) x coordinate of the point\n     - y (string) y coordinate of the point\n     = (boolean) `true` if point is inside\n    \\*/\n    Snap.path.isPointInsideBBox = isPointInsideBBox;\n    Snap.closest = function (x, y, X, Y) {\n        var r = 100,\n            b = box(x - r / 2, y - r / 2, r, r),\n            inside = [],\n            getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n                return {\n                    x: X[i].x,\n                    y: X[i].y\n                };\n            } : function (i) {\n                return {\n                    x: X[i],\n                    y: Y[i]\n                };\n            },\n            found = 0;\n        while (r <= 1e6 && !found) {\n            for (var i = 0, ii = X.length; i < ii; i++) {\n                var xy = getter(i);\n                if (isPointInsideBBox(b, xy.x, xy.y)) {\n                    found++;\n                    inside.push(xy);\n                    break;\n                }\n            }\n            if (!found) {\n                r *= 2;\n                b = box(x - r / 2, y - r / 2, r, r)\n            }\n        }\n        if (r == 1e6) {\n            return;\n        }\n        var len = Infinity,\n            res;\n        for (i = 0, ii = inside.length; i < ii; i++) {\n            var l = Snap.len(x, y, inside[i].x, inside[i].y);\n            if (len > l) {\n                len = l;\n                inside[i].len = l;\n                res = inside[i];\n            }\n        }\n        return res;\n    };\n    /*\\\n     * Snap.path.isBBoxIntersect\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if two bounding boxes intersect\n     - bbox1 (string) first bounding box\n     - bbox2 (string) second bounding box\n     = (boolean) `true` if bounding boxes intersect\n    \\*/\n    Snap.path.isBBoxIntersect = isBBoxIntersect;\n    /*\\\n     * Snap.path.intersection\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds intersections of two paths\n     - path1 (string) path string\n     - path2 (string) path string\n     = (array) dots of intersection\n     o [\n     o     {\n     o         x: (number) x coordinate of the point,\n     o         y: (number) y coordinate of the point,\n     o         t1: (number) t value for segment of path1,\n     o         t2: (number) t value for segment of path2,\n     o         segment1: (number) order number for segment of path1,\n     o         segment2: (number) order number for segment of path2,\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n     o     }\n     o ]\n    \\*/\n    Snap.path.intersection = pathIntersection;\n    Snap.path.intersectionNumber = pathIntersectionNumber;\n    /*\\\n     * Snap.path.isPointInside\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside a given closed path.\n     *\n     * Note: fill mode doesn’t affect the result of this method.\n     - path (string) path string\n     - x (number) x of the point\n     - y (number) y of the point\n     = (boolean) `true` if point is inside the path\n    \\*/\n    Snap.path.isPointInside = isPointInsidePath;\n    /*\\\n     * Snap.path.getBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given path\n     - path (string) path string\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.getBBox = pathBBox;\n    Snap.path.get = getPath;\n    /*\\\n     * Snap.path.toRelative\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into relative values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toRelative = pathToRelative;\n    /*\\\n     * Snap.path.toAbsolute\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into absolute values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toAbsolute = pathToAbsolute;\n    /*\\\n     * Snap.path.toCubic\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to a new path where all segments are cubic beziér curves\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments\n    \\*/\n    Snap.path.toCubic = path2curve;\n    /*\\\n     * Snap.path.map\n     [ method ]\n     **\n     * Transform the path string with the given matrix\n     - path (string) path string\n     - matrix (object) see @Matrix\n     = (string) transformed path string\n    \\*/\n    Snap.path.map = mapPath;\n    Snap.path.toString = toString;\n    Snap.path.clone = pathClone;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var mmax = Math.max,\n        mmin = Math.min;\n\n    // Set\n    var Set = function (items) {\n        this.items = [];\n\tthis.bindings = {};\n        this.length = 0;\n        this.type = \"set\";\n        if (items) {\n            for (var i = 0, ii = items.length; i < ii; i++) {\n                if (items[i]) {\n                    this[this.items.length] = this.items[this.items.length] = items[i];\n                    this.length++;\n                }\n            }\n        }\n    },\n    setproto = Set.prototype;\n    /*\\\n     * Set.push\n     [ method ]\n     **\n     * Adds each argument to the current set\n     = (object) original element\n    \\*/\n    setproto.push = function () {\n        var item,\n            len;\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\n            item = arguments[i];\n            if (item) {\n                len = this.items.length;\n                this[len] = this.items[len] = item;\n                this.length++;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.pop\n     [ method ]\n     **\n     * Removes last element and returns it\n     = (object) element\n    \\*/\n    setproto.pop = function () {\n        this.length && delete this[this.length--];\n        return this.items.pop();\n    };\n    /*\\\n     * Set.forEach\n     [ method ]\n     **\n     * Executes given function for each element in the set\n     *\n     * If the function returns `false`, the loop stops running.\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Set object\n    \\*/\n    setproto.forEach = function (callback, thisArg) {\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            if (callback.call(thisArg, this.items[i], i) === false) {\n                return this;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.animate\n     [ method ]\n     **\n     * Animates each element in set in sync.\n     *\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     * or\n     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n     > Usage\n     | // animate all elements in set to radius 10\n     | set.animate({r: 10}, 500, mina.easein);\n     | // or\n     | // animate first element to radius 10, but second to radius 20 and in different time\n     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n     = (Element) the current element\n    \\*/\n    setproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Snap._.Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = easing.dur;\n            attrs = attrs.attr;\n        }\n        var args = arguments;\n        if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n            var each = true;\n        }\n        var begin,\n            handler = function () {\n                if (begin) {\n                    this.b = begin;\n                } else {\n                    begin = this.b;\n                }\n            },\n            cb = 0,\n            set = this,\n            callbacker = callback && function () {\n                if (++cb == set.length) {\n                    callback.call(this);\n                }\n            };\n        return this.forEach(function (el, i) {\n            eve.once(\"snap.animcreated.\" + el.id, handler);\n            if (each) {\n                args[i] && el.animate.apply(el, args[i]);\n            } else {\n                el.animate(attrs, ms, easing, callbacker);\n            }\n        });\n    };\n    /*\\\n     * Set.remove\n     [ method ]\n     **\n     * Removes all children of the set.\n     *\n     = (object) Set object\n    \\*/\n    setproto.remove = function () {\n        while (this.length) {\n            this.pop().remove();\n        }\n        return this;\n    };\n    /*\\\n     * Set.bind\n     [ method ]\n     **\n     * Specifies how to handle a specific attribute when applied\n     * to a set.\n     *\n     **\n     - attr (string) attribute name\n     - callback (function) function to run\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     - eattr (string) attribute on the element to bind the attribute to\n     = (object) Set object\n    \\*/\n    setproto.bind = function (attr, a, b) {\n        var data = {};\n        if (typeof a == \"function\") {\n            this.bindings[attr] = a;\n        } else {\n            var aname = b || attr;\n            this.bindings[attr] = function (v) {\n                data[aname] = v;\n                a.attr(data);\n            };\n        }\n        return this;\n    };\n    /*\\\n     * Set.attr\n     [ method ]\n     **\n     * Equivalent of @Element.attr.\n     = (object) Set object\n    \\*/\n    setproto.attr = function (value) {\n        var unbound = {};\n        for (var k in value) {\n            if (this.bindings[k]) {\n                this.bindings[k](value[k]);\n            } else {\n                unbound[k] = value[k];\n            }\n        }\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            this.items[i].attr(unbound);\n        }\n        return this;\n    };\n    /*\\\n     * Set.clear\n     [ method ]\n     **\n     * Removes all elements from the set\n    \\*/\n    setproto.clear = function () {\n        while (this.length) {\n            this.pop();\n        }\n    };\n    /*\\\n     * Set.splice\n     [ method ]\n     **\n     * Removes range of elements from the set\n     **\n     - index (number) position of the deletion\n     - count (number) number of element to remove\n     - insertion… (object) #optional elements to insert\n     = (object) set elements that were deleted\n    \\*/\n    setproto.splice = function (index, count, insertion) {\n        index = index < 0 ? mmax(this.length + index, 0) : index;\n        count = mmax(0, mmin(this.length - index, count));\n        var tail = [],\n            todel = [],\n            args = [],\n            i;\n        for (i = 2; i < arguments.length; i++) {\n            args.push(arguments[i]);\n        }\n        for (i = 0; i < count; i++) {\n            todel.push(this[index + i]);\n        }\n        for (; i < this.length - index; i++) {\n            tail.push(this[index + i]);\n        }\n        var arglen = args.length;\n        for (i = 0; i < arglen + tail.length; i++) {\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n        }\n        i = this.items.length = this.length -= count - arglen;\n        while (this[i]) {\n            delete this[i++];\n        }\n        return new Set(todel);\n    };\n    /*\\\n     * Set.exclude\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     - element (object) element to remove\n     = (boolean) `true` if object was found and removed from the set\n    \\*/\n    setproto.exclude = function (el) {\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n            this.splice(i, 1);\n            return true;\n        }\n        return false;\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Inserts set elements after given element.\n     **\n     - element (object) set will be inserted after this element\n     = (object) Set object\n    \\*/\n    setproto.insertAfter = function (el) {\n        var i = this.items.length;\n        while (i--) {\n            this.items[i].insertAfter(el);\n        }\n        return this;\n    };\n    /*\\\n     * Set.getBBox\n     [ method ]\n     **\n     * Union of all bboxes of the set. See @Element.getBBox.\n     = (object) bounding box descriptor. See @Element.getBBox.\n    \\*/\n    setproto.getBBox = function () {\n        var x = [],\n            y = [],\n            x2 = [],\n            y2 = [];\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n            var box = this.items[i].getBBox();\n            x.push(box.x);\n            y.push(box.y);\n            x2.push(box.x + box.width);\n            y2.push(box.y + box.height);\n        }\n        x = mmin.apply(0, x);\n        y = mmin.apply(0, y);\n        x2 = mmax.apply(0, x2);\n        y2 = mmax.apply(0, y2);\n        return {\n            x: x,\n            y: y,\n            x2: x2,\n            y2: y2,\n            width: x2 - x,\n            height: y2 - y,\n            cx: x + (x2 - x) / 2,\n            cy: y + (y2 - y) / 2\n        };\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Creates a clone of the set.\n     **\n     = (object) New Set object\n    \\*/\n    setproto.clone = function (s) {\n        s = new Set;\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            s.push(this.items[i].clone());\n        }\n        return s;\n    };\n    setproto.toString = function () {\n        return \"Snap\\u2018s set\";\n    };\n    setproto.type = \"set\";\n    // export\n    /*\\\n     * Snap.Set\n     [ property ]\n     **\n     * Set constructor.\n    \\*/\n    Snap.Set = Set;\n    /*\\\n     * Snap.set\n     [ method ]\n     **\n     * Creates a set and fills it with list of arguments.\n     **\n     = (object) New Set object\n     | var r = paper.rect(0, 0, 10, 10),\n     |     s1 = Snap.set(), // empty set\n     |     s2 = Snap.set(r, paper.circle(100, 100, 20)); // prefilled set\n    \\*/\n    Snap.set = function () {\n        var set = new Set;\n        if (arguments.length) {\n            set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n        }\n        return set;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var names = {},\n        reUnit = /[%a-z]+$/i,\n        Str = String;\n    names.stroke = names.fill = \"colour\";\n    function getEmpty(item) {\n        var l = item[0];\n        switch (l.toLowerCase()) {\n            case \"t\": return [l, 0, 0];\n            case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n            case \"r\": if (item.length == 4) {\n                return [l, 0, item[2], item[3]];\n            } else {\n                return [l, 0];\n            }\n            case \"s\": if (item.length == 5) {\n                return [l, 1, 1, item[3], item[4]];\n            } else if (item.length == 3) {\n                return [l, 1, 1];\n            } else {\n                return [l, 1];\n            }\n        }\n    }\n    function equaliseTransform(t1, t2, getBBox) {\n        t1 = t1 || new Snap.Matrix;\n        t2 = t2 || new Snap.Matrix;\n        t1 = Snap.parseTransformString(t1.toTransformString()) || [];\n        t2 = Snap.parseTransformString(t2.toTransformString()) || [];\n        var maxlength = Math.max(t1.length, t2.length),\n            from = [],\n            to = [],\n            i = 0, j, jj,\n            tt1, tt2;\n        for (; i < maxlength; i++) {\n            tt1 = t1[i] || getEmpty(t2[i]);\n            tt2 = t2[i] || getEmpty(tt1);\n            if (tt1[0] != tt2[0] ||\n                tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3]) ||\n                tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4])\n                ) {\n                    t1 = Snap._.transform2matrix(t1, getBBox());\n                    t2 = Snap._.transform2matrix(t2, getBBox());\n                    from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n                    to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n                    break;\n            }\n            from[i] = [];\n            to[i] = [];\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n                j in tt1 && (from[i][j] = tt1[j]);\n                j in tt2 && (to[i][j] = tt2[j]);\n            }\n        }\n        return {\n            from: path2array(from),\n            to: path2array(to),\n            f: getPath(from)\n        };\n    }\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    function getViewBox(val) {\n        return val.join(\" \");\n    }\n    function getColour(clr) {\n        return Snap.rgb(clr[0], clr[1], clr[2], clr[3]);\n    }\n    function getPath(path) {\n        var k = 0, i, ii, j, jj, out, a, b = [];\n        for (i = 0, ii = path.length; i < ii; i++) {\n            out = \"[\";\n            a = ['\"' + path[i][0] + '\"'];\n            for (j = 1, jj = path[i].length; j < jj; j++) {\n                a[j] = \"val[\" + k++ + \"]\";\n            }\n            out += a + \"]\";\n            b[i] = out;\n        }\n        return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n    }\n    function path2array(path) {\n        var out = [];\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            for (var j = 1, jj = path[i].length; j < jj; j++) {\n                out.push(path[i][j]);\n            }\n        }\n        return out;\n    }\n    function isNumeric(obj) {\n        return isFinite(obj);\n    }\n    function arrayEqual(arr1, arr2) {\n        if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n            return false;\n        }\n        return arr1.toString() == arr2.toString();\n    }\n    Element.prototype.equal = function (name, b) {\n        return eve(\"snap.util.equal\", this, name, b).firstDefined();\n    };\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this;\n        if (names[name] == \"colour\") {\n            A = Snap.color(a);\n            B = Snap.color(b);\n            return {\n                from: [A.r, A.g, A.b, A.opacity],\n                to: [B.r, B.g, B.b, B.opacity],\n                f: getColour\n            };\n        }\n        if (name == \"viewBox\") {\n            A = this.attr(name).vb.split(\" \").map(Number);\n            B = b.split(\" \").map(Number);\n            return {\n                from: A,\n                to: B,\n                f: getViewBox\n            };\n        }\n        if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n            if (typeof b == \"string\") {\n                b = Str(b).replace(/\\.{3}|\\u2026/g, a);\n            }\n            a = this.matrix;\n            if (!Snap._.rgTransform.test(b)) {\n                b = Snap._.transform2matrix(Snap._.svgTransform2string(b), this.getBBox());\n            } else {\n                b = Snap._.transform2matrix(b, this.getBBox());\n            }\n            return equaliseTransform(a, b, function () {\n                return el.getBBox(1);\n            });\n        }\n        if (name == \"d\" || name == \"path\") {\n            A = Snap.path.toCubic(a, b);\n            return {\n                from: path2array(A[0]),\n                to: path2array(A[1]),\n                f: getPath(A[0])\n            };\n        }\n        if (name == \"points\") {\n            A = Str(a).split(Snap._.separator);\n            B = Str(b).split(Snap._.separator);\n            return {\n                from: A,\n                to: B,\n                f: function (val) { return val; }\n            };\n        }\n        if (isNumeric(a) && isNumeric(b)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getNumber\n            };\n        }\n        var aUnit = a.match(reUnit),\n            bUnit = Str(b).match(reUnit);\n        if (aUnit && arrayEqual(aUnit, bUnit)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getUnit(aUnit)\n            };\n        } else {\n            return {\n                from: this.asPX(name),\n                to: this.asPX(name, b),\n                f: getNumber\n            };\n        }\n    });\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n    has = \"hasOwnProperty\",\n    supportsTouch = \"createTouch\" in glob.doc,\n    events = [\n        \"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\",\n        \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\",\n        \"touchcancel\"\n    ],\n    touchMap = {\n        mousedown: \"touchstart\",\n        mousemove: \"touchmove\",\n        mouseup: \"touchend\"\n    },\n    getScroll = function (xy, el) {\n        var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n            doc = el && el.node ? el.node.ownerDocument : glob.doc;\n        return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n    },\n    preventDefault = function () {\n        this.returnValue = false;\n    },\n    preventTouch = function () {\n        return this.originalEvent.preventDefault();\n    },\n    stopPropagation = function () {\n        this.cancelBubble = true;\n    },\n    stopTouch = function () {\n        return this.originalEvent.stopPropagation();\n    },\n    addEvent = function (obj, type, fn, element) {\n        var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n            f = function (e) {\n                var scrollY = getScroll(\"y\", element),\n                    scrollX = getScroll(\"x\", element);\n                if (supportsTouch && touchMap[has](type)) {\n                    for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n                        if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n                            var olde = e;\n                            e = e.targetTouches[i];\n                            e.originalEvent = olde;\n                            e.preventDefault = preventTouch;\n                            e.stopPropagation = stopTouch;\n                            break;\n                        }\n                    }\n                }\n                var x = e.clientX + scrollX,\n                    y = e.clientY + scrollY;\n                return fn.call(element, e, x, y);\n            };\n\n        if (type !== realName) {\n            obj.addEventListener(type, f, false);\n        }\n\n        obj.addEventListener(realName, f, false);\n\n        return function () {\n            if (type !== realName) {\n                obj.removeEventListener(type, f, false);\n            }\n\n            obj.removeEventListener(realName, f, false);\n            return true;\n        };\n    },\n    drag = [],\n    dragMove = function (e) {\n        var x = e.clientX,\n            y = e.clientY,\n            scrollY = getScroll(\"y\"),\n            scrollX = getScroll(\"x\"),\n            dragi,\n            j = drag.length;\n        while (j--) {\n            dragi = drag[j];\n            if (supportsTouch) {\n                var i = e.touches && e.touches.length,\n                    touch;\n                while (i--) {\n                    touch = e.touches[i];\n                    if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n                        x = touch.clientX;\n                        y = touch.clientY;\n                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n                        break;\n                    }\n                }\n            } else {\n                e.preventDefault();\n            }\n            var node = dragi.el.node,\n                o,\n                next = node.nextSibling,\n                parent = node.parentNode,\n                display = node.style.display;\n            // glob.win.opera && parent.removeChild(node);\n            // node.style.display = \"none\";\n            // o = dragi.el.paper.getElementByPoint(x, y);\n            // node.style.display = display;\n            // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n            // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n            x += scrollX;\n            y += scrollY;\n            eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n        }\n    },\n    dragUp = function (e) {\n        Snap.unmousemove(dragMove).unmouseup(dragUp);\n        var i = drag.length,\n            dragi;\n        while (i--) {\n            dragi = drag[i];\n            dragi.el._drag = {};\n            eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n            eve.off(\"snap.drag.*.\" + dragi.el.id);\n        }\n        drag = [];\n    };\n    /*\\\n     * Element.click\n     [ method ]\n     **\n     * Adds a click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unclick\n     [ method ]\n     **\n     * Removes a click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.dblclick\n     [ method ]\n     **\n     * Adds a double click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.undblclick\n     [ method ]\n     **\n     * Removes a double click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousedown\n     [ method ]\n     **\n     * Adds a mousedown event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousedown\n     [ method ]\n     **\n     * Removes a mousedown event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousemove\n     [ method ]\n     **\n     * Adds a mousemove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousemove\n     [ method ]\n     **\n     * Removes a mousemove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseout\n     [ method ]\n     **\n     * Adds a mouseout event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseout\n     [ method ]\n     **\n     * Removes a mouseout event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseover\n     [ method ]\n     **\n     * Adds a mouseover event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseover\n     [ method ]\n     **\n     * Removes a mouseover event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseup\n     [ method ]\n     **\n     * Adds a mouseup event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseup\n     [ method ]\n     **\n     * Removes a mouseup event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchstart\n     [ method ]\n     **\n     * Adds a touchstart event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchstart\n     [ method ]\n     **\n     * Removes a touchstart event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchmove\n     [ method ]\n     **\n     * Adds a touchmove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchmove\n     [ method ]\n     **\n     * Removes a touchmove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchend\n     [ method ]\n     **\n     * Adds a touchend event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchend\n     [ method ]\n     **\n     * Removes a touchend event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchcancel\n     [ method ]\n     **\n     * Adds a touchcancel event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchcancel\n     [ method ]\n     **\n     * Removes a touchcancel event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    for (var i = events.length; i--;) {\n        (function (eventName) {\n            Snap[eventName] = elproto[eventName] = function (fn, scope) {\n                if (Snap.is(fn, \"function\")) {\n                    this.events = this.events || [];\n                    this.events.push({\n                        name: eventName,\n                        f: fn,\n                        unbind: addEvent(this.node || document, eventName, fn, scope || this)\n                    });\n                } else {\n                    for (var i = 0, ii = this.events.length; i < ii; i++) if (this.events[i].name == eventName) {\n                        try {\n                            this.events[i].f.call(this);\n                        } catch (e) {}\n                    }\n                }\n                return this;\n            };\n            Snap[\"un\" + eventName] =\n            elproto[\"un\" + eventName] = function (fn) {\n                var events = this.events || [],\n                    l = events.length;\n                while (l--) if (events[l].name == eventName &&\n                               (events[l].f == fn || !fn)) {\n                    events[l].unbind();\n                    events.splice(l, 1);\n                    !events.length && delete this.events;\n                    return this;\n                }\n                return this;\n            };\n        })(events[i]);\n    }\n    /*\\\n     * Element.hover\n     [ method ]\n     **\n     * Adds hover event handlers to the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     - icontext (object) #optional context for hover in handler\n     - ocontext (object) #optional context for hover out handler\n     = (object) @Element\n    \\*/\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n    };\n    /*\\\n     * Element.unhover\n     [ method ]\n     **\n     * Removes hover event handlers from the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     = (object) @Element\n    \\*/\n    elproto.unhover = function (f_in, f_out) {\n        return this.unmouseover(f_in).unmouseout(f_out);\n    };\n    var draggable = [];\n    // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n    // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n    // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n    // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n    /*\\\n     * Element.drag\n     [ method ]\n     **\n     * Adds event handlers for an element's drag gesture\n     **\n     - onmove (function) handler for moving\n     - onstart (function) handler for drag start\n     - onend (function) handler for drag end\n     - mcontext (object) #optional context for moving handler\n     - scontext (object) #optional context for drag start handler\n     - econtext (object) #optional context for drag end handler\n     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, \n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element \n     * `drag.over.<id>` fires as well.\n     *\n     * Start event and start handler are called in specified context or in context of the element with following parameters:\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * Move event and move handler are called in specified context or in context of the element with following parameters:\n     o dx (number) shift by x from the start point\n     o dy (number) shift by y from the start point\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * End event and end handler are called in specified context or in context of the element with following parameters:\n     o event (object) DOM event object\n     = (object) @Element\n    \\*/\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n        var el = this;\n        if (!arguments.length) {\n            var origTransform;\n            return el.drag(function (dx, dy) {\n                this.attr({\n                    transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n                });\n            }, function () {\n                origTransform = this.transform().local;\n            });\n        }\n        function start(e, x, y) {\n            (e.originalEvent || e).preventDefault();\n            el._drag.x = x;\n            el._drag.y = y;\n            el._drag.id = e.identifier;\n            !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n            drag.push({el: el, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n            onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n            onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n            onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n            eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n        }\n        function init(e, x, y) {\n            eve(\"snap.draginit.\" + el.id, el, e, x, y);\n        }\n        eve.on(\"snap.draginit.\" + el.id, start);\n        el._drag = {};\n        draggable.push({el: el, start: start, init: init});\n        el.mousedown(init);\n        return el;\n    };\n    /*\n     * Element.onDragOver\n     [ method ]\n     **\n     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n     - f (function) handler for event, first argument would be the element you are dragging over\n    \\*/\n    // elproto.onDragOver = function (f) {\n    //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n    // };\n    /*\\\n     * Element.undrag\n     [ method ]\n     **\n     * Removes all drag event handlers from the given element\n    \\*/\n    elproto.undrag = function () {\n        var i = draggable.length;\n        while (i--) if (draggable[i].el == this) {\n            this.unmousedown(draggable[i].init);\n            draggable.splice(i, 1);\n            eve.unbind(\"snap.drag.*.\" + this.id);\n            eve.unbind(\"snap.draginit.\" + this.id);\n        }\n        !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        pproto = Paper.prototype,\n        rgurl = /^\\s*url\\((.+)\\)/,\n        Str = String,\n        $ = Snap._.$;\n    Snap.filter = {};\n    /*\\\n     * Paper.filter\n     [ method ]\n     **\n     * Creates a `<filter>` element\n     **\n     - filstr (string) SVG fragment of filter provided as a string\n     = (object) @Element\n     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n     > Usage\n     | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    pproto.filter = function (filstr) {\n        var paper = this;\n        if (paper.type != \"svg\") {\n            paper = paper.paper;\n        }\n        var f = Snap.parse(Str(filstr)),\n            id = Snap._.id(),\n            width = paper.node.offsetWidth,\n            height = paper.node.offsetHeight,\n            filter = $(\"filter\");\n        $(filter, {\n            id: id,\n            filterUnits: \"userSpaceOnUse\"\n        });\n        filter.appendChild(f.node);\n        paper.defs.appendChild(filter);\n        return new Element(filter);\n    };\n\n    eve.on(\"snap.util.getattr.filter\", function () {\n        eve.stop();\n        var p = $(this.node, \"filter\");\n        if (p) {\n            var match = Str(p).match(rgurl);\n            return match && Snap.select(match[1]);\n        }\n    });\n    eve.on(\"snap.util.attr.filter\", function (value) {\n        if (value instanceof Element && value.type == \"filter\") {\n            eve.stop();\n            var id = value.node.id;\n            if (!id) {\n                $(value.node, {id: value.id});\n                id = value.id;\n            }\n            $(this.node, {\n                filter: Snap.url(id)\n            });\n        }\n        if (!value || value == \"none\") {\n            eve.stop();\n            this.node.removeAttribute(\"filter\");\n        }\n    });\n    /*\\\n     * Snap.filter.blur\n     [ method ]\n     **\n     * Returns an SVG markup string for the blur filter\n     **\n     - x (number) amount of horizontal blur, in pixels\n     - y (number) #optional amount of vertical blur, in pixels\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.blur(5, 10)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.blur = function (x, y) {\n        if (x == null) {\n            x = 2;\n        }\n        var def = y == null ? x : [x, y];\n        return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n            def: def\n        });\n    };\n    Snap.filter.blur.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.shadow\n     [ method ]\n     **\n     * Returns an SVG markup string for the shadow filter\n     **\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - blur (number) #optional amount of blur\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * which makes blur default to `4`. Or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - opacity (number) #optional `0..1` opacity of the shadow\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.shadow(0, 2, .3)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n        if (opacity == null) {\n            if (color == null) {\n                opacity = blur;\n                blur = 4;\n                color = \"#000\";\n            } else {\n                opacity = color;\n                color = blur;\n                blur = 4;\n            }\n        }\n        if (blur == null) {\n            blur = 4;\n        }\n        if (opacity == null) {\n            opacity = 1;\n        }\n        if (dx == null) {\n            dx = 0;\n            dy = 2;\n        }\n        if (dy == null) {\n            dy = dx;\n        }\n        color = Snap.color(color);\n        return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n            color: color,\n            dx: dx,\n            dy: dy,\n            blur: blur,\n            opacity: opacity\n        });\n    };\n    Snap.filter.shadow.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.grayscale\n     [ method ]\n     **\n     * Returns an SVG markup string for the grayscale filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.grayscale = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n            a: 0.2126 + 0.7874 * (1 - amount),\n            b: 0.7152 - 0.7152 * (1 - amount),\n            c: 0.0722 - 0.0722 * (1 - amount),\n            d: 0.2126 - 0.2126 * (1 - amount),\n            e: 0.7152 + 0.2848 * (1 - amount),\n            f: 0.0722 - 0.0722 * (1 - amount),\n            g: 0.2126 - 0.2126 * (1 - amount),\n            h: 0.0722 + 0.9278 * (1 - amount)\n        });\n    };\n    Snap.filter.grayscale.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.sepia\n     [ method ]\n     **\n     * Returns an SVG markup string for the sepia filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.sepia = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n            a: 0.393 + 0.607 * (1 - amount),\n            b: 0.769 - 0.769 * (1 - amount),\n            c: 0.189 - 0.189 * (1 - amount),\n            d: 0.349 - 0.349 * (1 - amount),\n            e: 0.686 + 0.314 * (1 - amount),\n            f: 0.168 - 0.168 * (1 - amount),\n            g: 0.272 - 0.272 * (1 - amount),\n            h: 0.534 - 0.534 * (1 - amount),\n            i: 0.131 + 0.869 * (1 - amount)\n        });\n    };\n    Snap.filter.sepia.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.saturate\n     [ method ]\n     **\n     * Returns an SVG markup string for the saturate filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.saturate = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n            amount: 1 - amount\n        });\n    };\n    Snap.filter.saturate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.hueRotate\n     [ method ]\n     **\n     * Returns an SVG markup string for the hue-rotate filter\n     **\n     - angle (number) angle of rotation\n     = (string) filter representation\n    \\*/\n    Snap.filter.hueRotate = function (angle) {\n        angle = angle || 0;\n        return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n            angle: angle\n        });\n    };\n    Snap.filter.hueRotate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.invert\n     [ method ]\n     **\n     * Returns an SVG markup string for the invert filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.invert = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n//        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n        return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: 1 - amount\n        });\n    };\n    Snap.filter.invert.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.brightness\n     [ method ]\n     **\n     * Returns an SVG markup string for the brightness filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.brightness = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n            amount: amount\n        });\n    };\n    Snap.filter.brightness.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.contrast\n     [ method ]\n     **\n     * Returns an SVG markup string for the contrast filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.contrast = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: .5 - amount / 2\n        });\n    };\n    Snap.filter.contrast.toString = function () {\n        return this();\n    };\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var box = Snap._.box,\n        is = Snap.is,\n        firstLetter = /^[^a-z]*([tbmlrc])/i,\n        toString = function () {\n            return \"T\" + this.dx + \",\" + this.dy;\n        };\n    /*\\\n     * Element.getAlign\n     [ method ]\n     **\n     * Returns shift needed to align the element relatively to given element.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n     > Usage\n     | el.transform(el.getAlign(el2, \"top\"));\n     * or\n     | var dy = el.getAlign(el2, \"top\").dy;\n    \\*/\n    Element.prototype.getAlign = function (el, way) {\n        if (way == null && is(el, \"string\")) {\n            way = el;\n            el = null;\n        }\n        el = el || this.paper;\n        var bx = el.getBBox ? el.getBBox() : box(el),\n            bb = this.getBBox(),\n            out = {};\n        way = way && way.match(firstLetter);\n        way = way ? way[1].toLowerCase() : \"c\";\n        switch (way) {\n            case \"t\":\n                out.dx = 0;\n                out.dy = bx.y - bb.y;\n            break;\n            case \"b\":\n                out.dx = 0;\n                out.dy = bx.y2 - bb.y2;\n            break;\n            case \"m\":\n                out.dx = 0;\n                out.dy = bx.cy - bb.cy;\n            break;\n            case \"l\":\n                out.dx = bx.x - bb.x;\n                out.dy = 0;\n            break;\n            case \"r\":\n                out.dx = bx.x2 - bb.x2;\n                out.dy = 0;\n            break;\n            default:\n                out.dx = bx.cx - bb.cx;\n                out.dy = 0;\n            break;\n        }\n        out.toString = toString;\n        return out;\n    };\n    /*\\\n     * Element.align\n     [ method ]\n     **\n     * Aligns the element relatively to given one via transformation.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object) this element\n     > Usage\n     | el.align(el2, \"top\");\n     * or\n     | el.align(\"middle\");\n    \\*/\n    Element.prototype.align = function (el, way) {\n        return this.transform(\"...\" + this.getAlign(el, way));\n    };\n});\n\n// Copyright (c) 2016 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        has = \"hasOwnProperty\";\n    function slice(from, to, f) {\n        return function (arr) {\n            var res = arr.slice(from, to);\n            if (res.length == 1) {\n                res = res[0];\n            }\n            return f ? f(res) : res;\n        };\n    }\n    var Animation = function (attr, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        this.attr = attr;\n        this.dur = ms;\n        easing && (this.easing = easing);\n        callback && (this.callback = callback);\n    };\n    Snap._.Animation = Animation;\n    /*\\\n     * Snap.animation\n     [ method ]\n     **\n     * Creates an animation object\n     **\n     - attr (object) attributes of final destination\n     - duration (number) duration of the animation, in milliseconds\n     - easing (function) #optional one of easing functions of @mina or custom one\n     - callback (function) #optional callback function that fires when animation ends\n     = (object) animation object\n    \\*/\n    Snap.animation = function (attr, ms, easing, callback) {\n        return new Animation(attr, ms, easing, callback);\n    };\n    /*\\\n     * Element.inAnim\n     [ method ]\n     **\n     * Returns a set of animations that may be able to manipulate the current element\n     **\n     = (object) in format:\n     o {\n     o     anim (object) animation object,\n     o     mina (object) @mina object,\n     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n    \\*/\n    elproto.inAnim = function () {\n        var el = this,\n            res = [];\n        for (var id in el.anims) if (el.anims[has](id)) {\n            (function (a) {\n                res.push({\n                    anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n                    mina: a,\n                    curStatus: a.status(),\n                    status: function (val) {\n                        return a.status(val);\n                    },\n                    stop: function () {\n                        a.stop();\n                    }\n                });\n            }(el.anims[id]));\n        }\n        return res;\n    };\n    /*\\\n     * Snap.animate\n     [ method ]\n     **\n     * Runs generic animation of one number into another with a caring function\n     **\n     - from (number|array) number or array of numbers\n     - to (number|array) number or array of numbers\n     - setter (function) caring function that accepts one number argument\n     - duration (number) duration, in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function to execute when animation ends\n     = (object) animation object in @mina format\n     o {\n     o     id (string) animation id, consider it read-only,\n     o     duration (function) gets or sets the duration of the animation,\n     o     easing (function) easing,\n     o     speed (function) gets or sets the speed of the animation,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n     | var rect = Snap().rect(0, 0, 10, 10);\n     | Snap.animate(0, 10, function (val) {\n     |     rect.attr({\n     |         x: val\n     |     });\n     | }, 1000);\n     | // in given context is equivalent to\n     | rect.animate({x: 10}, 1000);\n    \\*/\n    Snap.animate = function (from, to, setter, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        var now = mina.time(),\n            anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n        callback && eve.once(\"mina.finish.\" + anim.id, callback);\n        return anim;\n    };\n    /*\\\n     * Element.stop\n     [ method ]\n     **\n     * Stops all the animations for the current element\n     **\n     = (Element) the current element\n    \\*/\n    elproto.stop = function () {\n        var anims = this.inAnim();\n        for (var i = 0, ii = anims.length; i < ii; i++) {\n            anims[i].stop();\n        }\n        return this;\n    };\n    /*\\\n     * Element.animate\n     [ method ]\n     **\n     * Animates the given attributes of the element\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     = (Element) the current element\n    \\*/\n    elproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = attrs.dur;\n            attrs = attrs.attr;\n        }\n        var fkeys = [], tkeys = [], keys = {}, from, to, f, eq,\n            el = this;\n        for (var key in attrs) if (attrs[has](key)) {\n            if (el.equal) {\n                eq = el.equal(key, Str(attrs[key]));\n                from = eq.from;\n                to = eq.to;\n                f = eq.f;\n            } else {\n                from = +el.attr(key);\n                to = +attrs[key];\n            }\n            var len = is(from, \"array\") ? from.length : 1;\n            keys[key] = slice(fkeys.length, fkeys.length + len, f);\n            fkeys = fkeys.concat(from);\n            tkeys = tkeys.concat(to);\n        }\n        var now = mina.time(),\n            anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n                var attr = {};\n                for (var key in keys) if (keys[has](key)) {\n                    attr[key] = keys[key](val);\n                }\n                el.attr(attr);\n            }, easing);\n        el.anims[anim.id] = anim;\n        anim._attrs = attrs;\n        anim._callback = callback;\n        eve(\"snap.animcreated.\" + el.id, anim);\n        eve.once(\"mina.finish.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n            callback && callback.call(el);\n        });\n        eve.once(\"mina.stop.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n        });\n        return el;\n    };\n});\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    // Colours are from https://www.materialui.co\n    var red         = \"#ffebee#ffcdd2#ef9a9a#e57373#ef5350#f44336#e53935#d32f2f#c62828#b71c1c#ff8a80#ff5252#ff1744#d50000\",\n        pink        = \"#FCE4EC#F8BBD0#F48FB1#F06292#EC407A#E91E63#D81B60#C2185B#AD1457#880E4F#FF80AB#FF4081#F50057#C51162\",\n        purple      = \"#F3E5F5#E1BEE7#CE93D8#BA68C8#AB47BC#9C27B0#8E24AA#7B1FA2#6A1B9A#4A148C#EA80FC#E040FB#D500F9#AA00FF\",\n        deeppurple  = \"#EDE7F6#D1C4E9#B39DDB#9575CD#7E57C2#673AB7#5E35B1#512DA8#4527A0#311B92#B388FF#7C4DFF#651FFF#6200EA\",\n        indigo      = \"#E8EAF6#C5CAE9#9FA8DA#7986CB#5C6BC0#3F51B5#3949AB#303F9F#283593#1A237E#8C9EFF#536DFE#3D5AFE#304FFE\",\n        blue        = \"#E3F2FD#BBDEFB#90CAF9#64B5F6#64B5F6#2196F3#1E88E5#1976D2#1565C0#0D47A1#82B1FF#448AFF#2979FF#2962FF\",\n        lightblue   = \"#E1F5FE#B3E5FC#81D4FA#4FC3F7#29B6F6#03A9F4#039BE5#0288D1#0277BD#01579B#80D8FF#40C4FF#00B0FF#0091EA\",\n        cyan        = \"#E0F7FA#B2EBF2#80DEEA#4DD0E1#26C6DA#00BCD4#00ACC1#0097A7#00838F#006064#84FFFF#18FFFF#00E5FF#00B8D4\",\n        teal        = \"#E0F2F1#B2DFDB#80CBC4#4DB6AC#26A69A#009688#00897B#00796B#00695C#004D40#A7FFEB#64FFDA#1DE9B6#00BFA5\",\n        green       = \"#E8F5E9#C8E6C9#A5D6A7#81C784#66BB6A#4CAF50#43A047#388E3C#2E7D32#1B5E20#B9F6CA#69F0AE#00E676#00C853\",\n        lightgreen  = \"#F1F8E9#DCEDC8#C5E1A5#AED581#9CCC65#8BC34A#7CB342#689F38#558B2F#33691E#CCFF90#B2FF59#76FF03#64DD17\",\n        lime        = \"#F9FBE7#F0F4C3#E6EE9C#DCE775#D4E157#CDDC39#C0CA33#AFB42B#9E9D24#827717#F4FF81#EEFF41#C6FF00#AEEA00\",\n        yellow      = \"#FFFDE7#FFF9C4#FFF59D#FFF176#FFEE58#FFEB3B#FDD835#FBC02D#F9A825#F57F17#FFFF8D#FFFF00#FFEA00#FFD600\",\n        amber       = \"#FFF8E1#FFECB3#FFE082#FFD54F#FFCA28#FFC107#FFB300#FFA000#FF8F00#FF6F00#FFE57F#FFD740#FFC400#FFAB00\",\n        orange      = \"#FFF3E0#FFE0B2#FFCC80#FFB74D#FFA726#FF9800#FB8C00#F57C00#EF6C00#E65100#FFD180#FFAB40#FF9100#FF6D00\",\n        deeporange  = \"#FBE9E7#FFCCBC#FFAB91#FF8A65#FF7043#FF5722#F4511E#E64A19#D84315#BF360C#FF9E80#FF6E40#FF3D00#DD2C00\",\n        brown       = \"#EFEBE9#D7CCC8#BCAAA4#A1887F#8D6E63#795548#6D4C41#5D4037#4E342E#3E2723\",\n        grey        = \"#FAFAFA#F5F5F5#EEEEEE#E0E0E0#BDBDBD#9E9E9E#757575#616161#424242#212121\",\n        bluegrey    = \"#ECEFF1#CFD8DC#B0BEC5#90A4AE#78909C#607D8B#546E7A#455A64#37474F#263238\";\n    /*\\\n     * Snap.mui\n     [ property ]\n     **\n     * Contain Material UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.mui.deeppurple, stroke: Snap.mui.amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.mui = {};\n    /*\\\n     * Snap.flat\n     [ property ]\n     **\n     * Contain Flat UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.flat.carrot, stroke: Snap.flat.wetasphalt});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.flat = {};\n    function saveColor(colors) {\n        colors = colors.split(/(?=#)/);\n        var color = new String(colors[5]);\n        color[50] = colors[0];\n        color[100] = colors[1];\n        color[200] = colors[2];\n        color[300] = colors[3];\n        color[400] = colors[4];\n        color[500] = colors[5];\n        color[600] = colors[6];\n        color[700] = colors[7];\n        color[800] = colors[8];\n        color[900] = colors[9];\n        if (colors[10]) {\n            color.A100 = colors[10];\n            color.A200 = colors[11];\n            color.A400 = colors[12];\n            color.A700 = colors[13];\n        }\n        return color;\n    }\n    Snap.mui.red = saveColor(red);\n    Snap.mui.pink = saveColor(pink);\n    Snap.mui.purple = saveColor(purple);\n    Snap.mui.deeppurple = saveColor(deeppurple);\n    Snap.mui.indigo = saveColor(indigo);\n    Snap.mui.blue = saveColor(blue);\n    Snap.mui.lightblue = saveColor(lightblue);\n    Snap.mui.cyan = saveColor(cyan);\n    Snap.mui.teal = saveColor(teal);\n    Snap.mui.green = saveColor(green);\n    Snap.mui.lightgreen = saveColor(lightgreen);\n    Snap.mui.lime = saveColor(lime);\n    Snap.mui.yellow = saveColor(yellow);\n    Snap.mui.amber = saveColor(amber);\n    Snap.mui.orange = saveColor(orange);\n    Snap.mui.deeporange = saveColor(deeporange);\n    Snap.mui.brown = saveColor(brown);\n    Snap.mui.grey = saveColor(grey);\n    Snap.mui.bluegrey = saveColor(bluegrey);\n    Snap.flat.turquoise = \"#1abc9c\";\n    Snap.flat.greensea = \"#16a085\";\n    Snap.flat.sunflower = \"#f1c40f\";\n    Snap.flat.orange = \"#f39c12\";\n    Snap.flat.emerland = \"#2ecc71\";\n    Snap.flat.nephritis = \"#27ae60\";\n    Snap.flat.carrot = \"#e67e22\";\n    Snap.flat.pumpkin = \"#d35400\";\n    Snap.flat.peterriver = \"#3498db\";\n    Snap.flat.belizehole = \"#2980b9\";\n    Snap.flat.alizarin = \"#e74c3c\";\n    Snap.flat.pomegranate = \"#c0392b\";\n    Snap.flat.amethyst = \"#9b59b6\";\n    Snap.flat.wisteria = \"#8e44ad\";\n    Snap.flat.clouds = \"#ecf0f1\";\n    Snap.flat.silver = \"#bdc3c7\";\n    Snap.flat.wetasphalt = \"#34495e\";\n    Snap.flat.midnightblue = \"#2c3e50\";\n    Snap.flat.concrete = \"#95a5a6\";\n    Snap.flat.asbestos = \"#7f8c8d\";\n    /*\\\n     * Snap.importMUIColors\n     [ method ]\n     **\n     * Imports Material UI colours into global object.\n     | Snap.importMUIColors();\n     | Snap().rect(0, 0, 10, 10).attr({fill: deeppurple, stroke: amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.importMUIColors = function () {\n        for (var color in Snap.mui) {\n            if (Snap.mui.hasOwnProperty(color)) {\n                window[color] = Snap.mui[color];\n            }\n        }\n    };\n});\n\nmodule.exports = Snap\n","// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// ┌────────────────────────────────────────────────────────────┐ \\\\\n// │ Eve 0.5.4 - JavaScript Events Library                      │ \\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\n\n(function (glob) {\n    var version = \"0.5.4\",\n        has = \"hasOwnProperty\",\n        separator = /[\\.\\/]/,\n        comaseparator = /\\s*,\\s*/,\n        wildcard = \"*\",\n        numsort = function (a, b) {\n            return a - b;\n        },\n        current_event,\n        stop,\n        events = {n: {}},\n        firstDefined = function () {\n            for (var i = 0, ii = this.length; i < ii; i++) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        lastDefined = function () {\n            var i = this.length;\n            while (--i) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        objtos = Object.prototype.toString,\n        Str = String,\n        isArray = Array.isArray || function (ar) {\n            return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\n        },\n    /*\\\n     * eve\n     [ method ]\n\n     * Fires event with given `name`, given scope and other parameters.\n\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n     - scope (object) context for the event handlers\n     - varargs (...) the rest of arguments will be sent to event handlers\n\n     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n    \\*/\n        eve = function (name, scope) {\n            var oldstop = stop,\n                args = Array.prototype.slice.call(arguments, 2),\n                listeners = eve.listeners(name),\n                z = 0,\n                l,\n                indexed = [],\n                queue = {},\n                out = [],\n                ce = current_event;\n            out.firstDefined = firstDefined;\n            out.lastDefined = lastDefined;\n            current_event = name;\n            stop = 0;\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n                indexed.push(listeners[i].zIndex);\n                if (listeners[i].zIndex < 0) {\n                    queue[listeners[i].zIndex] = listeners[i];\n                }\n            }\n            indexed.sort(numsort);\n            while (indexed[z] < 0) {\n                l = queue[indexed[z++]];\n                out.push(l.apply(scope, args));\n                if (stop) {\n                    stop = oldstop;\n                    return out;\n                }\n            }\n            for (i = 0; i < ii; i++) {\n                l = listeners[i];\n                if (\"zIndex\" in l) {\n                    if (l.zIndex == indexed[z]) {\n                        out.push(l.apply(scope, args));\n                        if (stop) {\n                            break;\n                        }\n                        do {\n                            z++;\n                            l = queue[indexed[z]];\n                            l && out.push(l.apply(scope, args));\n                            if (stop) {\n                                break;\n                            }\n                        } while (l)\n                    } else {\n                        queue[l.zIndex] = l;\n                    }\n                } else {\n                    out.push(l.apply(scope, args));\n                    if (stop) {\n                        break;\n                    }\n                }\n            }\n            stop = oldstop;\n            current_event = ce;\n            return out;\n        };\n    // Undocumented. Debug only.\n    eve._events = events;\n    /*\\\n     * eve.listeners\n     [ method ]\n\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\n\n     = (array) array of event handlers\n    \\*/\n    eve.listeners = function (name) {\n        var names = isArray(name) ? name : name.split(separator),\n            e = events,\n            item,\n            items,\n            k,\n            i,\n            ii,\n            j,\n            jj,\n            nes,\n            es = [e],\n            out = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            nes = [];\n            for (j = 0, jj = es.length; j < jj; j++) {\n                e = es[j].n;\n                items = [e[names[i]], e[wildcard]];\n                k = 2;\n                while (k--) {\n                    item = items[k];\n                    if (item) {\n                        nes.push(item);\n                        out = out.concat(item.f || []);\n                    }\n                }\n            }\n            es = nes;\n        }\n        return out;\n    };\n    /*\\\n     * eve.separator\n     [ method ]\n\n     * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\n     * here. Be aware that if you pass a string longer than one character it will be treated as\n     * a list of characters.\n\n     - separator (string) new separator. Empty string resets to default: `.` or `/`.\n    \\*/\n    eve.separator = function (sep) {\n        if (sep) {\n            sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\n            sep = \"[\" + sep + \"]\";\n            separator = new RegExp(sep);\n        } else {\n            separator = /[\\.\\/]/;\n        }\n    };\n    /*\\\n     * eve.on\n     [ method ]\n     **\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n     | eve.on(\"*.under.*\", f);\n     | eve(\"mouse.under.floor\"); // triggers f\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     - name (array) if you don’t want to use separators, you can use array of strings\n     - f (function) event handler function\n     **\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment.\n     > Example:\n     | eve.on(\"mouse\", eatIt)(2);\n     | eve.on(\"mouse\", scream);\n     | eve.on(\"mouse\", catchIt)(1);\n     * This will ensure that `catchIt` function will be called before `eatIt`.\n     *\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n    \\*/\n    eve.on = function (name, f) {\n        if (typeof f != \"function\") {\n            return function () {};\n        }\n        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n        for (var i = 0, ii = names.length; i < ii; i++) {\n            (function (name) {\n                var names = isArray(name) ? name : Str(name).split(separator),\n                    e = events,\n                    exist;\n                for (var i = 0, ii = names.length; i < ii; i++) {\n                    e = e.n;\n                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\n                }\n                e.f = e.f || [];\n                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n                    exist = true;\n                    break;\n                }\n                !exist && e.f.push(f);\n            }(names[i]));\n        }\n        return function (zIndex) {\n            if (+zIndex == +zIndex) {\n                f.zIndex = +zIndex;\n            }\n        };\n    };\n    /*\\\n     * eve.f\n     [ method ]\n     **\n     * Returns function that will fire given event with optional arguments.\n     * Arguments that will be passed to the result function will be also\n     * concated to the list of final arguments.\n     | el.onclick = eve.f(\"click\", 1, 2);\n     | eve.on(\"click\", function (a, b, c) {\n     |     console.log(a, b, c); // 1, 2, [event object]\n     | });\n     - event (string) event name\n     - varargs (…) and any other arguments\n     = (function) possible event handler function\n    \\*/\n    eve.f = function (event) {\n        var attrs = [].slice.call(arguments, 1);\n        return function () {\n            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n        };\n    };\n    /*\\\n     * eve.stop\n     [ method ]\n     **\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n    \\*/\n    eve.stop = function () {\n        stop = 1;\n    };\n    /*\\\n     * eve.nt\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     - subname (string) #optional subname of the event\n     **\n     = (string) name of the event, if `subname` is not specified\n     * or\n     = (boolean) `true`, if current event’s name contains `subname`\n    \\*/\n    eve.nt = function (subname) {\n        var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\n        if (subname) {\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\n        }\n        return cur;\n    };\n    /*\\\n     * eve.nts\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     **\n     = (array) names of the event\n    \\*/\n    eve.nts = function () {\n        return isArray(current_event) ? current_event : current_event.split(separator);\n    };\n    /*\\\n     * eve.off\n     [ method ]\n     **\n     * Removes given function from the list of event listeners assigned to given name.\n     * If no arguments specified all the events will be cleared.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n    \\*/\n    /*\\\n     * eve.unbind\n     [ method ]\n     **\n     * See @eve.off\n    \\*/\n    eve.off = eve.unbind = function (name, f) {\n        if (!name) {\n            eve._events = events = {n: {}};\n            return;\n        }\n        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n        if (names.length > 1) {\n            for (var i = 0, ii = names.length; i < ii; i++) {\n                eve.off(names[i], f);\n            }\n            return;\n        }\n        names = isArray(name) ? name : Str(name).split(separator);\n        var e,\n            key,\n            splice,\n            i, ii, j, jj,\n            cur = [events],\n            inodes = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            for (j = 0; j < cur.length; j += splice.length - 2) {\n                splice = [j, 1];\n                e = cur[j].n;\n                if (names[i] != wildcard) {\n                    if (e[names[i]]) {\n                        splice.push(e[names[i]]);\n                        inodes.unshift({\n                            n: e,\n                            name: names[i]\n                        });\n                    }\n                } else {\n                    for (key in e) if (e[has](key)) {\n                        splice.push(e[key]);\n                        inodes.unshift({\n                            n: e,\n                            name: key\n                        });\n                    }\n                }\n                cur.splice.apply(cur, splice);\n            }\n        }\n        for (i = 0, ii = cur.length; i < ii; i++) {\n            e = cur[i];\n            while (e.n) {\n                if (f) {\n                    if (e.f) {\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n                            e.f.splice(j, 1);\n                            break;\n                        }\n                        !e.f.length && delete e.f;\n                    }\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        var funcs = e.n[key].f;\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n                            funcs.splice(j, 1);\n                            break;\n                        }\n                        !funcs.length && delete e.n[key].f;\n                    }\n                } else {\n                    delete e.f;\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        delete e.n[key].f;\n                    }\n                }\n                e = e.n;\n            }\n        }\n        // prune inner nodes in path\n        prune: for (i = 0, ii = inodes.length; i < ii; i++) {\n            e = inodes[i];\n            for (key in e.n[e.name].f) {\n                // not empty (has listeners)\n                continue prune;\n            }\n            for (key in e.n[e.name].n) {\n                // not empty (has children)\n                continue prune;\n            }\n            // is empty\n            delete e.n[e.name];\n        }\n    };\n    /*\\\n     * eve.once\n     [ method ]\n     **\n     * Binds given event handler with a given name to only run once then unbind itself.\n     | eve.once(\"login\", f);\n     | eve(\"login\"); // triggers f\n     | eve(\"login\"); // no listeners\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     = (function) same return function as @eve.on\n    \\*/\n    eve.once = function (name, f) {\n        var f2 = function () {\n            eve.off(name, f2);\n            return f.apply(this, arguments);\n        };\n        return eve.on(name, f2);\n    };\n    /*\\\n     * eve.version\n     [ property (string) ]\n     **\n     * Current version of the library.\n    \\*/\n    eve.version = version;\n    eve.toString = function () {\n        return \"You are running Eve \" + version;\n    };\n    glob.eve = eve;\n    typeof module != \"undefined\" && module.exports ? module.exports = eve : typeof define === \"function\" && define.amd ? define(\"eve\", [], function () { return eve; }) : glob.eve = eve;\n})(typeof window != \"undefined\" ? window : this);\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _snapsvgImporter = require('../snapsvgImporter');\n\nvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  svg: {\n    lib: _snapsvgImporter2['default'],\n    pathInitial: 'M-7.312,0H0c0,0,0,113.839,0,400c0,264.506,0,400,0,400h-7.312V0z',\n    pathOpen: 'M-7.312,0H15c0,0,66,113.339,66,399.5C81,664.006,15,800,15,800H-7.312V0z;M-7.312,0H100c0,0,0,113.839,0,400c0,264.506,0,400,0,400H-7.312V0z',\n    animate: function animate(path) {\n      var pos = 0;\n      var steps = this.pathOpen.split(';');\n      var stepsTotal = steps.length;\n      var mina = window.mina;\n\n      var nextStep = function nextStep() {\n        if (pos > stepsTotal - 1) return;\n\n        path.animate({ path: steps[pos] }, pos === 0 ? 400 : 500, pos === 0 ? mina.easein : mina.elastic, function () {\n          nextStep();\n        });\n\n        pos++;\n      };\n\n      nextStep();\n    }\n  },\n\n  morphShape: function morphShape(isOpen, width, right) {\n    return {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      right: right ? 'inherit' : 0,\n      left: right ? 0 : 'inherit',\n      MozTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      MsTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      OTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      WebkitTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      transform: right ? 'rotateY(180deg)' : 'rotateY(0deg)'\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: isOpen ? 'transform 0.4s 0s' : 'transform 0.4s'\n    };\n  },\n\n  menu: function menu(isOpen, width, right) {\n    width -= 140;\n    return {\n      position: 'fixed',\n      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  },\n\n  item: function item(isOpen, width, right, nthChild) {\n    width -= 140;\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.3s 0.4s, transform 0.3s 0.4s' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  },\n\n  closeButton: function closeButton(isOpen, width, right) {\n    width -= 140;\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      transformOrigin: right ? '100% 50%' : '0% 50%',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      MsTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      OTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      transform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      transformOrigin: '100%',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer() {\n    return {\n      perspective: '1500px'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      OTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      transform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      transition: 'all 0.5s ease-in-out'\n    };\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      perspectiveOrigin: '0% 50%',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      visibility: isOpen ? 'visible' : 'hidden',\n      MozTransform: 'translate3d(0, 0, 0)',\n      MsTransform: 'translate3d(0, 0, 0)',\n      OTransform: 'translate3d(0, 0, 0)',\n      WebkitTransform: 'translate3d(0, 0, 0)',\n      transform: 'translate3d(0, 0, 0)',\n      zIndex: 1000\n    };\n  },\n\n  overlay: function overlay(isOpen, width, right) {\n    return {\n      zIndex: 1400,\n      MozTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      MsTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      OTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      WebkitTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transition: 'all 0.5s',\n      visibility: isOpen ? 'visible' : 'hidden'\n    };\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s',\n      zIndex: 1200,\n      position: 'relative'\n    };\n  },\n\n  burgerIcon: function burgerIcon(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      MsTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      OTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      WebkitTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transition: 'all 0.1s',\n      position: 'relative',\n      zIndex: 1300\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar React = require('react');\nvar React__default = _interopDefault(React);\nvar ExecutionEnvironment = _interopDefault(require('exenv'));\nvar shallowEqual = _interopDefault(require('shallowequal'));\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction withSideEffect(reducePropsToState, handleStateChangeOnClient, mapStateOnServer) {\n  if (typeof reducePropsToState !== 'function') {\n    throw new Error('Expected reducePropsToState to be a function.');\n  }\n  if (typeof handleStateChangeOnClient !== 'function') {\n    throw new Error('Expected handleStateChangeOnClient to be a function.');\n  }\n  if (typeof mapStateOnServer !== 'undefined' && typeof mapStateOnServer !== 'function') {\n    throw new Error('Expected mapStateOnServer to either be undefined or a function.');\n  }\n\n  function getDisplayName(WrappedComponent) {\n    return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n  }\n\n  return function wrap(WrappedComponent) {\n    if (typeof WrappedComponent !== 'function') {\n      throw new Error('Expected WrappedComponent to be a React component.');\n    }\n\n    var mountedInstances = [];\n    var state = void 0;\n\n    function emitChange() {\n      state = reducePropsToState(mountedInstances.map(function (instance) {\n        return instance.props;\n      }));\n\n      if (SideEffect.canUseDOM) {\n        handleStateChangeOnClient(state);\n      } else if (mapStateOnServer) {\n        state = mapStateOnServer(state);\n      }\n    }\n\n    var SideEffect = function (_Component) {\n      _inherits(SideEffect, _Component);\n\n      function SideEffect() {\n        _classCallCheck(this, SideEffect);\n\n        return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n      }\n\n      // Try to use displayName of wrapped component\n      SideEffect.peek = function peek() {\n        return state;\n      };\n\n      // Expose canUseDOM so tests can monkeypatch it\n\n\n      SideEffect.rewind = function rewind() {\n        if (SideEffect.canUseDOM) {\n          throw new Error('You may only call rewind() on the server. Call peek() to read the current state.');\n        }\n\n        var recordedState = state;\n        state = undefined;\n        mountedInstances = [];\n        return recordedState;\n      };\n\n      SideEffect.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n        return !shallowEqual(nextProps, this.props);\n      };\n\n      SideEffect.prototype.componentWillMount = function componentWillMount() {\n        mountedInstances.push(this);\n        emitChange();\n      };\n\n      SideEffect.prototype.componentDidUpdate = function componentDidUpdate() {\n        emitChange();\n      };\n\n      SideEffect.prototype.componentWillUnmount = function componentWillUnmount() {\n        var index = mountedInstances.indexOf(this);\n        mountedInstances.splice(index, 1);\n        emitChange();\n      };\n\n      SideEffect.prototype.render = function render() {\n        return React__default.createElement(WrappedComponent, this.props);\n      };\n\n      return SideEffect;\n    }(React.Component);\n\n    SideEffect.displayName = 'SideEffect(' + getDisplayName(WrappedComponent) + ')';\n    SideEffect.canUseDOM = ExecutionEnvironment.canUseDOM;\n\n\n    return SideEffect;\n  };\n}\n\nmodule.exports = withSideEffect;\n","/*!\n  Copyright (c) 2015 Jed Watson.\n  Based on code that is Copyright 2013-2015, Facebook, Inc.\n  All rights reserved.\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar canUseDOM = !!(\n\t\ttypeof window !== 'undefined' &&\n\t\twindow.document &&\n\t\twindow.document.createElement\n\t);\n\n\tvar ExecutionEnvironment = {\n\n\t\tcanUseDOM: canUseDOM,\n\n\t\tcanUseWorkers: typeof Worker !== 'undefined',\n\n\t\tcanUseEventListeners:\n\t\t\tcanUseDOM && !!(window.addEventListener || window.attachEvent),\n\n\t\tcanUseViewport: canUseDOM && !!window.screen\n\n\t};\n\n\tif (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\tdefine(function () {\n\t\t\treturn ExecutionEnvironment;\n\t\t});\n\t} else if (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = ExecutionEnvironment;\n\t} else {\n\t\twindow.ExecutionEnvironment = ExecutionEnvironment;\n\t}\n\n}());\n","//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\nvar hasElementType = typeof Element !== 'undefined';\n\nfunction equal(a, b) {\n  // fast-deep-equal index.js 2.0.1\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a)\n      , arrB = isArray(b)\n      , i\n      , length\n      , key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = length; i-- !== 0;)\n      if (!hasProp.call(b, keys[i])) return false;\n    // end fast-deep-equal\n\n    // start react-fast-compare\n    // custom handling for DOM elements\n    if (hasElementType && a instanceof Element && b instanceof Element)\n      return a === b;\n\n    // custom handling for React\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (key === '_owner' && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner.\n        //  _owner contains circular references\n        // and is not needed when comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of a react element\n        continue;\n      } else {\n        // all other properties should be traversed as usual\n        if (!equal(a[key], b[key])) return false;\n      }\n    }\n    // end react-fast-compare\n\n    // fast-deep-equal index.js 2.0.1\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n// end fast-deep-equal\n\nmodule.exports = function exportedEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if ((error.message && error.message.match(/stack|recursion/i)) || (error.number === -2146828260)) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('Warning: react-fast-compare does not handle circular references.', error.name, error.message);\n      return false;\n    }\n    // some other error. we should definitely know about these\n    throw error;\n  }\n};\n","exports.__esModule = true;\nexports.warn = exports.requestAnimationFrame = exports.reducePropsToState = exports.mapStateOnServer = exports.handleClientStateChange = exports.convertReactPropstoHtmlAttributes = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _objectAssign = require(\"object-assign\");\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _HelmetConstants = require(\"./HelmetConstants.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar encodeSpecialCharacters = function encodeSpecialCharacters(str) {\n    var encode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (encode === false) {\n        return String(str);\n    }\n\n    return String(str).replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#x27;\");\n};\n\nvar getTitleFromPropsList = function getTitleFromPropsList(propsList) {\n    var innermostTitle = getInnermostProperty(propsList, _HelmetConstants.TAG_NAMES.TITLE);\n    var innermostTemplate = getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.TITLE_TEMPLATE);\n\n    if (innermostTemplate && innermostTitle) {\n        // use function arg to avoid need to escape $ characters\n        return innermostTemplate.replace(/%s/g, function () {\n            return innermostTitle;\n        });\n    }\n\n    var innermostDefaultTitle = getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.DEFAULT_TITLE);\n\n    return innermostTitle || innermostDefaultTitle || undefined;\n};\n\nvar getOnChangeClientState = function getOnChangeClientState(propsList) {\n    return getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.ON_CHANGE_CLIENT_STATE) || function () {};\n};\n\nvar getAttributesFromPropsList = function getAttributesFromPropsList(tagType, propsList) {\n    return propsList.filter(function (props) {\n        return typeof props[tagType] !== \"undefined\";\n    }).map(function (props) {\n        return props[tagType];\n    }).reduce(function (tagAttrs, current) {\n        return _extends({}, tagAttrs, current);\n    }, {});\n};\n\nvar getBaseTagFromPropsList = function getBaseTagFromPropsList(primaryAttributes, propsList) {\n    return propsList.filter(function (props) {\n        return typeof props[_HelmetConstants.TAG_NAMES.BASE] !== \"undefined\";\n    }).map(function (props) {\n        return props[_HelmetConstants.TAG_NAMES.BASE];\n    }).reverse().reduce(function (innermostBaseTag, tag) {\n        if (!innermostBaseTag.length) {\n            var keys = Object.keys(tag);\n\n            for (var i = 0; i < keys.length; i++) {\n                var attributeKey = keys[i];\n                var lowerCaseAttributeKey = attributeKey.toLowerCase();\n\n                if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && tag[lowerCaseAttributeKey]) {\n                    return innermostBaseTag.concat(tag);\n                }\n            }\n        }\n\n        return innermostBaseTag;\n    }, []);\n};\n\nvar getTagsFromPropsList = function getTagsFromPropsList(tagName, primaryAttributes, propsList) {\n    // Calculate list of tags, giving priority innermost component (end of the propslist)\n    var approvedSeenTags = {};\n\n    return propsList.filter(function (props) {\n        if (Array.isArray(props[tagName])) {\n            return true;\n        }\n        if (typeof props[tagName] !== \"undefined\") {\n            warn(\"Helmet: \" + tagName + \" should be of type \\\"Array\\\". Instead found type \\\"\" + _typeof(props[tagName]) + \"\\\"\");\n        }\n        return false;\n    }).map(function (props) {\n        return props[tagName];\n    }).reverse().reduce(function (approvedTags, instanceTags) {\n        var instanceSeenTags = {};\n\n        instanceTags.filter(function (tag) {\n            var primaryAttributeKey = void 0;\n            var keys = Object.keys(tag);\n            for (var i = 0; i < keys.length; i++) {\n                var attributeKey = keys[i];\n                var lowerCaseAttributeKey = attributeKey.toLowerCase();\n\n                // Special rule with link tags, since rel and href are both primary tags, rel takes priority\n                if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && !(primaryAttributeKey === _HelmetConstants.TAG_PROPERTIES.REL && tag[primaryAttributeKey].toLowerCase() === \"canonical\") && !(lowerCaseAttributeKey === _HelmetConstants.TAG_PROPERTIES.REL && tag[lowerCaseAttributeKey].toLowerCase() === \"stylesheet\")) {\n                    primaryAttributeKey = lowerCaseAttributeKey;\n                }\n                // Special case for innerHTML which doesn't work lowercased\n                if (primaryAttributes.indexOf(attributeKey) !== -1 && (attributeKey === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || attributeKey === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT || attributeKey === _HelmetConstants.TAG_PROPERTIES.ITEM_PROP)) {\n                    primaryAttributeKey = attributeKey;\n                }\n            }\n\n            if (!primaryAttributeKey || !tag[primaryAttributeKey]) {\n                return false;\n            }\n\n            var value = tag[primaryAttributeKey].toLowerCase();\n\n            if (!approvedSeenTags[primaryAttributeKey]) {\n                approvedSeenTags[primaryAttributeKey] = {};\n            }\n\n            if (!instanceSeenTags[primaryAttributeKey]) {\n                instanceSeenTags[primaryAttributeKey] = {};\n            }\n\n            if (!approvedSeenTags[primaryAttributeKey][value]) {\n                instanceSeenTags[primaryAttributeKey][value] = true;\n                return true;\n            }\n\n            return false;\n        }).reverse().forEach(function (tag) {\n            return approvedTags.push(tag);\n        });\n\n        // Update seen tags with tags from this instance\n        var keys = Object.keys(instanceSeenTags);\n        for (var i = 0; i < keys.length; i++) {\n            var attributeKey = keys[i];\n            var tagUnion = (0, _objectAssign2.default)({}, approvedSeenTags[attributeKey], instanceSeenTags[attributeKey]);\n\n            approvedSeenTags[attributeKey] = tagUnion;\n        }\n\n        return approvedTags;\n    }, []).reverse();\n};\n\nvar getInnermostProperty = function getInnermostProperty(propsList, property) {\n    for (var i = propsList.length - 1; i >= 0; i--) {\n        var props = propsList[i];\n\n        if (props.hasOwnProperty(property)) {\n            return props[property];\n        }\n    }\n\n    return null;\n};\n\nvar reducePropsToState = function reducePropsToState(propsList) {\n    return {\n        baseTag: getBaseTagFromPropsList([_HelmetConstants.TAG_PROPERTIES.HREF], propsList),\n        bodyAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.BODY, propsList),\n        defer: getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.DEFER),\n        encode: getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.ENCODE_SPECIAL_CHARACTERS),\n        htmlAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.HTML, propsList),\n        linkTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.LINK, [_HelmetConstants.TAG_PROPERTIES.REL, _HelmetConstants.TAG_PROPERTIES.HREF], propsList),\n        metaTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.META, [_HelmetConstants.TAG_PROPERTIES.NAME, _HelmetConstants.TAG_PROPERTIES.CHARSET, _HelmetConstants.TAG_PROPERTIES.HTTPEQUIV, _HelmetConstants.TAG_PROPERTIES.PROPERTY, _HelmetConstants.TAG_PROPERTIES.ITEM_PROP], propsList),\n        noscriptTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.NOSCRIPT, [_HelmetConstants.TAG_PROPERTIES.INNER_HTML], propsList),\n        onChangeClientState: getOnChangeClientState(propsList),\n        scriptTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.SCRIPT, [_HelmetConstants.TAG_PROPERTIES.SRC, _HelmetConstants.TAG_PROPERTIES.INNER_HTML], propsList),\n        styleTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.STYLE, [_HelmetConstants.TAG_PROPERTIES.CSS_TEXT], propsList),\n        title: getTitleFromPropsList(propsList),\n        titleAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.TITLE, propsList)\n    };\n};\n\nvar rafPolyfill = function () {\n    var clock = Date.now();\n\n    return function (callback) {\n        var currentTime = Date.now();\n\n        if (currentTime - clock > 16) {\n            clock = currentTime;\n            callback(currentTime);\n        } else {\n            setTimeout(function () {\n                rafPolyfill(callback);\n            }, 0);\n        }\n    };\n}();\n\nvar cafPolyfill = function cafPolyfill(id) {\n    return clearTimeout(id);\n};\n\nvar requestAnimationFrame = typeof window !== \"undefined\" ? window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || rafPolyfill : global.requestAnimationFrame || rafPolyfill;\n\nvar cancelAnimationFrame = typeof window !== \"undefined\" ? window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || cafPolyfill : global.cancelAnimationFrame || cafPolyfill;\n\nvar warn = function warn(msg) {\n    return console && typeof console.warn === \"function\" && console.warn(msg);\n};\n\nvar _helmetCallback = null;\n\nvar handleClientStateChange = function handleClientStateChange(newState) {\n    if (_helmetCallback) {\n        cancelAnimationFrame(_helmetCallback);\n    }\n\n    if (newState.defer) {\n        _helmetCallback = requestAnimationFrame(function () {\n            commitTagChanges(newState, function () {\n                _helmetCallback = null;\n            });\n        });\n    } else {\n        commitTagChanges(newState);\n        _helmetCallback = null;\n    }\n};\n\nvar commitTagChanges = function commitTagChanges(newState, cb) {\n    var baseTag = newState.baseTag,\n        bodyAttributes = newState.bodyAttributes,\n        htmlAttributes = newState.htmlAttributes,\n        linkTags = newState.linkTags,\n        metaTags = newState.metaTags,\n        noscriptTags = newState.noscriptTags,\n        onChangeClientState = newState.onChangeClientState,\n        scriptTags = newState.scriptTags,\n        styleTags = newState.styleTags,\n        title = newState.title,\n        titleAttributes = newState.titleAttributes;\n\n    updateAttributes(_HelmetConstants.TAG_NAMES.BODY, bodyAttributes);\n    updateAttributes(_HelmetConstants.TAG_NAMES.HTML, htmlAttributes);\n\n    updateTitle(title, titleAttributes);\n\n    var tagUpdates = {\n        baseTag: updateTags(_HelmetConstants.TAG_NAMES.BASE, baseTag),\n        linkTags: updateTags(_HelmetConstants.TAG_NAMES.LINK, linkTags),\n        metaTags: updateTags(_HelmetConstants.TAG_NAMES.META, metaTags),\n        noscriptTags: updateTags(_HelmetConstants.TAG_NAMES.NOSCRIPT, noscriptTags),\n        scriptTags: updateTags(_HelmetConstants.TAG_NAMES.SCRIPT, scriptTags),\n        styleTags: updateTags(_HelmetConstants.TAG_NAMES.STYLE, styleTags)\n    };\n\n    var addedTags = {};\n    var removedTags = {};\n\n    Object.keys(tagUpdates).forEach(function (tagType) {\n        var _tagUpdates$tagType = tagUpdates[tagType],\n            newTags = _tagUpdates$tagType.newTags,\n            oldTags = _tagUpdates$tagType.oldTags;\n\n\n        if (newTags.length) {\n            addedTags[tagType] = newTags;\n        }\n        if (oldTags.length) {\n            removedTags[tagType] = tagUpdates[tagType].oldTags;\n        }\n    });\n\n    cb && cb();\n\n    onChangeClientState(newState, addedTags, removedTags);\n};\n\nvar flattenArray = function flattenArray(possibleArray) {\n    return Array.isArray(possibleArray) ? possibleArray.join(\"\") : possibleArray;\n};\n\nvar updateTitle = function updateTitle(title, attributes) {\n    if (typeof title !== \"undefined\" && document.title !== title) {\n        document.title = flattenArray(title);\n    }\n\n    updateAttributes(_HelmetConstants.TAG_NAMES.TITLE, attributes);\n};\n\nvar updateAttributes = function updateAttributes(tagName, attributes) {\n    var elementTag = document.getElementsByTagName(tagName)[0];\n\n    if (!elementTag) {\n        return;\n    }\n\n    var helmetAttributeString = elementTag.getAttribute(_HelmetConstants.HELMET_ATTRIBUTE);\n    var helmetAttributes = helmetAttributeString ? helmetAttributeString.split(\",\") : [];\n    var attributesToRemove = [].concat(helmetAttributes);\n    var attributeKeys = Object.keys(attributes);\n\n    for (var i = 0; i < attributeKeys.length; i++) {\n        var attribute = attributeKeys[i];\n        var value = attributes[attribute] || \"\";\n\n        if (elementTag.getAttribute(attribute) !== value) {\n            elementTag.setAttribute(attribute, value);\n        }\n\n        if (helmetAttributes.indexOf(attribute) === -1) {\n            helmetAttributes.push(attribute);\n        }\n\n        var indexToSave = attributesToRemove.indexOf(attribute);\n        if (indexToSave !== -1) {\n            attributesToRemove.splice(indexToSave, 1);\n        }\n    }\n\n    for (var _i = attributesToRemove.length - 1; _i >= 0; _i--) {\n        elementTag.removeAttribute(attributesToRemove[_i]);\n    }\n\n    if (helmetAttributes.length === attributesToRemove.length) {\n        elementTag.removeAttribute(_HelmetConstants.HELMET_ATTRIBUTE);\n    } else if (elementTag.getAttribute(_HelmetConstants.HELMET_ATTRIBUTE) !== attributeKeys.join(\",\")) {\n        elementTag.setAttribute(_HelmetConstants.HELMET_ATTRIBUTE, attributeKeys.join(\",\"));\n    }\n};\n\nvar updateTags = function updateTags(type, tags) {\n    var headElement = document.head || document.querySelector(_HelmetConstants.TAG_NAMES.HEAD);\n    var tagNodes = headElement.querySelectorAll(type + \"[\" + _HelmetConstants.HELMET_ATTRIBUTE + \"]\");\n    var oldTags = Array.prototype.slice.call(tagNodes);\n    var newTags = [];\n    var indexToDelete = void 0;\n\n    if (tags && tags.length) {\n        tags.forEach(function (tag) {\n            var newElement = document.createElement(type);\n\n            for (var attribute in tag) {\n                if (tag.hasOwnProperty(attribute)) {\n                    if (attribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML) {\n                        newElement.innerHTML = tag.innerHTML;\n                    } else if (attribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT) {\n                        if (newElement.styleSheet) {\n                            newElement.styleSheet.cssText = tag.cssText;\n                        } else {\n                            newElement.appendChild(document.createTextNode(tag.cssText));\n                        }\n                    } else {\n                        var value = typeof tag[attribute] === \"undefined\" ? \"\" : tag[attribute];\n                        newElement.setAttribute(attribute, value);\n                    }\n                }\n            }\n\n            newElement.setAttribute(_HelmetConstants.HELMET_ATTRIBUTE, \"true\");\n\n            // Remove a duplicate tag from domTagstoRemove, so it isn't cleared.\n            if (oldTags.some(function (existingTag, index) {\n                indexToDelete = index;\n                return newElement.isEqualNode(existingTag);\n            })) {\n                oldTags.splice(indexToDelete, 1);\n            } else {\n                newTags.push(newElement);\n            }\n        });\n    }\n\n    oldTags.forEach(function (tag) {\n        return tag.parentNode.removeChild(tag);\n    });\n    newTags.forEach(function (tag) {\n        return headElement.appendChild(tag);\n    });\n\n    return {\n        oldTags: oldTags,\n        newTags: newTags\n    };\n};\n\nvar generateElementAttributesAsString = function generateElementAttributesAsString(attributes) {\n    return Object.keys(attributes).reduce(function (str, key) {\n        var attr = typeof attributes[key] !== \"undefined\" ? key + \"=\\\"\" + attributes[key] + \"\\\"\" : \"\" + key;\n        return str ? str + \" \" + attr : attr;\n    }, \"\");\n};\n\nvar generateTitleAsString = function generateTitleAsString(type, title, attributes, encode) {\n    var attributeString = generateElementAttributesAsString(attributes);\n    var flattenedTitle = flattenArray(title);\n    return attributeString ? \"<\" + type + \" \" + _HelmetConstants.HELMET_ATTRIBUTE + \"=\\\"true\\\" \" + attributeString + \">\" + encodeSpecialCharacters(flattenedTitle, encode) + \"</\" + type + \">\" : \"<\" + type + \" \" + _HelmetConstants.HELMET_ATTRIBUTE + \"=\\\"true\\\">\" + encodeSpecialCharacters(flattenedTitle, encode) + \"</\" + type + \">\";\n};\n\nvar generateTagsAsString = function generateTagsAsString(type, tags, encode) {\n    return tags.reduce(function (str, tag) {\n        var attributeHtml = Object.keys(tag).filter(function (attribute) {\n            return !(attribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || attribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT);\n        }).reduce(function (string, attribute) {\n            var attr = typeof tag[attribute] === \"undefined\" ? attribute : attribute + \"=\\\"\" + encodeSpecialCharacters(tag[attribute], encode) + \"\\\"\";\n            return string ? string + \" \" + attr : attr;\n        }, \"\");\n\n        var tagContent = tag.innerHTML || tag.cssText || \"\";\n\n        var isSelfClosing = _HelmetConstants.SELF_CLOSING_TAGS.indexOf(type) === -1;\n\n        return str + \"<\" + type + \" \" + _HelmetConstants.HELMET_ATTRIBUTE + \"=\\\"true\\\" \" + attributeHtml + (isSelfClosing ? \"/>\" : \">\" + tagContent + \"</\" + type + \">\");\n    }, \"\");\n};\n\nvar convertElementAttributestoReactProps = function convertElementAttributestoReactProps(attributes) {\n    var initProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return Object.keys(attributes).reduce(function (obj, key) {\n        obj[_HelmetConstants.REACT_TAG_MAP[key] || key] = attributes[key];\n        return obj;\n    }, initProps);\n};\n\nvar convertReactPropstoHtmlAttributes = function convertReactPropstoHtmlAttributes(props) {\n    var initAttributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return Object.keys(props).reduce(function (obj, key) {\n        obj[_HelmetConstants.HTML_TAG_MAP[key] || key] = props[key];\n        return obj;\n    }, initAttributes);\n};\n\nvar generateTitleAsReactComponent = function generateTitleAsReactComponent(type, title, attributes) {\n    var _initProps;\n\n    // assigning into an array to define toString function on it\n    var initProps = (_initProps = {\n        key: title\n    }, _initProps[_HelmetConstants.HELMET_ATTRIBUTE] = true, _initProps);\n    var props = convertElementAttributestoReactProps(attributes, initProps);\n\n    return [_react2.default.createElement(_HelmetConstants.TAG_NAMES.TITLE, props, title)];\n};\n\nvar generateTagsAsReactComponent = function generateTagsAsReactComponent(type, tags) {\n    return tags.map(function (tag, i) {\n        var _mappedTag;\n\n        var mappedTag = (_mappedTag = {\n            key: i\n        }, _mappedTag[_HelmetConstants.HELMET_ATTRIBUTE] = true, _mappedTag);\n\n        Object.keys(tag).forEach(function (attribute) {\n            var mappedAttribute = _HelmetConstants.REACT_TAG_MAP[attribute] || attribute;\n\n            if (mappedAttribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || mappedAttribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT) {\n                var content = tag.innerHTML || tag.cssText;\n                mappedTag.dangerouslySetInnerHTML = { __html: content };\n            } else {\n                mappedTag[mappedAttribute] = tag[attribute];\n            }\n        });\n\n        return _react2.default.createElement(type, mappedTag);\n    });\n};\n\nvar getMethodsForTag = function getMethodsForTag(type, tags, encode) {\n    switch (type) {\n        case _HelmetConstants.TAG_NAMES.TITLE:\n            return {\n                toComponent: function toComponent() {\n                    return generateTitleAsReactComponent(type, tags.title, tags.titleAttributes, encode);\n                },\n                toString: function toString() {\n                    return generateTitleAsString(type, tags.title, tags.titleAttributes, encode);\n                }\n            };\n        case _HelmetConstants.ATTRIBUTE_NAMES.BODY:\n        case _HelmetConstants.ATTRIBUTE_NAMES.HTML:\n            return {\n                toComponent: function toComponent() {\n                    return convertElementAttributestoReactProps(tags);\n                },\n                toString: function toString() {\n                    return generateElementAttributesAsString(tags);\n                }\n            };\n        default:\n            return {\n                toComponent: function toComponent() {\n                    return generateTagsAsReactComponent(type, tags);\n                },\n                toString: function toString() {\n                    return generateTagsAsString(type, tags, encode);\n                }\n            };\n    }\n};\n\nvar mapStateOnServer = function mapStateOnServer(_ref) {\n    var baseTag = _ref.baseTag,\n        bodyAttributes = _ref.bodyAttributes,\n        encode = _ref.encode,\n        htmlAttributes = _ref.htmlAttributes,\n        linkTags = _ref.linkTags,\n        metaTags = _ref.metaTags,\n        noscriptTags = _ref.noscriptTags,\n        scriptTags = _ref.scriptTags,\n        styleTags = _ref.styleTags,\n        _ref$title = _ref.title,\n        title = _ref$title === undefined ? \"\" : _ref$title,\n        titleAttributes = _ref.titleAttributes;\n    return {\n        base: getMethodsForTag(_HelmetConstants.TAG_NAMES.BASE, baseTag, encode),\n        bodyAttributes: getMethodsForTag(_HelmetConstants.ATTRIBUTE_NAMES.BODY, bodyAttributes, encode),\n        htmlAttributes: getMethodsForTag(_HelmetConstants.ATTRIBUTE_NAMES.HTML, htmlAttributes, encode),\n        link: getMethodsForTag(_HelmetConstants.TAG_NAMES.LINK, linkTags, encode),\n        meta: getMethodsForTag(_HelmetConstants.TAG_NAMES.META, metaTags, encode),\n        noscript: getMethodsForTag(_HelmetConstants.TAG_NAMES.NOSCRIPT, noscriptTags, encode),\n        script: getMethodsForTag(_HelmetConstants.TAG_NAMES.SCRIPT, scriptTags, encode),\n        style: getMethodsForTag(_HelmetConstants.TAG_NAMES.STYLE, styleTags, encode),\n        title: getMethodsForTag(_HelmetConstants.TAG_NAMES.TITLE, { title: title, titleAttributes: titleAttributes }, encode)\n    };\n};\n\nexports.convertReactPropstoHtmlAttributes = convertReactPropstoHtmlAttributes;\nexports.handleClientStateChange = handleClientStateChange;\nexports.mapStateOnServer = mapStateOnServer;\nexports.reducePropsToState = reducePropsToState;\nexports.requestAnimationFrame = requestAnimationFrame;\nexports.warn = warn;"],"sourceRoot":""}