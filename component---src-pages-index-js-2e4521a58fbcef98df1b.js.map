{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/image.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_image__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","IndexPage","a","createElement","title","style","marginLeft","maxWidth","marginBottom","overflow","class","width","clear","color","fontWeight","href","Image","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","query","render","data","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","fluid","placeholderImage","childImageSharp","_public_static_d_3892351302_json__WEBPACK_IMPORTED_MODULE_0__","SEO","_ref","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired","Header","menuLinks","react_default","display","flex","listStyle","map","link","div","key","gatsby_browser_entry","activeClassName","activeStyle","padding","fontFamily","textDecoration","to","siteTitle","Layout","children","Fragment","className","verticalAlign","margin","height","paddingTop","components_image","position","bottom","header","_3436215879","node"],"mappings":"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","file":"component---src-pages-index-js-2e4521a58fbcef98df1b.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../components/layout\"\nimport Image from \"../components/image\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <div\n          style={{ \n            marginLeft: `700px`,\n            maxWidth: `200px`, \n            marginBottom: `1.45rem`, \n            overflow: `visible`}}>\n          <Image />\n        </div>\n    <h1 style={{ maxWidth: `500px`}}>Apa Kabar?</h1>\n    <div class=\"outer-container\">\n      <div class=\"inner-container\"\n          style={{ \n            width: `750px`, \n            clear: `right`, \n            maxWidth: `750px`, \n            marginBottom: `1.45rem` }}>\n        <p>It's an Indonesian greetings means \"how are you?\"</p>\n        <p>Hi, my full name is <span style={{color: `#7E5920`, fontWeight: `600`}}>Thea Olivia Yusuf.</span> You can address me as either <span style={{color: `#7E5920`, fontWeight: `600`}}>Thea Olivia </span> or <span style={{color: `#7E5920`, fontWeight: `600`}}>Thea Yusuf.</span></p>\n        <p>I am mainly using Python and currently doing my personal e-Commerce project with Django and Google Cloud Platform for its backend and React.js for its frontend. Mainly doing backend but open to do other things at certain and each have different tolerance. Interested about product performance measuring with microservices design and scaling techniques. Love to do competitive programming where I mostly use C++ and learn something new such as new technology and algorithms.</p>\n        <p>I love new experiences and don't mind relocate to a new place. In my freetime, I enjoy playing piano, listen to music, reading books and playing with fluffy cats and dogs.</p>\n        <p>Want to know me more? kindly check out my <a style={{ color: `#083D77`}}href=\"https://bit.ly/2Q8smIb\"><b>résumé.</b></a></p>\n\n      </div>\n    </div>\n\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst Image = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"pp.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 200) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default Image\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\n//import TransitionLink from 'gatsby-plugin-transition-link'\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ menuLinks }) => (\n  <nav>\n    <ul style={{ display: 'flex', flex: 1, listStyle: 'none', marginLeft: `auto` }}>\n      {menuLinks.map(link =>\n        <li div=\"navbar\" key={link.link}>\n          <Link activeClassName=\"nav-style\"\n            activeStyle = {{\n              color: `#ffc98b`\n            }}\n            style = {{\n              color: `#1C3A13`,\n              padding: '1.5rem',\n              fontFamily: 'Quattrocento Sans', \n              fontWeight: '700', \n              textDecoration: 0,\n              }}\n            to = {link.link}>{link.name}\n          </Link>\n        </li>\n      )}\n    </ul>\n  </nav>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n//import TransitionLink from 'gatsby-plugin-transition-link'\nimport Image from \"../components/image\"\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            menuLinks {\n              name\n              link\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <div className=\"outer-container\">\n          <div \n            style={{\n              display: `table-cell`,\n              verticalAlign: `middle`,\n              margin: `auto auto auto auto`,\n              width: 960,\n              height: 700,\n              maxWidth: 960,\n              padding: `2rem 1.0875rem 0px`,\n              paddingTop: 0,\n            }}\n          >\n            <main>{children}</main>\n            {/* <footer>\n              © {new Date().getFullYear()}, Built with\n              {` `}\n              <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n            </footer> */}\n            \n          </div>\n          <div\n          style={{ \n            maxWidth: `100px`, \n            marginBottom: `1.45rem`, \n            overflow: `visible`}}>\n          <Image />\n        </div>\n          <div style={{position:`absolute`, bottom: 0}} className=\"inner-container\">\n            <Header menuLinks={data.site.siteMetadata.menuLinks} />\n          </div>  \n        </div>  \n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}