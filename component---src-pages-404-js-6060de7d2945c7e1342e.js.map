{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/image.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","Image","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","query","render","data","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","fluid","placeholderImage","childImageSharp","_public_static_d_3892351302_json__WEBPACK_IMPORTED_MODULE_0__","SEO","_ref","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired","Header","menuLinks","react_default","style","display","flex","listStyle","marginLeft","map","link","div","key","gatsby_browser_entry","activeClassName","activeStyle","color","padding","fontFamily","fontWeight","textDecoration","to","siteTitle","Layout","children","Fragment","className","verticalAlign","margin","width","height","maxWidth","paddingTop","marginBottom","overflow","components_image","position","bottom","header","_3436215879","node"],"mappings":"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","file":"component---src-pages-404-js-6060de7d2945c7e1342e.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>Whoops :(</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst Image = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"pp.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 200) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default Image\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\n//import TransitionLink from 'gatsby-plugin-transition-link'\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ menuLinks }) => (\n  <nav>\n    <ul style={{ display: 'flex', flex: 1, listStyle: 'none', marginLeft: `auto` }}>\n      {menuLinks.map(link =>\n        <li div=\"navbar\" key={link.link}>\n          <Link activeClassName=\"nav-style\"\n            activeStyle = {{\n              color: `#ffc98b`\n            }}\n            style = {{\n              color: `#1C3A13`,\n              padding: '1.5rem',\n              fontFamily: 'Quattrocento Sans', \n              fontWeight: '700', \n              textDecoration: 0,\n              }}\n            to = {link.link}>{link.name}\n          </Link>\n        </li>\n      )}\n    </ul>\n  </nav>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n//import TransitionLink from 'gatsby-plugin-transition-link'\nimport Image from \"../components/image\"\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            menuLinks {\n              name\n              link\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <div className=\"outer-container\">\n          <div \n            style={{\n              display: `table-cell`,\n              verticalAlign: `middle`,\n              margin: `auto auto auto auto`,\n              width: 960,\n              height: 700,\n              maxWidth: 960,\n              padding: `2rem 1.0875rem 0px`,\n              paddingTop: 0,\n            }}\n          >\n            <main>{children}</main>\n            {/* <footer>\n              Â© {new Date().getFullYear()}, Built with\n              {` `}\n              <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n            </footer> */}\n            \n          </div>\n          <div\n          style={{ \n            maxWidth: `100px`, \n            marginBottom: `1.45rem`, \n            overflow: `visible`}}>\n          <Image />\n        </div>\n          <div style={{position:`absolute`, bottom: 0}} className=\"inner-container\">\n            <Header menuLinks={data.site.siteMetadata.menuLinks} />\n          </div>  \n        </div>  \n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}